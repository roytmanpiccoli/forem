<div class="flex items-center">
  <% cache "activity-profile-pic-#{notification.json_data['user']['id']}-#{notification.json_data['user']['profile_image_90']}" do %>
    <%= render "notifications/shared/profile_pic", json_data: notification.json_data %>
  <% end %>
  <div class="notification__content">
    <% category = notification.json_data["reaction"]["category"] %>
    <% if notification.json_data["reaction"]["reactable"]["title"].blank? %>
      <% title_link = link_to(
           t("views.notifications.reacted.your.#{notification.json_data['reaction']['reactable_type'].downcase}"),
           notification.json_data["reaction"]["reactable"]["path"],
           class: "crayons-link fw-bold",
         ) %>
    <% else %>
      <% title_link = link_to(
           sanitize(notification.json_data["reaction"]["reactable"]["title"]),
           notification.json_data["reaction"]["reactable"]["path"],
           class: "crayons-link fw-bold",
         ) %>
    <% end %>
    <%= t("views.notifications.reacted.verb_html",
          count: 1,
          start: "",
          actors: link_to(notification.json_data["user"]["name"], notification.json_data["user"]["path"], class: "crayons-link fw-bold"),
          # title is blank when it's a comment with only an image, for example
          title: title_link,
          end: "",
          reactions: tag.span(crayons_icon_tag(reaction_image(category), class: "reaction-image mx-1 reaction-icon--#{category}", title: t("views.reactions.category.#{category}")))) %>
  </div>
</div>
