---
http_interactions:
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Sep 2021 13:02:27 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 687eb16dfb6217a1-EWR
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 01 Sep 2021 13:17:27 GMT
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://accounts.google.com https://getpocket.com
        https://medium.com https://*.medium.com https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://lightstep.medium.systems https://*.branch.io ''self''; font-src data:
        https://*.amazonaws.com https://*.medium.com https://glyph.medium.com https://medium.com
        https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Medium-Fulfilled-By:
      - edgy/4, valencia/main-20210830-201022-425c0ef81a
      Pragma:
      - private
      X-Content-Type-Options:
      - nosniff
      X-Envoy-Upstream-Service-Time:
      - '64'
      X-Frame-Options:
      - sameorigin
      X-Obvious-Info:
      - 20210901-0024-root,b8e32991
      X-Obvious-Tid:
      - 1630501347544:ef1712ef3267
      X-Opentracing:
      - '{"ot-tracer-spanid":"3885d4b9071c98ee","ot-tracer-traceid":"22779077d3216c60","ot-tracer-sampled":"true"}'
      X-Powered-By:
      - Medium
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 Sep 2021 13:02:27 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Wed, 01 Sep 2021 13:02:27 GMT
      Etag:
      - '"6e9ce468364372fba39e1ccb482ac97b"'
      Last-Modified:
      - Wed, 01 Sep 2021 01:15:01 GMT
      Server:
      - nginx
      Strict-Transport-Security:
      - max-age=15724800
      X-Amz-Id-2:
      - GZhoO+9qQvtXfLAvZzduDYHnrt/FxKQEw1s6LMFUWVKpLmocVcTga1rxlsSxQLOhgM4BijoEYdk=
      X-Amz-Request-Id:
      - PKNATR0MB6BP5HWT
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '312711'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJzcyB2ZXJzaW9uPSIyLjAiCiAgeG1sOmJhc2U9Imh0dHBzOi8vY2lyY2xlY2kuY29tLyIKICB4bWxuczphdG9tPSJodHRwOi8vd3d3LnczLm9yZy8yMDA1L0F0b20iCiAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIj4KICA8Y2hhbm5lbD4KICAgIDx0aXRsZT5UaGUgQ2lyY2xlQ0kgQmxvZyBGZWVkIC0gQ2lyY2xlQ0k8L3RpdGxlPgogICAgPGRlc2NyaXB0aW9uPlN0YXkgdXAgdG8gZGF0ZSB3aXRoIHRoZSBsYXRlc3QgbmV3cywgdXBkYXRlcywgYW5kIGhhY2tzIGZyb20gQ2lyY2xlQ0kuPC9kZXNjcmlwdGlvbj4KICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvPC9saW5rPgogICAgPGF0b206bGluayBocmVmPSJodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2ZlZWQueG1sIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIC8+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5EZXBsb3lpbmcgeW91ciBHcmFkbGUgQnVpbGQgQ2FjaGUgTm9kZSB1c2luZyBHQ1A8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvZGVwbG95aW5nLWdyYWRsZS1idWlsZC1jYWNoZS1ub2RlLXRvLWdjcC88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+RnJpLCAyNyBBdWcgMjAyMSAxMTowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9kZXBsb3lpbmctZ3JhZGxlLWJ1aWxkLWNhY2hlLW5vZGUtdG8tZ2NwLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPlJvZ2VyIFRhcmFjaGE8L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7VGhpcyB0dXRvcmlhbCBpcyBhIGZvbGxvdy11cCB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvdHVyYm9jaGFyZ2luZy15b3VyLWFuZHJvaWQtZ3JhZGxlLWJ1aWxkcy11c2luZy1idWlsZC1jYWNoZS8mcXVvdDsmZ3Q7VHVyYm9DaGFyZ2luZyB5b3VyIEFuZHJvaWQgR3JhZGxlIGJ1aWxkcyB1c2luZyBidWlsZCBjYWNoZSZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIGtleSBmb2N1cyBvZiB0aGlzIHBvc3QgaXMgdGhlIHJlbW90ZSBidWlsZCBjYWNoZSwgYSBidWlsZCBzcGVlZCBhY2NlbGVyYXRpb24gdGVjaG5vbG9neSB0aGF0IGNhbiBiZSBpbXBsZW1lbnRlZCBmb3IgYm90aCBsb2NhbCBhbmQgQ0kgYnVpbGRzLiBUaGlzIGlzIGEgdGVjaG5vbG9neSB3b3J0aCBrbm93aW5nIGFib3V0IGJlY2F1c2U6Jmx0Oy9wJmd0OwombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O1dpdGhvdXQgYSBjYWNoZSBzeXN0ZW0gaW4gcGxhY2UsIGV2ZXJ5IGJ1aWxkIGlzIGEgbmV3LCBjbGVhbiBidWlsZCBzbyB0aGUgZW50aXJlIHByb2plY3QgYnVpbGRzIGZyb20gc2NyYXRjaCwgZXZlbiBmb3IgYSBzbWFsbCBjaGFuZ2UuJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtwJmd0O0dyYWRsZSBwcm92aWRlcyBhIGJ1aWxkIGNhY2hlIG5vZGUgYXZhaWxhYmxlIGFzIGEgRG9ja2VyIGltYWdlLiBZb3UgY2FuIGhvc3QgdGhpcyBpbWFnZSBpbiBhIG51bWJlciBvZiB3YXlzLiBJbiB0aGlzIHR1dG9yaWFsLCBJIHdpbGwgbGVhZCB5b3UgdGhyb3VnaCB0aGUgc3RlcHMgb2Ygc2V0dGluZyB1cCBhIGJ1aWxkIGNhY2hlIG5vZGUgb24gR0NQIChHb29nbGUgQ2xvdWQgUGxhdGZvcm0pLCBhIGZyZWUgdG9vbC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7UHJlcmVxdWlzaXRlcyZsdDsvaDImZ3Q7CiZsdDtwJmd0O1RvIGZvbGxvdyB0aGlzIHR1dG9yaWFsLCBhIGZldyB0aGluZ3MgYXJlIHJlcXVpcmVkOiZsdDsvcCZndDsKCiZsdDtvbCZndDsKICAmbHQ7bGkmZ3Q7QmFzaWMgdW5kZXJzdGFuZGluZyBvZiB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dyYWRsZS5vcmcvJnF1b3Q7Jmd0O0dyYWRsZSBidWlsZCB0b29sJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0tub3dsZWRnZSBvZiBob3cgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9sYW5ndWFnZS1hbmRyb2lkLyZxdW90OyZndDtzZXQgdXAgYW4gQW5kcm9pZCBwcm9qZWN0IG9uIENpcmNsZUNJJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0tub3dsZWRnZSBvZiB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS9zdHVkaW8vYnVpbGQmcXVvdDsmZ3Q7QW5kcm9pZCBidWlsZCBwcm9jZXNzJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0Jhc2ljIGtub3dsZWRnZSBvZiBHQ1AgdmlydHVhbCBtYWNoaW5lIChWTSkgaW5zdGFuY2VzLCBmaXJld2FsbHMsIGFuZCBob3cgYm90aCB3b3JrJmx0Oy9saSZndDsKJmx0Oy9vbCZndDsKCiZsdDtoMiZndDtDcmVhdGUgYW5kIGFjY2VzcyB5b3VyIEdvb2dsZSBDb25zb2xlIGFjY291bnQmbHQ7L2gyJmd0OwombHQ7cCZndDtUbyBnZXQgc3RhcnRlZCwgeW91IHdpbGwgbmVlZCB0byBjcmVhdGUgb3IgYWNjZXNzIHlvdXIgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NvbnNvbGUuY2xvdWQuZ29vZ2xlLmNvbS8mcXVvdDsmZ3Q7R29vZ2xlIENsb3VkIFBsYXRmb3JtIGFjY291bnQmbHQ7L2EmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtzdHJvbmcmZ3Q7Tm90ZTombHQ7L3N0cm9uZyZndDsgJmx0O2kmZ3Q7SWYgeW91IGFyZSBzZXR0aW5nIHVwIHlvdXIgY29uc29sZSBmb3IgdGhlIGZpcnN0IHRpbWUsIGFncmVlIHRvIHRlcm1zIG9mIHNlcnZpY2UsIHRoZW4gY2xpY2sgdGhlICZsdDtzdHJvbmcmZ3Q7QWdyZWUgYW5kIENvbnRpbnVlJmx0Oy9zdHJvbmcmZ3Q7IGJ1dHRvbi4mbHQ7L2kmZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O1Rlcm1zIG9mIFNlcnZpY2UmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGFjY2VzcyB0aGUgZnJlZSB0aWVyIHByb2R1Y3RzIG9uIEdDUCwgc2VsZWN0IHRoZSAmbHQ7c3Ryb25nJmd0O0dldHRpbmcgU3RhcnRlZCZsdDsvc3Ryb25nJmd0OyBvcHRpb24gZnJvbSB0aGUgTmF2aWdhdGlvbiBtZW51LiBUaGVuIGNsaWNrIHRoZSAmbHQ7c3Ryb25nJmd0O0dldCBTdGFydGVkIEZvciBGcmVlJmx0Oy9zdHJvbmcmZ3Q7IGJ1dHRvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7R29vZ2xlIENvbnNvbGUgRGFzaGJvYXJkJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtTdGFydCBieSB2ZXJpZnlpbmcgeW91ciBhY2NvdW50IGluZm9ybWF0aW9uLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtBY2NvdW50IEluZm9ybWF0aW9uJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTAzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtOZXh0LCBlbnRlciBhIHZhbGlkIHBob25lIG51bWJlci4gR29vZ2xlIHdpbGwgc2VuZCB5b3UgYSBjb25maXJtYXRpb24gdGV4dC4gQWZ0ZXIgeW91IGNvbXBsZXRlIHRoZSB2ZXJpZmljYXRpb24sIGNsaWNrIHRoZSAmbHQ7c3Ryb25nJmd0O0NvbnRpbnVlJmx0Oy9zdHJvbmcmZ3Q7IGJ1dHRvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7SWRlbnRpdHkgVmVyaWZpY2F0aW9uJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtBbHRob3VnaCB0aGUgbmV4dCBzdGVwIHJlcXVpcmVzIHlvdSB0byBlbnRlciB5b3UgcGF5bWVudCBpbmZvcm1hdGlvbiwgeW91IHdpbGwgbm90IGJlIGNoYXJnZWQgdW5sZXNzIHlvdSB0dXJuIG9uIGF1dG9tYXRpYyBiaWxsaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtQYXltZW50IEluZm9ybWF0aW9uIFZlcmlmaWNhdGlvbiZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2hlbiB5b3Ugc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlIHRoZSB2ZXJpZmljYXRpb24gcHJvY2VzcywgeW91IHdpbGwgc2VlIGEgY29uZmlybWF0aW9uIG1lc3NhZ2UuIENsaWNrICZsdDtzdHJvbmcmZ3Q7R290IGl0Jmx0Oy9zdHJvbmcmZ3Q7IHRvIHByb2NlZWQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgeW91IGhhdmUgc2V0IHVwIHRoZSBjb25zb2xlIHRvIHVzZSB0aGUgZnJlZSB0aWVyIHByb2R1Y3RzLCB5b3UgY2FuIGdvIG9uIHRvIHRoZSBidWlsZCBjYWNoZSBub2RlIHNldHVwLiZsdDsvcCZndDsKCiZsdDtoMiZndDtTZXR0aW5nIHVwIHRoZSBidWlsZCBjYWNoZSBub2RlJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7VGhlIGJ1aWxkIGNhY2hlIG5vZGUgc2V0dXAgaXMgYSAyIHBhcnQgcHJvY2VzcyBvbiB0aGUgR0NQIGluc3RhbmNlOiZsdDsvcCZndDsKCiZsdDtvbCZndDsKICAmbHQ7bGkmZ3Q7Q3JlYXRpbmcgYSBmaXJld2FsbCBydWxlIHVuZGVyIHRoZSAmbHQ7c3Ryb25nJmd0O1ZQQyBOZXR3b3JrJmx0Oy9zdHJvbmcmZ3Q7IHNlY3Rpb24mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtDcmVhdGluZyBhIFZNIGluc3RhbmNlIHVuZGVyIHRoZSAmbHQ7c3Ryb25nJmd0O0NvbXB1dGUgRW5naW5lJmx0Oy9zdHJvbmcmZ3Q7IHNlY3Rpb24mbHQ7L2xpJmd0OwombHQ7L29sJmd0OwoKJmx0O3AmZ3Q7QnkgbGV2ZXJhZ2luZyB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2RvY3MuZ3JhZGxlLmNvbS9idWlsZC1jYWNoZS1ub2RlLyZxdW90OyZndDtCdWlsZCBDYWNoZSBOb2RlIFVzZXIgTWFudWFsJmx0Oy9hJmd0OyBhbmQgYWRkaW5nIHNvbWUgY3VzdG9taXplZCBjb25maWd1cmF0aW9ucyBmb3IgR0NQLCB5b3UgY2FuIHNldCB1cCB5b3VyIGJ1aWxkIGNhY2hlIG5vZGVzLiZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25maWd1cmluZyBhIFZpcnR1YWwgUHJpdmF0ZSBDbG91ZCAoVlBDKSBuZXR3b3JrJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7QSBWUEMgbmV0d29yayBpcyBhIHZpcnR1YWwgdmVyc2lvbiBvZiBhIHBoeXNpY2FsIG5ldHdvcmssIGltcGxlbWVudGVkIGluc2lkZSBvZiBHb29nbGXigJlzIHByb2R1Y3Rpb24gbmV0d29yay4gSXQgZG9lcyBhIGJ1bmNoIG9mIHRoaW5ncyBidXQgb2YgaW1wb3J0YW5jZSBpcyB0aGF0IGl0IHByb3ZpZGVzIGNvbm5lY3Rpdml0eSBmb3IgeW91ciBDb21wdXRlIEVuZ2luZSBWaXJ0dWFsIE1hY2hpbmUgKFZNKSBpbnN0YW5jZXMuIFRoaXMgaXMgaW1wb3J0YW50IGJlY2F1c2UgYnkgZGVmYXVsdCwgaW5jb21pbmcgdHJhZmZpYyBmcm9tIG91dHNpZGUgeW91ciBuZXR3b3JrIGlzIGJsb2NrZWQuIFRoYXQgbWVhbnMgd2UgbmVlZCB0byBjcmVhdGUgYSBmaXJld2FsbCBydWxlIHRvIGNvbnRyb2wgaW5jb21pbmcgb3Igb3V0Z29pbmcgdHJhZmZpYyB0byBvdXIgYnVpbGQgY2FjaGUgbm9kZSBWTSBpbnN0YW5jZS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgdGhlIGZpcmV3YWxsIHJ1bGUmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7T24gdGhlIEdvb2dsZSBjb25zb2xlIGRhc2hib2FyZCwgbmF2aWdhdGUgdG86ICZsdDtjb2RlJmd0O05ldHdvcmtpbmcgJmFtcDtndDsgVlBDIE5ldHdvcmsgJmFtcDtndDsgRmlyZXdhbGwmbHQ7L2NvZGUmZ3Q7LiBDbGljayAmbHQ7c3Ryb25nJmd0O0VuYWJsZSZsdDsvc3Ryb25nJmd0OyB0byBlbmFibGUgQ29tcHV0ZSBFbmdpbmUgaWYgeW91IGFyZSBwcm9tcHRlZCB0byBkbyBzby4gVGhlbiwgY2xpY2sgdGhlICZsdDtzdHJvbmcmZ3Q7Q3JlYXRlIEZpcmV3YWxsIFJ1bGUmbHQ7L3N0cm9uZyZndDsgYnV0dG9uLiZsdDsvcCZndDsKCiZsdDtwJmd0O0VudGVyIGZpcmV3YWxsIHJ1bGUgZGV0YWlsczombHQ7L3AmZ3Q7CiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7SW4gdGhlIE5hbWUgZmllbGQsIGVudGVyICZsdDtjb2RlJmd0O2dyYWRsZS1maXJld2FsbC1ydWxlJmx0Oy9jb2RlJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0luIHRoZSBEZXNjcmlwdGlvbiBmaWVsZCwgZW50ZXIgJmx0O2NvZGUmZ3Q7SW5ncmVzcyBmaXJld2FsbCBydWxlIGZvciB0aGUgR3JhZGxlIGJ1aWxkIGNhY2hlIG5vZGUmbHQ7L2NvZGUmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7U3BlY2lmeSB0YXJnZXQgdGFncyBhcyBncmFkbGUtYnVpbGQtY2FjaGUtbm9kZS10YWcmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtFbnRlciAmbHQ7Y29kZSZndDswLjAuMC4wLzAgMTkyLjE2OC4yLjAvMjQmbHQ7L2NvZGUmZ3Q7IGFzIHNvdXJjZSBJUCByYW5nZXMmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtTcGVjaWZ5IHByb3RvY29scyBhbmQgcG9ydHMgYXMgJmx0O2NvZGUmZ3Q7dGNwOiA1MDcxJmx0Oy9jb2RlJmd0OyZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtXaGVuIHRoZSBkZXRhaWxzIGFyZSBlbnRlcmVkLCBjbGljayB0aGUgJmx0O3N0cm9uZyZndDtDcmVhdGUmbHQ7L3N0cm9uZyZndDsgYnV0dG9uLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEwLmdpZiZxdW90OyBhbHQ9JnF1b3Q7RmlyZSBSdWxlIEdJRiZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtTZXR0aW5nIHVwIEdDUCB0byBsYXVuY2ggdmlydHVhbCBtYWNoaW5lcyZsdDsvaDImZ3Q7CgombHQ7cCZndDtHb29nbGUgQ29tcHV0ZSBFbmdpbmUgKEdDRSkgaXMgdGhlIEluZnJhc3RydWN0dXJlIGFzIGEgU2VydmljZSAoSWFhUykgY29tcG9uZW50IG9mIEdvb2dsZSBDbG91ZCBQbGF0Zm9ybSAoR0NQKS4gR0NQIGlzIGJ1aWx0IG9uIHRoZSBnbG9iYWwgaW5mcmFzdHJ1Y3R1cmUgdGhhdCBydW5zIEdvb2dsZeKAmXMgc2VhcmNoIGVuZ2luZSwgR21haWwsIFlvdVR1YmUsIGFuZCBvdGhlciBzZXJ2aWNlcy4gR29vZ2xlIENvbXB1dGUgRW5naW5lIGVuYWJsZXMgdXNlcnMgdG8gbGF1bmNoIHZpcnR1YWwgbWFjaGluZXMgKFZNcykgb24gZGVtYW5kLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGNyZWF0ZSB0aGUgVk0gaW5zdGFuY2UsIGdvIHRvIHRoZSBHb29nbGUgQ2xvdWQgQ29uc29sZSBkYXNoYm9hcmQsIG5hdmlnYXRlIHRvICZsdDtjb2RlJmd0O0NvbXB1dGUgJmFtcDtndDsgQ29tcHV0ZSBFbmdpbmUgJmFtcDtndDsgVk0gaW5zdGFuY2VzJmx0Oy9jb2RlJmd0OywgYW5kIGNsaWNrIHRoZSAmbHQ7c3Ryb25nJmd0O0NyZWF0ZSBJbnN0YW5jZSZsdDsvc3Ryb25nJmd0OyBidXR0b24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7RW50ZXIgVk0gaW5zdGFuY2UgZGV0YWlsczombHQ7L3AmZ3Q7CiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7SW4gdGhlIE5hbWUgZmllbGQsIGVudGVyICZsdDtjb2RlJmd0O2dyYWRsZS1idWlsZC1jYWNoZS1ub2RlJmx0Oy9jb2RlJmd0Oy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtTZWxlY3QgJmx0O2NvZGUmZ3Q7RXVyb3BlLW5vcnRoMSAoRmlubGFuZCkmbHQ7L2NvZGUmZ3Q7IGFzIHRoZSByZWdpb24uIENob29zZSBvbmUgdGhhdCBpcyBjbG9zZSB0byB5b3UgYW5kIHlvdXIgZGV2ZWxvcG1lbnQgdGVhbS4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtTZWxlY3QgJmx0O2NvZGUmZ3Q7ZXVyb3BlLW5vcnRoMS1hJmx0Oy9jb2RlJmd0OyBhcyB0aGUgWm9uZS4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtGb3IgTWFjaGluZSBDb25maWd1cmF0aW9uLCBlbnRlciAmbHQ7Y29kZSZndDtOMSZsdDsvY29kZSZndDsgZm9yIFNlcmllcy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtFbnRlciAmbHQ7Y29kZSZndDtuMS1zdGFuZGFyZC0xJmx0Oy9jb2RlJmd0OyAoMSB2Q1BVLCAzLjc1IEdCIG1lbW9yeSkgZm9yIE1hY2hpbmUgVHlwZS4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0NyZWF0ZSBWTSBJbnN0YW5jZSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgc2VsZWN0ICZsdDtjb2RlJmd0O0RlcGxveSBhIGNvbnRhaW5lciBpbWFnZSB0byB0aGlzIFZNIGluc3RhbmNlJmx0Oy9jb2RlJmd0Oy4gSW4gdGhlIENvbnRhaW5lciBJbWFnZSBmaWVsZCwgZW50ZXIgJmx0O2NvZGUmZ3Q7Z3JhZGxlL2J1aWxkLWNhY2hlLW5vZGUmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtDb250YWluZXImcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTEzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xMy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1dlIGFsc28gbmVlZCB0byBzZXQgdXAgYSBkaXNrIHZvbHVtZSBmb3Igb3VyIGJ1aWxkIGNhY2hlIHRvIHVzZS4gRXhwYW5kICZsdDtzdHJvbmcmZ3Q7QWR2YW5jZWQgY29udGFpbmVyIG9wdGlvbnMmbHQ7L3N0cm9uZyZndDsgYW5kIGNsaWNrICZsdDtzdHJvbmcmZ3Q7QWRkIFZvbHVtZSZsdDsvc3Ryb25nJmd0Oy4gVGhlbiBhZGQgdGhlc2UgcGFyYW1ldGVyczombHQ7L3AmZ3Q7CiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7Rm9yIFZvbHVtZSBUeXBlLCBhZGQgJmx0O2NvZGUmZ3Q7RGlyZWN0b3J5Jmx0Oy9jb2RlJmd0Oy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtGb3IgTW91bnQgcGF0aCwgYWRkICZsdDtjb2RlJmd0Oy9kYXRhJmx0Oy9jb2RlJmd0Oy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtGb3IgSG9zdCBwYXRoLCBhZGQgJmx0O2NvZGUmZ3Q7L2hvbWUvYnVpbGQtY2FjaGUmbHQ7L2NvZGUmZ3Q7LiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1NlbGVjdCAmbHQ7Y29kZSZndDtSZWFkL3dyaXRlJmx0Oy9jb2RlJmd0OyBtb2RlLiZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7QWR2YW5jZWQgQ29udGFpbmVyIE9wdGlvbnMmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMyZndDtDb21wbGV0ZSB0aGUgZmlyZXdhbGwgY29uZmlndXJhdGlvbiZsdDsvaDMmZ3Q7CgombHQ7cCZndDtZb3VyIG5leHQgdGFzayBpcyB0byBhZGQgdGFncyBhbmQgZmlyZXdhbGwgcnVsZXMgdG8gYWxsb3cgc3BlY2lmaWMgbmV0d29yayB0cmFmZmljIGZyb20gdGhlIEludGVybmV0LiBFeHBhbmQgdGhlICZsdDtzdHJvbmcmZ3Q7TWFuYWdlbWVudCwgc2VjdXJpdHksIGRpc2tzLCBuZXR3b3JraW5nLCBzb2xlIHRlbmFuY3kmbHQ7L3N0cm9uZyZndDsgc2VjdGlvbiBhbmQgc2VsZWN0IHRoZSAmbHQ7c3Ryb25nJmd0O05ldHdvcmtpbmcmbHQ7L3N0cm9uZyZndDsgdGFiLiBUaGVuIGFkZCB0aGUgZmlyZXdhbGwgcnVsZSB3ZSBjcmVhdGVkIGVhcmxpZXI6Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2NvZGUmZ3Q7Z3JhZGxlLWJ1aWxkLWNhY2hlLW5vZGUtdGFnJmx0Oy9jb2RlJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE1LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtGaXJld2FsbCZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE1LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE1LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE1LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE1LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE1LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtDcmVhdGUmbHQ7L3N0cm9uZyZndDsgYW5kIHdhaXQgZm9yIHlvdXIgbmV3IFZNIHRvIHNwaW4gdXAuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O1N1Y2Nlc3MgVk0gU2V0dXAmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE2LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTYucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtVc2UgdGhlIFZNIHRvIGFjY2VzcyB0aGUgY2FjaGUgbm9kZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBhY2Nlc3MgdGhlIGNhY2hlIG5vZGUgdmlhIHRoZSBWTSBpbnN0YW5jZeKAmXMgZXh0ZXJuYWwgSVAsIGFwcGVuZCAmbHQ7Y29kZSZndDs6NTA3MSZsdDsvY29kZSZndDsgdG8gdGhlIGVuZCBvZiB5b3VyIGV4dGVybmFsIElQIGFkZHJlc3MuIFlvdSBjYW4gZmluZCB0aGUgZXh0ZXJuYWwgSVAgYWRkcmVzcyBvbiB0aGUgR29vZ2xlIGNvbnNvbGUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O3N0cm9uZyZndDtOb3RlOiZsdDsvc3Ryb25nJmd0OyAmbHQ7aSZndDtJZiB5b3UgZ2V0IGEgbWVzc2FnZSB0aGF0IHRoZSBzaXRlIGNhbuKAmXQgcHJvdmlkZSBhIHNlY3VyZSBjb25uZWN0aW9uLCBhY2Nlc3MgdGhlIElQIHZpYSBIVFRQIGFuZCBub3QgSFRUUFMuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtDYWNoZS1Ob2RlJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q29uZmlndXJlIGFjY2VzcyBjb250cm9sIGZvciB0aGUgYnVpbGQgY2FjaGUmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhpcyBuZXh0IHN0ZXAgaXMgaW1wb3J0YW50IGJlY2F1c2Ugd2UgYXJlIGltcGxlbWVudGluZyB0aGUgVUkgQXV0aG9yaXphdGlvbiBzZWN1cml0eSBjaGVjay4gQnkgZGVmYXVsdCwgdGhlIGJ1aWx0LWluIGNhY2hlIG5vZGUgYWxsb3dzIGFueSB1c2VyIHRvIHN0b3JlIGFuZCByZXRyaWV2ZSBlbnRyaWVzIGZyb20gdGhlIGNhY2hlLiBUaGlzIGlzIG5vdCBpZGVhbCBiZWNhdXNlIHVuYXV0aG9yaXplZCB1c2VycyBjYW4gc3RvcmUsIHJldHJpZXZlIGFuZCBkZWxldGUgY2FjaGUgZW50cmllcy4gVGhlIG9ubHkgc3lzdGVtIGFsbG93ZWQgdG8gbWFrZSBjaGFuZ2VzIHRvIHRoZSBidWlsZCBjYWNoZSBub2RlIGlzIHlvdXIgQ0kgc2VydmVyLCBtYWtpbmcgaXQgeW91ciAmbHQ7c3Ryb25nJmd0O3NpbmdsZSBzb3VyY2Ugb2YgdHJ1dGgmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gY2hhbmdlIHRoaXMsIGNvbGxhcHNlIHRoZSAmbHQ7c3Ryb25nJmd0O1NldHRpbmdzJmx0Oy9zdHJvbmcmZ3Q7IHNlY3Rpb24gdW5kZXIgQnVpbGQgQ2FjaGUuIENsaWNrICZsdDtzdHJvbmcmZ3Q7QWRkIHVzZXImbHQ7L3N0cm9uZyZndDssIGFuZCBnaXZlIHRoZSBuZXcgdXNlciBhIHVzZXJuYW1lLCBwYXNzd29yZCwgYW5kIGFjY2VzcyBsZXZlbCBvZiAmbHQ7Y29kZSZndDtSZWFkICZhbXA7YW1wOyB3cml0ZSZsdDsvY29kZSZndDsuIFJlYWQgJmFtcDthbXA7IHdyaXRlIGFjY2VzcyBhbGxvd3Mgc3RvcmluZyBhcnRpZmFjdHMuIFRoZSAmbHQ7c3Ryb25nJmd0Oyhub3RlcykmbHQ7L3N0cm9uZyZndDsgZmllbGQgaXMgbm90IHJlcXVpcmVkLCBidXQgaXQgaXMgaGVscGZ1bCBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgdXNlcnMgZm9yIGRpZmZlcmVudCBzY2VuYXJpb3MuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T25jZSBhIHVzZXIgaGFzIGJlZW4gYWRkZWQgdG8gdGhlIHN5c3RlbSwgaXQgaXMgcG9zc2libGUgdG8gcmVzdHJpY3QgYW5vbnltb3VzIGFjY2VzcyB0byAmbHQ7Y29kZSZndDtOb25lJmx0Oy9jb2RlJmd0OyBmb3Igbm8gYWNjZXNzIG9yICZsdDtjb2RlJmd0O1JlYWQmbHQ7L2NvZGUmZ3Q7IGZvciByZWFkLW9ubHkgYWNjZXNzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U2F2ZSZsdDsvc3Ryb25nJmd0OyB0byBzdG9yZSB0aGUgY3JlZGVudGlhbHMgYW5kIHBlcm1pc3Npb25zLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE4LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtDYWNoZS1BY2Nlc3MtQ29udHJvbCZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTgucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE4LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE4LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTgucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTgucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE4LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTgucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE4LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE4LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIHJlY29tbWVuZGVkIGFwcHJvYWNoIGlzIHRvIGNyZWF0ZSBhIHVzZXIgd2l0aCAmbHQ7Y29kZSZndDtSZWFkICZhbXA7YW1wOyB3cml0ZSZsdDsvY29kZSZndDsgYWNjZXNzLCBhbmQgcmVzdHJpY3QgYW5vbnltb3VzIGFjY2VzcyB0byAmbHQ7Y29kZSZndDtSZWFkJmx0Oy9jb2RlJmd0OyBvbmx5LiBDSSBidWlsZHMgdGhlbiBhdXRoZW50aWNhdGUgYXMgdGhlIHVzZXIgYW5kIHdyaXRlIHRvIHRoZSBjYWNoZSwgd2hpbGUgZGV2ZWxvcGVycyBjb25uZWN0IGFub255bW91c2x5IGFuZCBvbmx5IHJlYWQgZnJvbSB0aGUgY2FjaGUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O3N0cm9uZyZndDtOb3RlJmx0Oy9zdHJvbmcmZ3Q7OiAmbHQ7aSZndDtJZiB5b3UgdHJ5IHRvIGFjY2VzcyB0aGUgY2FjaGUgbm9kZSBhbmQgeW91IGFyZW7igJl0IGF1dGhvcml6ZWQsIHlvdSB3aWxsIGdldCBhICZsdDtjb2RlJmd0O3Jlc3BvbnNlIHN0YXR1cyA0MDE6IFVuYXV0aG9yaXplZCZsdDsvY29kZSZndDsgZXJyb3IuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtDYWNoZSBhY2Nlc3MgY29udHJvbCBvbiBhbiBBbmRyb2lkIHByb2plY3QmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7WW91IGNhbiBjb25maWd1cmUgdGhlIGNyZWRlbnRpYWxzIHRoZSBIdHRwQnVpbGRDYWNoZSB1c2VzIHRvIGFjY2VzcyB0aGUgYnVpbGQgY2FjaGUgc2VydmVyIGFzIHNob3duIGluIHRoZSAmbHQ7Y29kZSZndDtzZXR0aW5ncy5ncmFkbGUmbHQ7L2NvZGUmZ3Q7IGZpbGUuJmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtidWlsZENhY2hlIHsKICAgIHJlbW90ZShIdHRwQnVpbGRDYWNoZSkgewogICAgICAgIHVybCA9ICdodHRwczovL2V4YW1wbGUuY29tOjgxMjMvY2FjaGUvJwogICAgICAgIGNyZWRlbnRpYWxzIHsKICAgICAgICAgICAgdXNlcm5hbWUgPSAnYnVpbGQtY2FjaGUtdXNlcicKICAgICAgICAgICAgcGFzc3dvcmQgPSAnQzBtcGxpY0B0ZWQtcGEkJHdvckQnCiAgICAgICAgfQogICAgfQp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtoMiZndDtSdW4gQ0kgYnVpbGQgdG8gdmVyaWZ5IHRoZSB3b3JraW5nIGNhY2hlIG5vZGUmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Tm93LCB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBHcmFkbGUgYnVpbGQgY2FjaGUgaXMgd29ya2luZyBhcyBleHBlY3RlZC4gUHVzaCB0aGUgY2hhbmdlcyB5b3UgbWFkZSB0byB5b3VyICZsdDtjb2RlJmd0O3NldHRpbmdzLmdyYWRsZSZsdDsvY29kZSZndDsgZmlsZSB0byB0aGUgR2l0SHViIHJlcG9zaXRvcnkuIFRoaXMgcHVzaCB0cmlnZ2VycyB0aGUgQ0kgYnVpbGQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T25jZSB0aGUgYnVpbGQgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlcywgdGhlcmUgd2lsbCBiZSBzb21lIGFydGlmYWN0cyBzdG9yZWQgaW4gdGhlIGJ1aWxkIGNhY2hlIGFzIHNob3duIG9uIHRoZSBVSSBkYXNoYm9hcmQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0J1aWxkLUNhY2hlLUFydGlmYWN0cyZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0yNy1ncmFkbGUtY2FjaGUtMTkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMjctZ3JhZGxlLWNhY2hlLTE5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTI3LWdyYWRsZS1jYWNoZS0xOS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NvbmNsdXNpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7SW4gdGhpcyB0dXRvcmlhbCwgeW91IGhhdmUgbGVhcm5lZCBob3cgdG8gY3JlYXRlIGFuZCBydW4gYSBHcmFkbGUgYnVpbGQgY2FjaGUgbm9kZSB1c2luZyBhIEdDUCBWTSBpbnN0YW5jZS4gWW91IHVwZGF0ZWQgeW91ciBhcHAgYW5kIHB1c2hlZCBpdHMgY2FjaGUgdG8gaXQuIFlvdSBub3cgaGF2ZSBleHBlcmllbmNlIHVzaW5nIGJ1aWxkIHNwZWVkIGFjY2VsZXJhdGlvbiB0ZWNobm9sb2d5IHRoYXQgeW91IGNhbiB1c2UgZm9yIHlvdXIgbG9jYWwgYW5kIENJIGJ1aWxkcy4gV2l0aCBhIGNhY2hlIHN5c3RlbSBpbiBwbGFjZSwgeW91IG5vIGxvbmdlciBuZWVkIHRvIHJ1biB0aGUgZW50aXJlIHByb2plY3QgZnJvbSBzY3JhdGNoLiBUaGlzIHNhdmVzIHlvdXIgdGVhbSB0aW1lIGFuZCByZXNvdXJjZXMsIGFuZCBsZXRzIHlvdSBwdXNoIHNtYWxsZXIgZml4ZXMgYW5kIHVwZGF0ZXMgbW9yZSBvZnRlbiwgc28geW91IGNhbiBhZGQgZmVhdHVyZXMgYW5kIGZpeCBidWdzIGZhc3Rlci4mbHQ7L3AmZ3Q7CgombHQ7aHIgLyZndDsKCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly90d2l0dGVyLmNvbS9UaGVEYW5jZXJDb2RlcyZxdW90OyZndDtUYXJhY2hhJmx0Oy9hJmd0OyBpcyBhIGNyZWF0b3Igd2hvc2UgbWlzc2lvbiBpcyB0byBoZWxwIGNvbXBhbmllcyBzb2x2ZSBjb21wbGV4IHByb2JsZW1zIGluIHRoZSBzaW1wbGVzdCB3YXkgcG9zc2libGUuIEhlIGNhcmVzIGFib3V0IGZpbmRpbmcgdmlzaW9ucyBhbmQgY2F1c2VzIHRoYXQgaGUgaXMgcGFzc2lvbmF0ZSBhYm91dCBhbmQgdXNpbmcgdGVjaG5vbG9neSB0byBoZWxwIHRoZXNlIGNvbXBhbmllcyBzb2x2ZSB0aGVpciBjaGFsbGVuZ2VzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0hlIGhhcyBvdmVyIDYgeWVhcnMgb2YgbmF0aXZlIG1vYmlsZSBhcHBsaWNhdGlvbiBkZXZlbG9wbWVudCBleHBlcmllbmNlIGFuZCA0IHllYXJzIG9mIHdlYiBhcHBsaWNhdGlvbiBkZXZlbG9wbWVudC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtIZSBpcyBjdXJyZW50bHkgYSBTZW5pb3IgU29mdHdhcmUgRW5naW5lZXIgYXQgUHJlbWlzZSBEYXRhLCB3aGVyZSBoZSBjaGFtcGlvbnMgdGhlIGRldmVsb3BtZW50IGFuZCBkZXBsb3ltZW50IG9mIG5ldyBwcm9kdWN0IGZlYXR1cmVzIGFuZCBpcyBwYXJ0aWN1bGFybHkgcGFzc2lvbmF0ZSBhYm91dCB0aGUgRGV2ZWxvcGVyIFByb2R1Y3Rpdml0eSBFbmdpbmVlcmluZyBzcGFjZS4mbHQ7L3AmZ3Q7CjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPlRvcCA2IGJlbmVmaXRzIG9mIHZpcnR1YWxpemF0aW9uPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL3RvcC02LWJlbmVmaXRzLW9mLXZpcnR1YWxpemF0aW9uLzwvbGluaz4KICAgICAgICA8cHViRGF0ZT5GcmksIDIwIEF1ZyAyMDIxIDEyOjAwOjAwIC0wNzAwPC9wdWJEYXRlPgogICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJ0cnVlIj5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL3RvcC02LWJlbmVmaXRzLW9mLXZpcnR1YWxpemF0aW9uLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPlJvbiBQb3dlbGw8L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7VmlydHVhbGl6YXRpb24gaGFzIGJlZW4gd2l0aCB1cyBzaW5jZSB0aGUgMTk2MHMuIEluIGNvbXB1dGVyIHNjaWVuY2UgdGVybXMsIGl0IGlzIGFib3V0IGFzIG9sZCBhcyB0aGUgaGlsbHMuIFlldCB0aGlzIG9sZC1zY2hvb2wgaWRlYSBoYXMgbmV2ZXIgYmVlbiBtb3JlIHJlbGV2YW50LiZsdDsvcCZndDsKCiZsdDtwJmd0O1dlIGFsbCBrbm93IGhhcmR3YXJlIGlzIGV4cGVuc2l2ZS4gRGVzcGl0ZSB0aGUgY29zdCwgbWFueSBidXNpbmVzc2VzIHNxdWFuZGVyIHRoZWlyIHByZWNpb3VzIHByb2Nlc3NpbmcgcG93ZXIuIEFsbCB0b28gb2Z0ZW4sIGEg4oCcb25lIHNlcnZlciwgb25lIHB1cnBvc2XigJ0gbWluZHNldCBsZWFkcyBJVCBkZXBhcnRtZW50cyB0byB3YXN0ZSBzZXJ2ZXIgY2FwYWNpdHkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2l0aCB2aXJ0dWFsaXphdGlvbiwgd2UgbGVhdmUgdGhpcyBteW9waWMgdmlldyBvZiBzZXJ2ZXIgbWFuYWdlbWVudCBpbiB0aGUgZHVzdC4gRGl2aWRpbmcgeW91ciBwaHlzaWNhbCBtYWNoaW5lcyBpbnRvIG1hbnkgdmlydHVhbCBpbnN0YW5jZXMgcHV0cyBldmVyeSBsYXN0IGJpdCBvZiB5b3VyIHNlcnZlciBjYXBhY2l0eSB0byB3b3JrLiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIHRoaXMgYXJ0aWNsZSwgd2UgZXhhbWluZSB2aXJ0dWFsaXphdGlvbiBpbiBtb3JlIGRldGFpbCBhbmQgYnJlYWsgZG93biBpdHMgbWFpbiBiZW5lZml0cy4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7V2hhdCBpcyB2aXJ0dWFsaXphdGlvbj8mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhlIHZpcnR1YWxpemF0aW9uIGNvbXB1dGluZyBhcHByb2FjaCBlbmFibGVzIGEgc2luZ2xlIHBoeXNpY2FsIG1hY2hpbmUgdG8gYWN0IGFzIG11bHRpcGxlIHZpcnR1YWwgY29tcHV0ZXJzLiBTb2Z0d2FyZSBhYnN0cmFjdGlvbiBsYXllcnMgZWZmZWN0aXZlbHkgc2VnbWVudCBvbmUgY29tcHV0ZXIgaW50byBzZXZlcmFsIOKAnHZpcnR1YWzigJ0gbWFjaGluZXMuIERldmVsb3BlcnMgY2FuIHRoZW4gcnVuIG1hbnkgaW5kZXBlbmRlbnQgb3BlcmF0aW5nIHN5c3RlbXMgb24gdGhlIHNhbWUgaGFyZHdhcmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2hlbiB5b3UgYXBwbHkgdmlydHVhbGl6YXRpb24gdGVjaG5pcXVlcyBlZmZpY2llbnRseSwgeW91IGN1dCB5b3VyIGhhcmR3YXJlIG5lZWRzIGJ5IG1heGltaXppbmcgYXZhaWxhYmxlIG1hY2hpbmUgY2FwYWNpdHkuIFRoaXMgZWxpbWluYXRlcyBjb3N0cyBhc3NvY2lhdGVkIHdpdGggYnV5aW5nIGFuZCBtYWludGFpbmluZyB1bmRlcnVzZWQgc2VydmVycyBhbmQgc2F2ZXMgeW91ciBvcmdhbml6YXRpb24gbW9uZXkuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1doYXQgaXMgYSB2aXJ0dWFsIG1hY2hpbmU/Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O1doZW4gdmlydHVhbGl6YXRpb24gc2VnbWVudHMgYSBwaHlzaWNhbCBtYWNoaW5lLCBlYWNoIHZpcnR1YWxpemF0aW9uIGluc3RhbmNlIGlzIGEgdmlydHVhbCBtYWNoaW5lIChWTSkuIEEgVk0gb3BlcmF0ZXMgYXMgaWYgaXQgd2VyZSBpdHMgb3duIGNvbXB1dGVyIHdpdGggaXRzIG93biBzcGVjaWZpZWQgYWxsb3RtZW50IG9mIHByb2Nlc3NpbmcgcG93ZXIsIG1lbW9yeSwgYW5kIHN0b3JhZ2UgYXZhaWxhYmxlIG9uIHRoZSBwaHlzaWNhbCBoYXJkd2FyZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtFYWNoIFZNIHJ1bnMgaXRzIG93biBvcGVyYXRpbmcgc3lzdGVtIGFuZCBhcHBsaWNhdGlvbnMgaW5kZXBlbmRlbnQgb2YgdGhlIG90aGVyIFZNcy4gVG8gY29vcmRpbmF0ZSBtdWx0aXBsZSB2aXJ0dWFsIGluc3RhbmNlcyB3aXRob3V0IGludGVyZmVyZW5jZSwgVk1zIHJlbHkgb24gYSBwaWVjZSBvZiBzb2Z0d2FyZSBjYWxsZWQgYSBoeXBlcnZpc29yIHRvIGludGVyYWN0IHdpdGggdGhlIHVuZGVybHlpbmcgaGFyZHdhcmUuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1doYXQgaXMgYSBoeXBlcnZpc29yPyZsdDsvaDImZ3Q7CgombHQ7cCZndDtBIGh5cGVydmlzb3IgaXMgYSBzb2Z0d2FyZSBsYXllciB0aGF0IG1lZGlhdGVzIGFsbCBpbnRlcmFjdGlvbnMgYmV0d2VlbiBoYXJkd2FyZSBhbmQgVk1zLiBIeXBlcnZpc29ycyBhbGxvY2F0ZSByZXNvdXJjZXMgYW5kIGVuc3VyZSBWTXMgcGxheSBuaWNlbHkgd2hpbGUgc2hhcmluZyB0aGUgc2FtZSBjb21wdXRpbmcgcG93ZXIuIFNvbWV0aW1lcywgdGhlIGh5cGVydmlzb3IgaXMgYWxzbyByZWZlcnJlZCB0byBhcyBhIHZpcnR1YWwgbWFjaGluZSBtb25pdG9yIChWTU0pLiBUaGUgaHlwZXJ2aXNvciBpcyBlc3NlbnRpYWwgZm9yIGVuYWJsaW5nIGEgc2luZ2xlIHBoeXNpY2FsIGNvbXB1dGVyIHRvIHJ1biBtdWx0aXBsZSBpbmRlcGVuZGVudCBvcGVyYXRpbmcgc3lzdGVtcyBzaW11bHRhbmVvdXNseS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtCZXNpZGVzIGFzc2lnbmluZyBhbmQgbWFuYWdpbmcgY29tcHV0aW5nIHJlc291cmNlcywgdGhlIGh5cGVydmlzb3IgYWxzbyBzZXJ2ZXMgYSBwcm90ZWN0aXZlIGZ1bmN0aW9uLiBJc29sYXRpbmcgVk1zIHByb3RlY3RzIG90aGVyIG1hY2hpbmVzIGluIHRoZSB2aXJ0dWFsIGVudmlyb25tZW50IGZyb20gYW55IGVycm9ycyBvciBjcmFzaGVzIHRoYXQgb2NjdXIgb24gb25lIFZNLiZsdDsvcCZndDsKCiZsdDtoMiZndDtTaXggYmVuZWZpdHMgb2YgdmlydHVhbGl6YXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VmlydHVhbGl6YXRpb24gb2ZmZXJzIHN1YnN0YW50aWFsIGJlbmVmaXRzIGZvciBqdXN0IGFib3V0IGFueSBidXNpbmVzcyBvciBkZXZlbG9wbWVudCBlbnZpcm9ubWVudC4gSXQgaGFzIGJlY29tZSBhIGNvcmUgc3RyYXRlZ3kgZm9yIGltcHJvdmluZyBJVCBlZmZpY2llbmN5LiZsdDsvcCZndDsKCiZsdDtwJmd0O0xldOKAmXMgbG9vayBhdCBob3cgdmlydHVhbGl6YXRpb24gY2FuIHNhdmUgbW9uZXksIHN0cmVhbWxpbmUgRGV2T3BzLCBhbmQgaW5jcmVhc2UgeW91ciBzZXJ2aWNlIGF2YWlsYWJpbGl0eS4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7UmVkdWNlZCBleHBlbnNlcyZsdDsvaDMmZ3Q7CgombHQ7cCZndDtDb21wdXRpbmcgcG93ZXIgY29tZXMgYXQgYSBwcmljZS4gSWYgdGhlIG9ubHkgd2F5IHRvIGdldCBtb3JlIHJlc291cmNlcyBpcyB0byBwdXJjaGFzZSBuZXcgaGFyZHdhcmUsIHRoYXQgcHJpY2UgYmVjb21lcyBoZWZ0eS4gV2l0aCB2aXJ0dWFsaXphdGlvbiB0YWN0aWNzLCB5b3UgY2FuIHRha2UgYSBoYXJkIGxvb2sgYXQgeW91ciBleGlzdGluZyBpbmZyYXN0cnVjdHVyZSBhbmQgaWRlbnRpZnkgd2FzdGVkIG9yIGlkbGUgY29tcHV0aW5nIHJlc291cmNlcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUb28gb2Z0ZW4sIG9yZ2FuaXphdGlvbnMgZGVwbG95IHNlcnZlcnMgdG8gcnVuIGFwcGxpY2F0aW9ucyB0aGF0IGNvbnN1bWUgb25seSBhIGZyYWN0aW9uIG9mIHRoZWlyIGF2YWlsYWJsZSByZXNvdXJjZXMuIFN1Y2ggc2VydmVycyBuZXZlciBtYWtlIHVzZSBvZiB0aGVpciBmdWxsIHBvdGVudGlhbC4gVG8gbWFrZSBtYXR0ZXJzIHdvcnNlLCB3aGVuIHRoZWlyIGFwcGxpY2F0aW9ucyBhcmUgbm90IHJ1bm5pbmcsIHRoZXNlIHNlcnZlcnMgc2l0IGVudGlyZWx5IGlkbGUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O3N0cm9uZyZndDtJbiBhIHZpcnR1YWxpemVkIGVudmlyb25tZW50LCB5b3UgY2FuIGFzc2lnbiBlYWNoIFZNIHByZWNpc2VseSB0aGUgYW1vdW50IG9mIGNvbXB1dGluZyBwb3dlciBpdCBuZWVkcyB0byBkbyBpdHMgam9iLiZsdDsvc3Ryb25nJmd0OyBUaGUgcmVtYWluaW5nIHJlc291cmNlcyBhcmUgdGhlbiBhdmFpbGFibGUgZm9yIG90aGVyIFZNcyBhbmQgdGhlaXIgYXBwbGljYXRpb25zLiZsdDsvcCZndDsKCiZsdDtwJmd0O1ZpcnR1YWxpemF0aW9uIGNvc3RzIGFyZSBhbG1vc3QgYWx3YXlzIGxvd2VyIHRoYW4gdGhlIGNvc3Qgb2YgcHVyY2hhc2luZyBhbmQgbWFpbnRhaW5pbmcgYWRkaXRpb25hbCBoYXJkd2FyZS4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7UmVzaWxpZW5jeSZsdDsvaDMmZ3Q7CgombHQ7cCZndDtBIHZpcnR1YWxpemVkIHNlcnZlciBlbnZpcm9ubWVudCBpcyBub3QgYm91bmQgdG8gaGFyZHdhcmUgbGlrZSBhIHRyYWRpdGlvbmFsIGVudmlyb25tZW50LiAmbHQ7c3Ryb25nJmd0O1lvdSBjYW4gZWFzaWx5IGJhY2sgdXAsIGNvcHksIGFuZCBjbG9uZSBWTXMgdG8gZGlmZmVyZW50IHBoeXNpY2FsIGhhcmR3YXJlLiZsdDsvc3Ryb25nJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1dhaXRpbmcgZm9yIG5ldyBoYXJkd2FyZSB0byBiZSByZWFkeSBmb3IgZGVwbG95bWVudCBjYW4gdGFrZSBkYXlzLCB3ZWVrcywgb3IgZXZlbiBtb250aHMuIE1lYW53aGlsZSwgeW91IGNhbiBkZXBsb3kgYSBWTSBiYWNrdXAgaW4gYSBtYXR0ZXIgb2YgbWludXRlcy4gV2hlbiBNdXJwaHnigJlzIExhdyBmaW5hbGx5IGNhdGNoZXMgdXAgd2l0aCB5b3UsIHlvdSB3aWxsIGJlIHRoYW5rZnVsIHlvdSBjYW4gcmFwaWRseSBkZXBsb3kgeW91ciBWTSBvbiBhIGRpZmZlcmVudCBtYWNoaW5lLCBpbiBhIGRpZmZlcmVudCBsb2NhdGlvbiwgd2l0aCBtaW5pbWFsIGhhc3NsZS4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7SGlnaCBhdmFpbGFiaWxpdHkmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7U2luY2UgeW91IGNhbiBjbG9uZSBhIFZNIGFsbW9zdCBlZmZvcnRsZXNzbHksIHlvdSBjYW4gZWFzaWx5IHNldCB1cCByZWR1bmRhbnQgdmlydHVhbGl6ZWQgZW52aXJvbm1lbnRzIHdpdGggZXhjZXB0aW9uYWxseSBoaWdoIGF2YWlsYWJpbGl0eS4gQnkgYXV0b21hdGljYWxseSBtb25pdG9yaW5nIFZNIHN0YXR1cyBhbmQgcmFwaWRseSBzd2l0Y2hpbmcgdG8gYmFja3VwIFZNcyBpbiBhbiBvdXRhZ2UsICZsdDtzdHJvbmcmZ3Q7dmlydHVhbGl6YXRpb24gcHJvdmlkZXMgYW4gZXh0cmVtZWx5IHJlbGlhYmxlIHN5c3RlbSB3aXRoIG5vIHNpbmdsZSBwb2ludCBvZiBmYWlsdXJlIGluIGhhcmR3YXJlIG9yIHNvZnR3YXJlLiZsdDsvc3Ryb25nJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZXNlIOKAnGZhaWxvdmVy4oCdIHN5c3RlbXMgZW5hYmxlIHlvdSB0byBzZWFtbGVzc2x5IGNvbnRpbnVlIG9wZXJhdGluZyB5b3VyIFZNIGZyb20gaXRzIGxhc3Qgd29ya2luZyBzdGF0ZS4gVGhpcyBtYXhpbWl6ZXMgc2VydmljZSBhdmFpbGFiaWxpdHkgbm8gbWF0dGVyIHdoYXQgZ29lcyB3cm9uZy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtZb3UgY2FuIHJlbW90ZWx5IG1vbml0b3IsIGNvbmZpZ3VyZSwgYW5kIHJlc3RhcnQgeW91ciBlbnRpcmUgdmlydHVhbCBlbnZpcm9ubWVudC4gVGhpcyBwcm92aWRlcyBkZXZlbG9wZXJzIGNvbnN0YW50IGFjY2Vzcywgbm8gbWF0dGVyIGhvdyBmYXIgdGhleSBtYXkgYmUgZnJvbSB0aGUgcGh5c2ljYWwgaGFyZHdhcmUsIHdoaWNoIGhlbHBzIGZ1cnRoZXIgbWl0aWdhdGUgYW55IHBvdGVudGlhbCBkb3dudGltZS4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7SW5jcmVhc2VkIGVmZmljaWVuY3kmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7VmlydHVhbCBlbnZpcm9ubWVudHMgYXJlIG11Y2ggZWFzaWVyIHRvIG1haW50YWluIHRoYW4gcGh5c2ljYWwgZW52aXJvbm1lbnRzLiBSYXRoZXIgdGhhbiBtYW5hZ2luZyBudW1lcm91cyBwaHlzaWNhbCBzZXJ2ZXJzIHJlcXVpcmluZyBpbmRpdmlkdWFsIGF0dGVudGlvbiwgdmlydHVhbGl6YXRpb24gZW5hYmxlcyB5b3UgdG8gY29uZmlndXJlLCBtb25pdG9yLCBhbmQgdXBkYXRlIGFsbCB5b3VyIFZNcyBmcm9tIGEgc2luZ2xlIG1hY2hpbmUuIFRoaXMgc2F2ZXMgdGltZSBkZXBsb3lpbmcgdXBkYXRlcywgaW1wbGVtZW50aW5nIHNlY3VyaXR5IHBhdGNoZXMsIGFuZCBpbnN0YWxsaW5nIG5ldyBzb2Z0d2FyZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O1dpdGggbGVzcyBwaHlzaWNhbCBoYXJkd2FyZSB0byB3b3JyeSBhYm91dCwgeW91ciBJVCBkZXBhcnRtZW50IHNwZW5kcyBsZXNzIHRpbWUgbWFpbnRhaW5pbmcgcGh5c2ljYWwgbWFjaGluZXMuJmx0Oy9zdHJvbmcmZ3Q7IFlvdXIgZGV2ZWxvcGVycyBlbmpveSB0aGUgZWZmaWNpZW5jeSBvZiByYXBpZGx5IHNwaW5uaW5nIHVwIGEgVk0gd2l0aG91dCBoYXZpbmcgdG8gd29ycnkgYWJvdXQgYWRkaW5nIG5ldyBoYXJkd2FyZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtCeSBuYXR1cmUsIHZpcnR1YWwgZW52aXJvbm1lbnRzIGFyZSBpbmhlcmVudGx5IHNjYWxhYmxlLiBZb3UgY2FuIGVhc2lseSBkZXBsb3kgbWFueSBpbnN0YW5jZXMgb2YgdGhlIHNhbWUgVk0gdG8gaGVscCBoYW5kbGUgaGVhdnkgbG9hZCwgb2ZmZXJpbmcgZWZmaWNpZW50IHNjYWxhYmlsaXR5IHRoYXQgaXMgYWx3YXlzIHJlYWR5IHRvIHN1cHBvcnQgYW5kIHN1c3RhaW4gZ3Jvd3RoLiZsdDsvcCZndDsKCiZsdDtoMyZndDtFYXN5IERldk9wcyZsdDsvaDMmZ3Q7CgombHQ7cCZndDtWaXJ0dWFsaXphdGlvbiBpcyBhIGRldmVsb3BlcuKAmXMgYmVzdCBmcmllbmQuIEl0IGVmZmVjdGl2ZWx5IHNlZ21lbnRzIHByb2R1Y3Rpb24gYW5kIGRldmVsb3BtZW50IGVudmlyb25tZW50cyB3aXRob3V0IGV4dHJhIGhhcmR3YXJlLiZsdDsvcCZndDsKCiZsdDtwJmd0O0l0IGlzIGluY3JlZGlibHkgc2ltcGxlIHRvIGNsb25lIGEgVk0gdG8gc2V0IHVwIHRlc3RpbmcgZW52aXJvbm1lbnRzLiBUaGVyZSwgeW91IGNhbiB0ZXN0IGZlYXR1cmVzIGFuZCBzcXVhc2ggYnVncyB3aXRob3V0IGFmZmVjdGluZyB5b3VyIGxpdmUgcHJvZHVjdC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtXaXRoIHRyYWRpdGlvbmFsIGhhcmR3YXJlLWJhc2VkIGVudmlyb25tZW50cywgZGV2ZWxvcGVycyBuZWVkIHRvIHdvcnJ5IGFib3V0IGFsbCB0aGUgdXBkYXRlcyBhbmQgbWFpbnRlbmFuY2UgZm9yIHRoZWlyIGRldmVsb3BtZW50IG1hY2hpbmVzLiBNYWludGFpbmluZyBhbiBhY2N1cmF0ZSByZXByZXNlbnRhdGlvbiBvZiBsaXZlIHNlcnZlcnMgZm9yIHRlc3RpbmcgaXMgYWxzbyBhbiBvbmdvaW5nIGNoYWxsZW5nZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtWTXMgcXVpY2tseSBzb2x2ZSBhbGwgdGhlc2UgaXNzdWVzLiAmbHQ7c3Ryb25nJmd0O1ZpcnR1YWxpemF0aW9uIHByb3ZpZGVzIG9uLWRlbWFuZCBhY2Nlc3MgdG8gYW4gaW5maW5pdGUgbnVtYmVyIG9mIHBlcmZlY3RseSByZXBsaWNhdGVkIHZpcnR1YWwgbWFjaGluZXMgZm9yIGRldmVsb3BlcnMgdG8gcGxheSB3aXRoLiZsdDsvc3Ryb25nJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0RldmVsb3BlcnMgdGFrZSBhZHZhbnRhZ2Ugb2YgdmlydHVhbGl6YXRpb24gdG8gaGVscCB0aGVtIGV4cGVkaXRlIHVwZGF0ZXMsIGltcHJvdmUgc29mdHdhcmUgc2VjdXJpdHksIGFuZCBtYWludGFpbiBhbiBlZmZpY2llbnQgcGlwZWxpbmUgYmV0d2VlbiBkZXZlbG9wbWVudCwgdGVzdGluZywgYW5kIGRlcGxveW1lbnQuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0Vudmlyb25tZW50YWxseSBmcmllbmRseSBJVCZsdDsvaDMmZ3Q7CgombHQ7cCZndDtJbiB0aGUgbG9uZyBydW4sIHZpcnR1YWxpemF0aW9uIGlzIGFuIGVjby1mcmllbmRseSBhcHByb2FjaCB0byBJVC4gJmx0O3N0cm9uZyZndDtSZWR1Y2luZyBoYXJkd2FyZSByZXF1aXJlbWVudHMgYWxzbyByZWR1Y2VzIHBvd2VyIGNvbnN1bXB0aW9uJmx0Oy9zdHJvbmcmZ3Q7LCB1bHRpbWF0ZWx5IG1pbmltaXppbmcgb3VyIGNhcmJvbiBmb290cHJpbnQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhpcyBpcyBnb29kIGZvciBib3RoIHRoZSBlbnZpcm9ubWVudCBhbmQgeW91ciBib3R0b20gbGluZS4gUG93ZXIgc2F2aW5ncyBtYWtlIGl0IGNoZWFwZXIgdG8gbWFpbnRhaW4gc2VydmVycyBhbmQgZGF0YSBjZW50ZXJzLiBZb3UgY2FuIHRoZW4gaW52ZXN0IGFsbCB0aGF0IG1vbmV5IGluIG90aGVyIHZlbnR1cmVzLCBsaWtlIG1ha2luZyB5b3VyIGJ1c2luZXNzIGV2ZW4gbW9yZSBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NvbmNsdXNpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7U2VnbWVudGluZyBhIHNpbmdsZSBwaHlzaWNhbCBtYWNoaW5lIGludG8gbXVsdGlwbGUgdmlydHVhbCBtYWNoaW5lcyBlbmFibGVzIHlvdSB0byBtYWtlIHRoZSBtb3N0IG9mIGF2YWlsYWJsZSBoYXJkd2FyZSwgbG93ZXIgY29zdHMsIGFuZCBpbXByb3ZlIERldk9wcyBlZmZpY2llbmN5LiBXaXRob3V0IHZpcnR1YWxpemF0aW9uLCB1bnRvbGQgc2VydmVyIGNhcGFjaXR5IGdvZXMgdG8gd2FzdGUuIE5vdCBvbmx5IGRvZXMgdGhpcyBjb3N0IGJ1c2luZXNzZXMgbW9uZXksIGJ1dCBpdCBhbHNvIGNvbnRyaWJ1dGVzIHRvIHRoZSBnbG9iYWwgY2FyYm9uIGZvb3RwcmludC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgc2l4IGJlbmVmaXRzIGhpZ2hsaWdodGVkIGhlcmUgYXJlIG9ubHkgdGhlIHRpcCBvZiB2aXJ0dWFsaXphdGlvbuKAmXMgaWNlYmVyZyBvZiBwb3RlbnRpYWwuIElmIHlvdSBhcmUgbm90IGFscmVhZHkgcHV0dGluZyB2aXJ0dWFsaXphdGlvbiB0byB3b3JrLCBpdCBpcyB0aW1lIHRvIGNyaXRpY2FsbHkgZXhhbWluZSB5b3VyIGluZnJhc3RydWN0dXJlLiBZb3UgbWF5IGJlIHN1cnByaXNlZCBieSBob3cgbXVjaCBpdCBjYW4gYmVuZWZpdCBmcm9tIHZpcnR1YWxpemF0aW9uLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGxlYXJuIG1vcmUgYWJvdXQgdGhlIHRvb2xzIGFuZCB0ZWNobmlxdWVzIHRoYXQgaGlnaC1wZXJmb3JtaW5nIERldk9wcyB0ZWFtcyB1c2UgdG8gY29udHJvbCBjb3N0cyBhbmQgbWF4aW1pemUgZWZmaWNpZW5jeSwgZG93bmxvYWQgdGhlICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vcmVzb3VyY2VzLzIwMjAtc3RhdGUtb2Ytc29mdHdhcmUtZGVsaXZlcnkvJnF1b3Q7Jmd0OzIwMjAgU3RhdGUgb2YgU29mdHdhcmUgRGVsaXZlcnk6IERhdGEtQmFja2VkIEJlbmNobWFya3MgZm9yIEVuZ2luZWVyaW5nIFRlYW1zJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPkZ1bmN0aW9uYWwgYnJvd3NlciB0ZXN0aW5nIHdpdGggUHVwcGV0ZWVyPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2Z1bmN0aW9uYWwtYnJvd3Nlci10ZXN0aW5nLzwvbGluaz4KICAgICAgICA8cHViRGF0ZT5XZWQsIDE4IEF1ZyAyMDIxIDA5OjAwOjAwIC0wNzAwPC9wdWJEYXRlPgogICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJ0cnVlIj5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2Z1bmN0aW9uYWwtYnJvd3Nlci10ZXN0aW5nLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPkZpa2F5byBBZGVwb2p1PC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0O01vc3QgaW50ZXJhY3Rpb25zIHdpdGggYSB3ZWIgYXBwbGljYXRpb24gb2NjdXIgYXQgdGhlIGJyb3dzZXIuIFVzZXJzIHNlYXJjaCBpdGVtcywgZmlsbCBmb3JtcywgY3JlYXRlIHNob3BwaW5nIGNhcnRzLCBsb2cgaW50byB0aGVpciBwcm9maWxlcywgYW5kIHBlcmZvcm0gbWFueSBvdGhlciB0YXNrcy4gVW5pdCB0ZXN0cyBhcmUgZ3JlYXQsIGJ1dCBub3RoaW5nIGJlYXRzIHRlc3RpbmcgYW4gYXBwbGljYXRpb24gYnkgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgdXNlci1mYWNpbmcgZnJvbnRlbmQuIEluIHRoaXMgdHV0b3JpYWwsIHlvdSB3aWxsIGxlYXJuIGFuZCBkZW1vbnN0cmF0ZSBob3cgdG8gd3JpdGUgdGVzdHMgZm9yIHRoZSBicm93c2VyIHVzaW5nICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9wcHRyLmRldi8mcXVvdDsmZ3Q7UHVwcGV0ZWVyJmx0Oy9hJmd0Oy4gWW91IHdpbGwgdGhlbiB0YWtlIHRoaXMgYSBzdGVwIGZ1cnRoZXIgYnkgYXV0b21hdGluZyB0aGUgdGVzdGluZyBwcm9jZXNzIGluIGEgY29udGludW91cyBpbnRlZ3JhdGlvbiBmbG93LiZsdDsvcCZndDsKCiZsdDtoMiZndDtQcmVyZXF1aXNpdGVzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGZvbGxvdyB0aGlzIHR1dG9yaWFsLCBhIGZldyB0aGluZ3MgYXJlIHJlcXVpcmVkOiZsdDsvcCZndDsKCiZsdDtvbCZndDsKICAmbHQ7bGkmZ3Q7QmFzaWMga25vd2xlZGdlIG9mIEphdmFTY3JpcHQmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vbm9kZWpzLm9yZyZxdW90OyZndDtOb2RlLmpzJmx0Oy9hJmd0OyBpbnN0YWxsZWQgb24geW91ciBzeXN0ZW0gKHZlcnNpb24gJmFtcDtndDs9IDEyKSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9zaWdudXAmcXVvdDsmZ3Q7Q2lyY2xlQ0kmbHQ7L2EmZ3Q7IGFjY291bnQmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tLyZxdW90OyZndDtHaXRIdWImbHQ7L2EmZ3Q7IGFjY291bnQmbHQ7L2xpJmd0OwombHQ7L29sJmd0OwoKJmx0O3AmZ3Q7V2l0aCBhbGwgdGhlc2UgaW5zdGFsbGVkIGFuZCBzZXQgdXAsIHdlIGNhbiBiZWdpbiB0aGUgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0Nsb25pbmcgYW5kIHJ1bm5pbmcgdGhlIHNhbXBsZSBhcHBsaWNhdGlvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtUaGUgZmlyc3Qgc3RlcCBpcyB0byBzZXQgdXAgYSB3ZWIgYXBwbGljYXRpb24gdG8gdGVzdC4gWW91IHdpbGwgbmVlZCB0byBjbG9uZSBhIGRlbW8gYXBwbGljYXRpb24gYnkgcnVubmluZyB0aGlzIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtnaXQgY2xvbmUgLS1zaW5nbGUtYnJhbmNoIC0tYnJhbmNoIGJhc2UtcHJvamVjdCBodHRwczovL2dpdGh1Yi5jb20vQ0lSQ0xFQ0ktR1dQL2Jyb3dzZXItdGVzdGluZwoKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7VGhlbiwgZ28gdG8gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgKCZsdDtjb2RlJmd0O2NkIGJyb3dzZXItdGVzdGluZyZsdDsvY29kZSZndDspIGFuZCBpbnN0YWxsIGRlcGVuZGVuY2llcyBieSBydW5uaW5nOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7V2l0aCB0aGUgZGVwZW5kZW5jaWVzIGZ1bGx5IGluc3RhbGxlZCwgcnVuIHRoZSBhcHBsaWNhdGlvbiB1c2luZyB0aGlzIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtub2RlIHNlcnZlcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGUgYXBwbGljYXRpb24gc2VydmVyIHdpbGwgYm9vdCB1cCBhdCAmbHQ7Y29kZSZndDtodHRwOi8vbG9jYWxob3N0OjUwMDAmbHQ7L2NvZGUmZ3Q7LiBHbyB0byB0aGF0IFVSTCBvbiB5b3VyIGJyb3dzZXIgdG8gcmV2aWV3IHRoZSBkZW1vIGFwcCBob21lcGFnZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWRlbW8ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0hvbWVwYWdlIC0gRGVtbyBBcHAmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZGVtby5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZGVtby5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZGVtby5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1kZW1vLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1kZW1vLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWRlbW8ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZGVtby5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZGVtby5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1kZW1vLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWRlbW8ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWRlbW8ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZGVtby5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1kZW1vLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1kZW1vLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWRlbW8ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBkZW1vIHBhZ2UgY29uc2lzdHMgb2YgYSBoZWFkZXIgdGhhdCByZWFkcyAmbHQ7Y29kZSZndDtXZWxjb21lIHRvIHRoZSBkZW1vIFdlYiBQYWdlJmx0Oy9jb2RlJmd0OywgYSBwYXJhZ3JhcGggdGhhdCBjb250YWlucyB0aGUgdGV4dCAmbHQ7Y29kZSZndDtUaGlzIGlzIGEgc2FtcGxlIHRleHQgaW4gYSBwYXJhZ3JhcGggb24gdGhlIHBhZ2UmbHQ7L2NvZGUmZ3Q7LCBhbmQgYSBmb3JtIHdpdGggYW4gZW1haWwgZmllbGQgYW5kIHN1Ym1pdCBidXR0b24uIFdoZW4gZmlsbGVkIGFuZCBzdWJtaXR0ZWQsIHRoZSBmb3JtIHByaW50cyB0aGUgc3VibWl0dGVkIGVtYWlsIHRvIHRoZSBzY3JlZW4uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1maWxsLWZvcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0ZpbGwgZm9ybSAtIERlbW8gQXBwJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWZpbGwtZm9ybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZmlsbC1mb3JtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1maWxsLWZvcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZmlsbC1mb3JtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1maWxsLWZvcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZmlsbC1mb3JtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWZpbGwtZm9ybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZmlsbC1mb3JtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWZpbGwtZm9ybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1maWxsLWZvcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWZpbGwtZm9ybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1maWxsLWZvcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZmlsbC1mb3JtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1maWxsLWZvcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtZmlsbC1mb3JtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7SW5zdGFsbGluZyBKZXN0IGFuZCBQdXBwZXRlZXImbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7WW91IHdpbGwgYmUgdGVzdGluZyB0aGUgZGVtbyBwYWdlIHRvIGNvbmZpcm0gdGhhdCBpdCBjb250YWlucyB0aGUgZWxlbWVudHMgZGlzcGxheWVkIG9uIHRoZSBwYWdlLCBhbmQgdG8gdmVyaWZ5IHRoZSBiZWhhdmlvciBvZiB0aGUgZm9ybS4gWW91IHdpbGwgbmVlZCB0d28gcGFja2FnZXM6Jmx0Oy9wJmd0OwombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9wcHRyLmRldi8mcXVvdDsmZ3Q7UHVwcGV0ZWVyJmx0Oy9hJmd0OyBpcyB0aGUgYnJvd3NlciB0ZXN0aW5nIGZyYW1ld29yay4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vamVzdGpzLmlvLyZxdW90OyZndDtKZXN0Jmx0Oy9hJmd0OyBzZXJ2ZXMgYXMgdGhlIHRlc3QgcnVubmVyIGZvciB0aGUgdGVzdCBzdWl0ZXMgdGhhdCB5b3Ugd2lsbCB3cml0ZS4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7SW5zdGFsbCB0aGVzZSBwYWNrYWdlcyBhcyBkZXZlbG9wbWVudCBkZXBlbmRlbmNpZXMgdXNpbmcgdGhpcyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwgLS1zYXZlLWRldiBwdXBwZXRlZXIgamVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtXaXRoIHRoZXNlIGluc3RhbGxlZCwgeW91IGNhbiBub3cgYmVnaW4gYWRkaW5nIGJyb3dzZXIgdGVzdHMgdG8gdGhlIHByb2plY3QuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0FkZGluZyB0ZXN0cyB1c2luZyBQdXBwZXRlZXImbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhlIGZpcnN0IGVsZW1lbnRzIHlvdSB3aWxsIGJlIHRlc3RpbmcgYXJlIHRoZSBoZWFkZXIgYW5kIHRoZSBwYXJhZ3JhcGguIFRoZSB0ZXN0cyB3aWxsIGNvbmZpcm0gdGhhdCB0aGVzZSBlbGVtZW50cyBhcmUgb24gdGhlIHBhZ2UgYW5kIGNvbnRhaW4gdGhlIGV4cGVjdGVkIHRleHQgd2l0aGluIHRoZW0uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QWRkIGEgbmV3IHRlc3QgZmlsZSBuYW1lZCAmbHQ7Y29kZSZndDtob21lcGFnZS50ZXN0LmpzJmx0Oy9jb2RlJmd0OyBhdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdC4gQWRkIHRoaXMgY29kZTombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2NvbnN0IHB1cHBldGVlciA9IHJlcXVpcmUoJnF1b3Q7cHVwcGV0ZWVyJnF1b3Q7KTsKCnRlc3QoJnF1b3Q7Q29uZmlybSB0ZXh0IG9uIHBhZ2UmcXVvdDssIGFzeW5jICgpID0mYW1wO2d0OyB7CiAgY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goKTsKICB0cnkgewogICAgY29uc3QgcGFnZSA9IGF3YWl0IGJyb3dzZXIubmV3UGFnZSgpOwoKICAgIGF3YWl0IHBhZ2UuZ290bygmcXVvdDtodHRwOi8vbG9jYWxob3N0OjUwMDAmcXVvdDspOwoKICAgIGxldCBwYWdlSGVhZGVyID0gYXdhaXQgcGFnZS4kKCZxdW90OyNwYWdlVGl0bGUmcXVvdDspOwogICAgbGV0IHBhZ2VIZWFkZXJWYWx1ZSA9IGF3YWl0IHBhZ2VIZWFkZXIuZXZhbHVhdGUoKGVsKSA9JmFtcDtndDsgZWwudGV4dENvbnRlbnQpOwoKICAgIGV4cGVjdChwYWdlSGVhZGVyVmFsdWUpLnRvQ29udGFpbigmcXVvdDtXZWxjb21lIHRvIHRoZSBkZW1vIFdlYiBQYWdlJnF1b3Q7KTsKCiAgICBsZXQgcGFnZVBhcmFncmFwaCA9IGF3YWl0IHBhZ2UuJCgmcXVvdDsjcGFnZVBhcmFncmFwaCZxdW90Oyk7CiAgICBsZXQgcGFnZVBhcmFncmFwaFZhbHVlID0gYXdhaXQgcGFnZVBhcmFncmFwaC5ldmFsdWF0ZSgKICAgICAgKGVsKSA9JmFtcDtndDsgZWwudGV4dENvbnRlbnQKICAgICk7CgogICAgZXhwZWN0KHBhZ2VQYXJhZ3JhcGhWYWx1ZSkudG9Db250YWluKAogICAgICAmcXVvdDtUaGlzIGlzIGEgc2FtcGxlIHRleHQgaW4gYSBwYXJhZ3JhcGggb24gdGhlIHBhZ2UmcXVvdDsKICAgICk7CiAgfSBmaW5hbGx5IHsKICAgIGF3YWl0IGJyb3dzZXIuY2xvc2UoKTsKICB9Cn0sIDEyMDAwMCk7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1RoaXMgdGVzdCBjYXNlIGxhdW5jaGVzIGEgbmV3IGJyb3dzZXIgaW5zdGFuY2UgYW5kIGxvYWRzIHRoZSB3ZWIgYXBwIGF0ICZsdDtjb2RlJmd0O2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMCZsdDsvY29kZSZndDsuIEl0IHRoZW4gdXNlcyBDU1Mgc2VsZWN0b3JzIHRvIHRhcmdldCBib3RoIHRoZSBoZWFkZXIgYW5kIHBhcmFncmFwaCB0byByZWFkIHRoZWlyIGNvbnRlbnRzLiBUaGUgY29udGVudHMgb2YgdGhlIGhlYWRlciBhbmQgcGFyYWdyYXBoIGFyZSB0aGVuIGNvbXBhcmVkIGFnYWluc3QgdGhlIGV4cGVjdGVkIHJlc3VsdC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUbyBydW4gdGhlc2UgdGVzdHMsIG1vZGlmeSB0aGUgJmx0O2NvZGUmZ3Q7dGVzdCZsdDsvY29kZSZndDsgc2NyaXB0IGluIHRoZSAmbHQ7Y29kZSZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7IHVzaW5nIHRoaXMgY29kZTombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0Oy4uLgomcXVvdDtzY3JpcHRzJnF1b3Q7IDogewogICZxdW90O3Rlc3QmcXVvdDsgOiAmcXVvdDtqZXN0JnF1b3Q7Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7TWFrZSBzdXJlIHRoYXQgdGhlIHdlYiBhcHAgaXMgcnVubmluZyAodXNpbmcgJmx0O2NvZGUmZ3Q7bm9kZSBzZXJ2ZXImbHQ7L2NvZGUmZ3Q7KS4gVGhlbiBydW4gdGhpcyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIHJ1biB0ZXN0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O0FmdGVyIHRoaXMgcnVucywgdGhlIENMSSBvdXRwdXQgc2hvd3MgdGhhdCB5b3UgaGF2ZSB0ZXN0cyB0aGF0IHBhc3NlZC4mbHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0OyBQQVNTICAuL2hvbWVwYWdlLnRlc3QuanMgKDMyLjczMiBzKQogIOKckyBDb25maXJtIHRleHQgb24gcGFnZSAoMjU5NjIgbXMpCgpUZXN0IFN1aXRlczogMSBwYXNzZWQsIDEgdG90YWwKVGVzdHM6ICAgICAgIDEgcGFzc2VkLCAxIHRvdGFsClNuYXBzaG90czogICAwIHRvdGFsClRpbWU6ICAgICAgICA0MS4yMDUgcwpSYW4gYWxsIHRlc3Qgc3VpdGVzLgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtOZXh0LCBhZGQgYW5vdGhlciB0ZXN0IGNhc2UgdG8gdGVzdCB0aGUgZm9ybSBiZWhhdmlvci4gQWRkIHRoaXMgY29kZSBiZWxvdyB0aGUgZmlyc3QgdGVzdCBjYXNlOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7Li4uCnRlc3QoJnF1b3Q7Q29uZmlybSBmb3JtIHN1Ym1pc3Npb24gb3V0cHV0JnF1b3Q7LCBhc3luYyAoKSA9JmFtcDtndDsgewogIGNvbnN0IGJyb3dzZXIgPSBhd2FpdCBwdXBwZXRlZXIubGF1bmNoKCk7CiAgdHJ5IHsKICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKTsKCiAgICBhd2FpdCBwYWdlLmdvdG8oJnF1b3Q7aHR0cDovL2xvY2FsaG9zdDo1MDAwJnF1b3Q7KTsKCiAgICBhd2FpdCBwYWdlLnR5cGUoJnF1b3Q7I3VzZXJFbWFpbCZxdW90OywgJnF1b3Q7dGVzdEBjb21wYW55LmNvbSZxdW90Oyk7CiAgICBhd2FpdCBwYWdlLmNsaWNrKCZxdW90OyNzdWJtaXRCdXR0b24mcXVvdDspOwoKICAgIGxldCBlbWFpbENvbnRhaW5lciA9IGF3YWl0IHBhZ2UuJCgmcXVvdDsjaW5mb0Rpc3BsYXkmcXVvdDspOwogICAgbGV0IHZhbHVlID0gYXdhaXQgZW1haWxDb250YWluZXIuZXZhbHVhdGUoKGVsKSA9JmFtcDtndDsgZWwudGV4dENvbnRlbnQpOwoKICAgIGV4cGVjdCh2YWx1ZSkudG9Db250YWluKCZxdW90O3Rlc3RAY29tcGFueS5jb20mcXVvdDspOwogIH0gZmluYWxseSB7CiAgICBhd2FpdCBicm93c2VyLmNsb3NlKCk7CiAgfQp9LCAxMjAwMDApOwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGUgc2Vjb25kIHRlc3QgY2FzZSByZWZlcmVuY2VzIHRoZSBlbWFpbCBmaWVsZCB1c2luZyBpdHMgJmx0O2NvZGUmZ3Q7aWQmbHQ7L2NvZGUmZ3Q7IGF0dHJpYnV0ZSBhbmQgdGhlIGVtYWlsICgmbHQ7Y29kZSZndDt0ZXN0QGNvbXBhbnkuY29tJmx0Oy9jb2RlJmd0OykgdGhhdCB3YXMgZW50ZXJlZCBpbnRvIHRoZSBmaWVsZC4gVGhlIHRlc3QgcmVmZXJlbmNlcyB0aGUgc3VibWl0IGJ1dHRvbiBhbmQg4oCcY2xpY2tz4oCdIGl0IHVzaW5nIHRoZSBidXR0b27igJlzICZsdDtjb2RlJmd0O2lkJmx0Oy9jb2RlJmd0OyBhdHRyaWJ1dGUuIEZpbmFsbHksIHRoZSBkaXNwbGF5IGNvbnRhaW5lciBmb3IgdGhlIGVtYWlsIGlzIHRhcmdldGVkIGFuZCB0aGUgdGV4dCBjb250ZW50IGlzIGZldGNoZWQgYW5kIGNvbXBhcmVkIHRvIHRoZSBleHBlY3RlZCB2YWx1ZSwgd2hpY2ggaXMgdGhlIGVtYWlsIHRoYXQgd2FzIGVudGVyZWQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7U2F2ZSB0aGlzIGZpbGUgYW5kIHRoZW4gcnVuIHlvdXIgdGVzdHMgYWdhaW4gdXNpbmcgdGhlICZsdDtjb2RlJmd0O25wbSBydW4gdGVzdCZsdDsvY29kZSZndDsgY29tbWFuZC4gVGhlIENMSSBvdXRwdXQgc2hvd3MgdGhhdCB0aGUgdGVzdHMgaGF2ZSBwYXNzZWQuJmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDsgUEFTUyAgLi9ob21lcGFnZS50ZXN0LmpzICg2NC4yOTcgcykKICDinJMgQ29uZmlybSB0ZXh0IG9uIHBhZ2UgKDQyMTE4IG1zKQogIOKckyBDb25maXJtIGZvcm0gc3VibWlzc2lvbiBvdXRwdXQgKDk2NjQgbXMpCgpUZXN0IFN1aXRlczogMSBwYXNzZWQsIDEgdG90YWwKVGVzdHM6ICAgICAgIDIgcGFzc2VkLCAyIHRvdGFsClNuYXBzaG90czogICAwIHRvdGFsClRpbWU6ICAgICAgICA4NC45OTcgcwpSYW4gYWxsIHRlc3Qgc3VpdGVzLgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7aDImZ3Q7U2V0dGluZyB1cCBhIENJIHBpcGVsaW5lIHRvIGF1dG9tYXRlIHRlc3RpbmcmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VG8gY29tcGxldGUgdGhlIGdvYWwgb2YgdGhpcyB0dXRvcmlhbCwgd2Ugd2lsbCBhdXRvbWF0ZSB0aGUgdGVzdGluZyBwcm9jZXNzIGJ5IHBsdWdnaW5nIGl0IGludG8gYSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvd2hhdC1pcy1hLWNpLWNkLXBpcGVsaW5lLyZxdW90OyZndDtjb250aW51b3VzIGludGVncmF0aW9uIChDSSkgcGlwZWxpbmUmbHQ7L2EmZ3Q7LiBUaGUgcGlwZWxpbmUgcnVucyB0aGUgdGVzdHMgZWFjaCB0aW1lIHRoZSBjb2RlIGlzIHVwZGF0ZWQgb24geW91ciByZW1vdGUgcmVwb3NpdG9yeS4gVGhlIGZpcnN0IHN0ZXAgaXMgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL3B1c2hpbmctYS1wcm9qZWN0LXRvLWdpdGh1Yi8mcXVvdDsmZ3Q7cHVzaCB0aGUgY29kZSB0byBHaXRIdWImbHQ7L2EmZ3Q7LiBNYWtlIHN1cmUgdGhhdCB0aGlzIGlzIHRoZSBHaXRIdWIgYWNjb3VudCBjb25uZWN0ZWQgdG8geW91ciBDaXJjbGVDSSBhY2NvdW50LiZsdDsvcCZndDsKCiZsdDtwJmd0O05leHQsIGdvIHRvIHRoZSBQcm9qZWN0cyBwYWdlIG9uIHRoZSBDaXJjbGVDSSBkYXNoYm9hcmQgdG8gYWRkIHRoZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0FkZCBQcm9qZWN0IC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrIHRoZSAmbHQ7c3Ryb25nJmd0O1NldCBVcCBQcm9qZWN0Jmx0Oy9zdHJvbmcmZ3Q7IGJ1dHRvbiB0byBvcGVuIHRoZSBTZXR1cCBwYWdlLiBUaGVuIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U2tpcCB0aGlzIHN0ZXAmbHQ7L3N0cm9uZyZndDsgb24gdGhlIG1vZGFsIHRoYXQgcG9wcyB1cCBiZWNhdXNlIHdlIHdpbGwgYmUgbWFudWFsbHkgYWRkaW5nIG91ciBDaXJjbGVDSSBjb25maWcgbGF0ZXIgaW4gdGhpcyB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LXByb2plY3QtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtBZGQgQ29uZmlnIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtcHJvamVjdC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LXByb2plY3QtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1wcm9qZWN0LWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1wcm9qZWN0LWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtcHJvamVjdC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtcHJvamVjdC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtcHJvamVjdC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LXByb2plY3QtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LXByb2plY3QtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LXByb2plY3QtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1wcm9qZWN0LWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1wcm9qZWN0LWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1wcm9qZWN0LWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtcHJvamVjdC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtcHJvamVjdC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O09uIHRoZSBTZXR1cCBwYWdlLCBjbGljayAmbHQ7c3Ryb25nJmd0O1VzZSBFeGlzdGluZyBDb25maWcmbHQ7L3N0cm9uZyZndDsgdG8gaW5kaWNhdGUgdGhhdCB5b3Ugd2lsbCBiZSBhZGRpbmcgYSBjb25maWd1cmF0aW9uIGZpbGUgbWFudWFsbHkgYW5kIG5vdCB1c2luZyB0aGUgc2FtcGxlLiBOZXh0LCB5b3UgYXJlIHByb21wdGVkIHRvIGVpdGhlciBkb3dubG9hZCBhIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgdGhlIHBpcGVsaW5lIG9yIHN0YXJ0IGJ1aWxkaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtY29uZmlnLWNvbmZpcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0J1aWxkIFByb21wdCAtIENpcmNsZUNJJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWNvbmZpZy1jb25maXJtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1jb25maWctY29uZmlybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtY29uZmlnLWNvbmZpcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtY29uZmlnLWNvbmZpcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWNvbmZpZy1jb25maXJtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWNvbmZpZy1jb25maXJtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWNvbmZpZy1jb25maXJtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1jb25maWctY29uZmlybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1jb25maWctY29uZmlybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1jb25maWctY29uZmlybS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtY29uZmlnLWNvbmZpcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtY29uZmlnLWNvbmZpcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtY29uZmlnLWNvbmZpcm0ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWNvbmZpZy1jb25maXJtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWNvbmZpZy1jb25maXJtLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayAmbHQ7c3Ryb25nJmd0O1N0YXJ0IEJ1aWxkaW5nJmx0Oy9zdHJvbmcmZ3Q7LiBUaGlzIGJ1aWxkIHdpbGwgZmFpbCBiZWNhdXNlIHdlIGhhdmUgbm90IHNldCB1cCBvdXIgY29uZmlndXJhdGlvbiBmaWxlIHlldC4gU2V0dGluZyBpdCB1cCBpcyBvdXIgbmV4dCBzdGVwLiZsdDsvcCZndDsKCiZsdDtwJmd0O0ZvciB0aGUgZmluYWwgc3RlcCwgY3JlYXRlIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlJmd0Oy5jaXJjbGVjaSZsdDsvY29kZSZndDsgYXQgdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QuIEFkZCBhIGNvbmZpZ3VyYXRpb24gZmlsZSBuYW1lZCAmbHQ7Y29kZSZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OyBpbnNpZGUgdGhlIGZvbGRlciB5b3UganVzdCBjcmVhdGVkLiBJbiB0aGlzIGZpbGUsIGVudGVyIHRoZSBmb2xsb3dpbmcgY29kZTombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246IDIuMQpqb2JzOgogIGJ1aWxkOgogICAgd29ya2luZ19kaXJlY3Rvcnk6IH4vcmVwbwogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9ub2RlOjEyLWJyb3dzZXJzCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IFVwZGF0ZSBOUE0KICAgICAgICAgIGNvbW1hbmQ6ICZxdW90O3N1ZG8gbnBtIGluc3RhbGwgLWcgbnBtJnF1b3Q7CiAgICAgIC0gcmVzdG9yZV9jYWNoZToKICAgICAgICAgIGtleTogZGVwZW5kZW5jeS1jYWNoZS17eyBjaGVja3N1bSAmcXVvdDtwYWNrYWdlLWxvY2suanNvbiZxdW90OyB9fQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IEluc3RhbGwgRGVwZW5kZW5jaWVzCiAgICAgICAgICBjb21tYW5kOiBucG0gaW5zdGFsbAogICAgICAtIHNhdmVfY2FjaGU6CiAgICAgICAgICBrZXk6IGRlcGVuZGVuY3ktY2FjaGUte3sgY2hlY2tzdW0gJnF1b3Q7cGFja2FnZS1sb2NrLmpzb24mcXVvdDsgfX0KICAgICAgICAgIHBhdGhzOgogICAgICAgICAgICAtIC4vbm9kZV9tb2R1bGVzCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogUnVuIHRoZSBhcHBsaWNhdGlvbgogICAgICAgICAgY29tbWFuZDogbm9kZSBzZXJ2ZXIuanMKICAgICAgICAgIGJhY2tncm91bmQ6IHRydWUKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBSdW4gdGVzdHMKICAgICAgICAgIGNvbW1hbmQ6IG5wbSBydW4gdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtJbiB0aGlzIGNvbmZpZ3VyYXRpb24sIHRoZSByZXF1aXJlZCBOb2RlLmpzIGltYWdlIGlzIHB1bGxlZCBpbi4gVGhpcyBpbWFnZSBjb250YWlucyBicm93c2Vycywgd2hpY2ggaXMgaW1wb3J0YW50IGZvciBydW5uaW5nIHRoZSBicm93c2VyIHRlc3RzLiBUaGUgbmV4dCBwYXJ0IG9mIHRoZSBjb25maWcgdXBkYXRlcyAmbHQ7Y29kZSZndDtucG0mbHQ7L2NvZGUmZ3Q7LiBUaGUgcHJvamVjdCBkZXBlbmRlbmNpZXMgYXJlIHRoZW4gaW5zdGFsbGVkIGFuZCBjYWNoZWQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gcnVuIHRoZSBicm93c2VyIHRlc3RzIGFnYWluc3QgdGhlIGFwcGxpY2F0aW9uLCB0aGUgYXBwbGljYXRpb24gaXMgYm9vdGVkIHVwIGluIGEgYmFja2dyb3VuZCBwcm9jZXNzIHVzaW5nICZsdDtjb2RlJmd0O25vZGUgc2VydmVyJmx0Oy9jb2RlJmd0Oy4gVGhlIHRlc3RzIGFyZSB0aGVuIHJ1biB1c2luZyB0aGUgJmx0O2NvZGUmZ3Q7bnBtIHJ1biB0ZXN0Jmx0Oy9jb2RlJmd0OyBjb21tYW5kLiZsdDsvcCZndDsKCiZsdDtwJmd0O0NvbW1pdCBhbGwgY2hhbmdlcyB0byB0aGUgcHJvamVjdCBhbmQgcHVzaCB0byB5b3VyIHJlbW90ZSBHaXRIdWIgcmVwb3NpdG9yeS4gVGhpcyB3aWxsIGF1dG9tYXRpY2FsbHkgdHJpZ2dlciB0aGUgcGlwZWxpbmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtCdWlsZCBTdWNjZXNzZnVsIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1N1Y2Nlc3MhIENsaWNrICZsdDtzdHJvbmcmZ3Q7YnVpbGQmbHQ7L3N0cm9uZyZndDsgdG8gcmV2aWV3IHRoZSBkZXRhaWxzIG9mIHRoZSB0ZXN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7QnVpbGQgRGV0YWlscyAtIENpcmNsZUNJJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTE4LWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMTgtYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0xOC1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtHcmVhdCB3b3JrISZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25jbHVzaW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1Rlc3RpbmcgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgYSB1c2VyIG9mIHRoZSBhcHBsaWNhdGlvbiBnaXZlcyBzbyBtdWNoIGluc2lnaHQuIFlvdSBjYW4gbGVhcm4gaG93IHRoZSBkaWZmZXJlbnQgdW5pdHMgb2YgdGhlIGFwcGxpY2F0aW9uIHdvcmsgdG9nZXRoZXIgdG8gaGVscCB0aGUgdXNlciBhY2hpZXZlIHRoZWlyIHRhc2tzIGluIHlvdXIgYXBwbGljYXRpb25zLiBEZXNwaXRlIHRoYXQsIG1vc3QgaW50ZXJmYWNlL2Jyb3dzZXIgdGVzdHMgYXJlIHN0aWxsIGNvbXBsZXRlZCBtYW51YWxseS4gSW4gdGhpcyB0dXRvcmlhbCwgeW91IGhhdmUgZGVtb25zdHJhdGVkIGhvdyB0byBhdXRvbWF0ZSB0aGVzZSB0eXBlcyBvZiB0ZXN0cyB0byBzcGVlZCB1cCBkZXZlbG9wbWVudCBmbG93IGFuZCBpbmNyZWFzZSBwcm9kdWN0aXZpdHkuIEZ1bmN0aW9uYWwgYnJvd3NlciB0ZXN0aW5nIGltcHJvdmVzIHRoZSBxdWFsaXR5IG9mIHlvdXIgYXBwbGljYXRpb24gYnkgZ2l2aW5nIHlvdXIgdGVhbSB0aGUgYWJpbGl0eSBxdWlja2x5IGNhdGNoIGFuZCByZXNwb25kIHRvIGJ1Z3MuIEJlIHN1cmUgdG8gc2hhcmUgdGhlIGRldGFpbHMgb2YgeW91ciBzdWNjZXNzZnVsIHRlc3RzIHdpdGggeW91ciB0ZWFtIHNvIHRoYXQgdGhleSBjYW4gYWxzbyBiZW5lZml0IGZyb20gdGhpcyBpbmZvcm1hdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtIYXBweSBjb2RpbmchJmx0Oy9wJmd0OwoKJmx0O2hyIC8mZ3Q7CgombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vdHdpdHRlci5jb20vY29kZXJvbmZsZWVrP2xhbmc9ZW4mcXVvdDsmZ3Q7RmlrYXlvIEFkZXBvanUmbHQ7L2EmZ3Q7IGlzIGEgTGlua2VkSW4gTGVhcm5pbmcgKEx5bmRhLmNvbSkgQXV0aG9yLCBGdWxsLXN0YWNrIGRldmVsb3BlciwgdGVjaG5pY2FsIHdyaXRlciBhbmQgdGVjaCBjb250ZW50IGNyZWF0b3IgcHJvZmljaWVudCBpbiBXZWIgYW5kIE1vYmlsZSB0ZWNobm9sb2dpZXMgYW5kIERldk9wcyB3aXRoIG92ZXIgMTAgeWVhcnMgZXhwZXJpZW5jZSBkZXZlbG9waW5nIHNjYWxhYmxlIGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9ucy4gV2l0aCBvdmVyIDQwIGFydGljbGVzIHdyaXR0ZW4gZm9yIENpcmNsZUNJLCBUd2lsaW8sIEF1dGgwIGFuZCBUaGUgTmV3IFN0YWNrIGJsb2dzLCBhbmQgYWxzbyBvbiBoaXMgcGVyc29uYWwgTWVkaXVtIHBhZ2UsIGhlIGxvdmVzIHRvIHNoYXJlIGhpcyBrbm93bGVkZ2UgdG8gYXMgbWFueSBkZXZlbG9wZXJzIGFzIHdvdWxkIGJlbmVmaXQgZnJvbSBpdC4gWW91IGNhbiBhbHNvIGNoZWNrIG91dCBoaXMgdmlkZW8gY291cnNlcyBvbiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd3d3LnVkZW15LmNvbS91c2VyL2Zpa2F5by1hZGVwb2p1LyZxdW90OyZndDtVZGVteSZsdDsvYSZndDsuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5Vc2UgdGhlc2UgbWV0cmljcyB0byBnZXQgdGhlIG1vc3Qgb3V0IG9mIHlvdXIgZW5naW5lZXJpbmcgdGVhbTwvdGl0bGU+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy91c2UtdGhlc2UtbWV0cmljcy10by1nZXQtdGhlLW1vc3Qtb3V0LW9mLXlvdXItZW5naW5lZXJpbmctdGVhbS88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+VHVlLCAxNyBBdWcgMjAyMSAwNjowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy91c2UtdGhlc2UtbWV0cmljcy10by1nZXQtdGhlLW1vc3Qtb3V0LW9mLXlvdXItZW5naW5lZXJpbmctdGVhbS88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5Sb2IgWnViZXI8L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7SeKAmXZlIGJlZW4gbGVhZGluZyBzb2Z0d2FyZSB0ZWFtcyBmb3IgbW9yZSB0aGFuIDIwIHllYXJzIGFuZCBvbmUgdGhpbmcgSeKAmXZlIGxlYXJuZWQgYWJvdXQgbWV0cmljcyBpcyB0aGF0IGxlYWRlcnMgdGVuZCB0byBwdXQgdG9vIG11Y2ggZW1waGFzaXMgb24gZW5naW5lZXJpbmcgbWV0cmljcyBhbG9uZSwgd2l0aG91dCBjb25zaWRlcmluZyB0aGUgYmlnZ2VyIHBpY3R1cmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QWZ0ZXIgc3BlYWtpbmcgdG8gYSByYW5nZSBvZiBlbmdpbmVlcmluZyBpbmR1c3RyeSBsZWFkZXJzLCBhbmQgcG9yaW5nIG92ZXIgbWlsbGlvbnMgb2Ygam9icyBwcm9jZXNzZWQgZnJvbSBzb2Z0d2FyZSB0ZWFtcyB3b3JsZHdpZGUsIHdlIGZvdW5kIHRoYXQgdGhlIG1vc3QgaW5zaWdodGZ1bCBhbmQgcmVsZXZhbnQgbWV0cmljcyBmYWxsIGludG8gdGhyZWUgY2F0ZWdvcmllczombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O1ZlbG9jaXR5IG1ldHJpY3MmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtNb3JhbGUgbWV0cmljcyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0J1c2luZXNzIG1ldHJpY3MmbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O2gyJmd0O1ZlbG9jaXR5IG1ldHJpY3MmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7RW5naW5lZXJpbmcgdmVsb2NpdHkgbWV0cmljcyBtZWFzdXJlIHRoZSBzcGVlZCBhbmQgZWZmaWNpZW5jeSBvZiBzb2Z0d2FyZSBkZWxpdmVyeSBwaXBlbGluZXMg4oCUIGl04oCZcyB0aGUgbWV0cmljIGNhdGVnb3J5IHRoYXQgbWFuYWdlcnMgdHlwaWNhbGx5IHBheSB0aGUgbW9zdCBhdHRlbnRpb24gdG8uIFdoaWxlIEnigJlsbCBleHBsYWluIHdoeSBpdOKAmXMgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2VuZ2luZWVyaW5nLW1ldHJpY3MvJnF1b3Q7Jmd0O25vdCB0aGUgb25seSBpbXBvcnRhbnQgY2F0ZWdvcnkgdG8gdHJhY2smbHQ7L2EmZ3Q7LCB2ZWxvY2l0eSBtZXRyaWNzIGFyZSBjcml0aWNhbCBpbiBoZWxwaW5nIHRlYW1zIGlkZW50aWZ5IHNsb3dkb3ducyBhbmQgZmluZCB3YXlzIHRvIG9wdGltaXplIHRoZWlyIG92ZXJhbGwgcGVyZm9ybWFuY2UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7U29tZSBvZiB0aGUgbW9zdCBjb21tb24gdmVsb2NpdHkgbWV0cmljcyBpbmNsdWRlOiZsdDsvcCZndDsKCiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7VGhyb3VnaHB1dCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0NoYW5nZSBsZWFkIHRpbWUmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtTcHJpbnQgdmVsb2NpdHkmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtEdXJhdGlvbiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O01lYW4gdGltZSB0byByZWNvdmVyeSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1N1Y2Nlc3MgcmF0ZSZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7aDImZ3Q7Q3VzdG9taXplIHRocm91Z2hwdXQgdG8geW91ciB3b3JrIHN0cnVjdHVyZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtNb3NlcyBNZW5kb3phLCBmb3JtZXIgSGVhZCBvZiBFbmdpbmVlcmluZyBhdCBkYXRhIHByb2Nlc3NpbmcgYW5kIHJldmlldyBwbGF0Zm9ybSBaYXBwcm92ZWQsIHVzZXMgdGhyb3VnaHB1dCB0byB1bmRlcnN0YW5kIHRoZSBwYWNlIG9mIGhpcyB0ZWFt4oCZcyB3b3JrLiZsdDsvcCZndDsKCiZsdDtwJmd0O+KAnFRocm91Z2hwdXQgaGVscHMgdXMgaWRlbnRpZnkgYW5kIHVuZGVyc3RhbmQgc3BlZWQgYnV0IHRoZSB0aHJvdWdocHV0IG9mIGEgc3lzdGVtIGlzIGFsc28gYm91bmQgYnkgaXRzIHByaW1hcnkgY29uc3RyYWludCzigJ0gTWVuZG96YSBzYWlkLiDigJxUaHJvdWdocHV0IHdpbGwgc2hvdyB5b3Ugd2hhdCB0aGUgc2xvd2VzdCBpc3N1ZSBpcyBpbiBhIGNoYWluIG9mIGV2ZW50cywgYnV0IGl0IHdvbuKAmXQgc2hvdyB5b3UgaG93IHRvIGZpeCBpdCB0byBzcGVlZCB1cCB5b3VyIHdvcmsu4oCdJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7R3JhZW1lIEhhcnZleSwgYW4gZW5naW5lZXJpbmcgbWFuYWdlciBvbiBteSB0ZWFtLCBlbXBoYXNpemVzIHRoYXQgaXTigJlzIGltcG9ydGFudCBmb3IgYWxsIGVuZ2luZWVycyB0byBjdXN0b21pemUgdGhyb3VnaHB1dCBtZWFzdXJlbWVudCB0byB0aGVpciBpbmRpdmlkdWFsIHRlYW0uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q74oCcQmVjYXVzZSBvdXIgdGVhbSBwcmFjdGljZXMgcGFpci1wcm9ncmFtbWluZywgbWVhc3VyaW5nIHRocm91Z2hwdXQgaXNu4oCZdCBzb21ldGhpbmcgdGhhdCBjYW4gYmUgdGllZCB0byBhbiBpbmRpdmlkdWFs4oCZcyBwcm9kdWN0aXZpdHks4oCdIEhhcnZleSBzYWlkLiZsdDsvcCZndDsKCiZsdDtwJmd0O1doZW4gaXQgY29tZXMgdG8gdGhyb3VnaHB1dCwgaGlzIGVuZ2luZWVycyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvaG93LXRvLWJ1aWxkLWEtdGVhbS10aGF0LWRlbWFuZHMtbWV0cmljcy8mcXVvdDsmZ3Q7b3B0aW1pemUgZm9yIHRoZSB0ZWFtJmx0Oy9hJmd0OyByYXRoZXIgdGhhbiB0aGUgaW5kaXZpZHVhbC4gUGFpci1wcm9ncmFtbWluZyBhbmQgaGVscGluZyBlYWNoIG90aGVyIG1pZ2h0IGZlZWwgbGlrZSBpdOKAmXMgaW1wZWRpbmcgdGhlIHByb2dyZXNzIG9mIGFuIGluZGl2aWR1YWwgYnV0IGluIGFjdHVhbGl0eSwgaXQgcmVmb2N1c2VzIGVuZXJneSBvbiB3aGF04oCZcyBtb3N0IGltcG9ydGFudCBmb3IgdGhlIHRlYW0gYW5kIHVsdGltYXRlbHkgdGhlIGJ1c2luZXNzLiZsdDsvcCZndDsKCiZsdDtwJmd0O1doaWxlIHRocm91Z2hwdXQgaXMgYSB2YWx1YWJsZSBtZXRyaWMgdGhhdCBoZWxwcyB5b3UgdHJhY2sgb3V0cHV0LCB0aGVyZSBpcyBubyBvbmUtc2l6ZS1maXRzLWFsbCB3YXkgdG8gbWVhc3VyZSBpdC4gTWVhc3VyaW5nIHRocm91Z2hwdXQgYWNjdXJhdGVseSByZXF1aXJlcyB5b3UgdG8gZXZhbHVhdGUgdGhlIHN0cnVjdHVyZSBvZiB5b3VyIHRlYW0gYW5kIGhvdyB5b3Ugd29yay4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7TWVhc3VyZSBsZWFkIHRpbWUgdG8gaWRlbnRpZnkgY29tbXVuaWNhdGlvbiBpc3N1ZXMgYW5kIHRoZSBwaXBlbGluZSBxdWFsaXR5Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O0FjY29yZGluZyB0byBBbGV4IEJpbG1lcywgZm9ybWVyIFZQIG9mIEdyb3d0aCBhdCBzb2Z0d2FyZSBjb25maWd1cmF0aW9uIHRvb2wgUHVwcGV0LCB0aGVyZSBhcmUgdHdvIHdheXMgdG8gbWVhc3VyZSBjaGFuZ2UgbGVhZCB0aW1lLiDigJxPbmUgd2F5IHRvIG1lYXN1cmUgY2hhbmdlIGxlYWQgdGltZSBpcyB0byBsb29rIGF0IGhvdyBsb25nIGl0IHRha2VzIHRvIGdldCBhbiBpZGVhIG91dCBhbmQgZm9yIHRoZSBpZGVhIHRvIGdvIGZ1bGwgY3ljbGUuIFRoZSBvdGhlciB3YXkgaXMgdG8gbG9vayBhdCBkZXBsb3ltZW50IGxlYWQgdGltZSwgd2hpY2ggbWVhc3VyZXMgaG93IGxvbmcgaXQgdGFrZXMgdG8gZ2V0IHRvIHByb2R1Y3Rpb24gYWZ0ZXIgYSBkZXZlbG9wZXIgaGFzIHB1c2hlZCB0aGUgY2hhbmdlIHRvIHByb2R1Y3Rpb24u4oCdJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7RnVsbCBjaGFuZ2UgbGVhZCB0aW1lIHdpbGwgcG9pbnQgb3V0IGlzc3VlcyBpbiBjb21tdW5pY2F0aW9uIGFuZCB1bmRlcnN0YW5kaW5nLCBhcyB3ZWxsIGFzIHRoZSBkZXB0aCBvZiB5b3VyIGJhY2tsb2cuIERlcGxveW1lbnQgbGVhZCB0aW1lIGlzIG1vcmUgbGlrZWx5IHRvIHNob3cgdGhlIHF1YWxpdHkgb2YgeW91ciBwaXBlbGluZXMgYW5kIHRvb2xpbmcuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1VzZSBzcHJpbnQgdmVsb2NpdHkgdG8gcGxhbiB3b3JrbG9hZCZsdDsvaDImZ3Q7CgombHQ7cCZndDtTcHJpbnQgdmVsb2NpdHkgbWVhc3VyZXMgdGhlIGFtb3VudCBvZiB3b3JrIGEgdGVhbSBjYW4gdGFja2xlIGR1cmluZyBhIHNpbmdsZSBzcHJpbnQgYW5kIGNhbiBiZSB1c2VkIGZvciBwbGFubmluZyBhbmQgbWVhc3VyaW5nIHRlYW0gcGVyZm9ybWFuY2UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG9tIEZvcmxpbmksIENUTyBhdCB2aWRlbyBjb25mZXJlbmNpbmcgcGxhdGZvcm0gTGl2ZXN0b3JtLCBkaXZlcyBldmVuIGRlZXBlciB3aGVuIG1lYXN1cmluZyB2ZWxvY2l0eSwgZm9jdXNpbmcgb24gdGhyZWUgc21hbGxlciBtZXRyaWNzOiZsdDsvcCZndDsKCiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7TnVtYmVyIG9mIGlzc3VlcyBhbmQgc3RvcnkgcG9pbnRzJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7TnVtYmVyIG9mIGlzc3VlcyBkb25lIHZzLiBwbGFubmVkJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7VGhlIHBlcmNlbnRhZ2Ugb2YgaXNzdWVzIGRpc3RyaWJ1dGVkIGRlcGVuZGluZyBvbiB0eXBlJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtwJmd0O+KAnExpdmVzdG9ybSBlbmdpbmVlcnMgd29yayBvbiB0d28td2VlayBzcHJpbnRzIGFuZCBoYXZlIDUwIHN0b3J5IHBvaW50cyBwZXIgc3ByaW50LOKAnSBGb3JsaW5pIHNhaWQuIOKAnFdlIHRyYWNrIHRoZSBudW1iZXIgb2YgaXNzdWVzIGRvbmUgdnMuIHBsYW5uZWQgYmVjYXVzZSBpdCBnaXZlcyB1cyBhIGdvb2QgaW5kaWNhdGlvbiBvZiB0aGUgc3ByaW50IHBsYW5uaW5nIHF1YWxpdHkgYmV0d2VlbiBQcm9kdWN0IGFuZCBUZWNoLuKAnSZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZW4sIGhpcyB0ZWFtIGxvb2tzIGF0IHRoZSBwZXJjZW50YWdlIG9mIGlzc3VlcyBieSB0eXBlLiDigJxXaGVuIGEgc3ByaW50IGNvbnRhaW5zIG9ubHkgbmV3IGZlYXR1cmUgaXNzdWVzLCB3ZSBrbm93IGZyb20gdGhlIHN0YXJ0IHRoYXQgaXQgbWlnaHQgYmUgcXVpdGUgYSBjaGFsbGVuZ2luZyBzcHJpbnQgdG8gdGFja2xlLOKAnSBGb3JsaW5pIGFkZGVkLiDigJxJZGVhbGx5LCB5b3Ugc2hvdWxkIGJhbGFuY2UgdGhlIHR5cGUgb2YgaXNzdWVzIGJ5IHNwcmludCBhcyBtdWNoIGFzIHBvc3NpYmxlLuKAnSZsdDsvcCZndDsKCiZsdDtoMiZndDtNb3JhbGUgbWV0cmljcyZsdDsvaDImZ3Q7CgombHQ7cCZndDtNb3JhbGUgbWV0cmljcyBhcmUgcHJvYmFibHkgdGhlIG1vc3Qgb3Zlcmxvb2tlZCBtZXRyaWMgY2F0ZWdvcnkgaW4gZW5naW5lZXJpbmcuIFRoZXkgdGVsbCB5b3UgaG93IGVuZ2luZWVycyBmZWVsIGFib3V0IHRoZSBxdWFsaXR5IG9mIHRoZWlyIHdvcmsgYW5kIHRoZWlyIGpvYiBoYXBwaW5lc3MsIHdoaWNoIGlzIGEgbWFqb3IgcmV0ZW50aW9uIGZhY3Rvci4gS2VlcGluZyByZXRlbnRpb24gaGlnaCBtZWFucyBrZWVwaW5nIG1vcmFsZSBoaWdoLiZsdDsvcCZndDsKCiZsdDtwJmd0O1NvbWUgY29tbW9uIG1vcmFsZSBtZXRyaWNzIGluY2x1ZGU6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDtJbmRpdmlkdWFsIGFuZCB0ZWFtIG1vcmFsZSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0NvZGUgcXVhbGl0eSBjb25maWRlbmNlJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMiZndDtNZWFzdXJlIG1vcmFsZSBieSBhc2tpbmcgZW5naW5lZXJzIGRpcmVjdGx5Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O0F0IFphcHByb3ZlZCwgTWVuZG96YSB0cmFja2VkIG1vcmFsZSBpbiBvcmRlciB0byBtb25pdG9yIGVtcGxveWVlIHJldGVudGlvbi4g4oCcV2UgbWVhc3VyZWQgbW9yYWxlIGF0IHdvcmsgdXNpbmcgc3VydmV5cywgaGF2aW5nIGNvbnZlcnNhdGlvbnMsIGFuZCBhc2tpbmcgbWFuYWdlcnMgdG8gZGl2ZSBkZWVwZXIgaW4gb25lLW9uLW9uZSBtZWV0aW5ncyB0byBmaW5kIG91dCBob3cgZW1wbG95ZWVzIGZlbHQu4oCdJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SWYgcmVzcG9uc2VzIHRvIGEgc3VydmV5IGFyZSBvdmVyd2hlbG1pbmdseSBwb3NpdGl2ZSwgeW914oCZbGwgd2FudCB0byBrbm93IHdoYXQgaXMgd29ya2luZyBhbmQgaG93IHRvIHJlcGxpY2F0ZSB0aGF0IHBvc2l0aXZlIHdvcmsgZW52aXJvbm1lbnQuIFNpbWlsYXJseSwgaWYgcmVzcG9uc2VzIGFyZSBuZWdhdGl2ZSwgaXTigJlzIGhlbHBmdWwgdG8gZmluZCBvdXQgZGlyZWN0bHkgZnJvbSB5b3VyIHRlYW0gd2h5IHRoZXkgZmVlbCB0aGF0IHdheSBhbmQgd2hhdCB5b3UgY2FuIGRvIHRvIGZpeCB0aGUgcHJvYmxlbS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Rm9jdXMgb24gY29uZmlkZW5jZSBvdmVyIGNvdmVyYWdlJmx0Oy9oMiZndDsKCiZsdDtwJmd0O01lbmRvemEgYXQgWmFwcHJvdmVkIG1lYXN1cmVkIGNvbmZpZGVuY2UgYnkgcmV2aWV3aW5nIGV2ZXJ5IHNwcmludCBpbiBjb25qdW5jdGlvbiB3aXRoIHRoYXQgdGVhbeKAmXMgbWFuYWdlciBhbmQgdGhlaXIgc2NydW0gbWFzdGVyLiDigJxBcyB3ZSBtZWFzdXJlZCBjb2RlIHF1YWxpdHkgY29uZmlkZW5jZSBvdmVyIHR3byBvciB0aHJlZSBzcHJpbnRzLCBpZiB3ZSBzYXcgY29kZSBxdWFsaXR5IHRhbmtpbmcsIGl0IG1lYW50IHNvbWV0aGluZyB3YXMgd3Jvbmcgd2l0aCBob3cgdGhlIHRlYW1zIHBsYW5uZWQgdGhlaXIgaW5kaXZpZHVhbCBpbnZlc3RtZW50IHdpdGggdGhlIHdvcmss4oCdIHNheXMgTWVuZG96YS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgZW5naW5lZXJpbmcgbWFuYWdlcnMgdGhhdCBJIGxlYWQgYWxzbyBtZWFzdXJlIHdvcmsgYnkgY29uZmlkZW5jZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDvigJxGb2N1c2luZyBvbiBjb25maWRlbmNlIG92ZXIgY292ZXJhZ2UgYXMgYSBtZXRyaWMgcmVxdWlyZXMgdGhhdCB0aGUgZW1waGFzaXMgaXNu4oCZdCBvbiBjb2RlIGNvdmVyYWdlLOKAnSBIYXJ2ZXkgYWRkZWQuIOKAnEl04oCZcyBjcml0aWNhbCB0byBicmVhayB0aGUgcmVsaWFuY2Ugb24gaGF2aW5nIDgwJSBvciA5MCUgY29kZSBjb3ZlcmFnZSBhbmQgdGhlbiBzaGlwcGluZyBpdCBvbmx5IHRvIGZpbmQgb3V0IHRoZSBjb2RlIGlzIGJyb2tlbi4gVGVzdCBjb3ZlcmFnZSBpcyBhIHBhcnRpYWwgcHJveHkgZm9yIGNvZGUgY29uZmlkZW5jZS4gSWYgeW91IGtub3cgOTUlIG9mIHlvdXIgY29kZSBpcyBmdWxseSB0ZXN0ZWQsIHZlcnN1cyAyMCUsIHRoZW4geW914oCZcmUgZ29pbmcgdG8gZmVlbCBwcmV0dHkgY29uZmlkZW50IHRoYXQgaWYgeW91ciB0ZXN0cyBwYXNzLCB5b3VyIGNvZGUgaXMgbGVnaXRpbWF0ZS7igJ0mbHQ7L3AmZ3Q7CgombHQ7cCZndDtIYXJ2ZXnigJlzIHRlYW0gZm9jdXNlcyBvbiBkZWxpdmVyaW5nIHNtYWxsIGl0ZXJhdGlvbnMgcXVpY2tseS4gVGhpcyBwcm92aWRlcyB0aGUgY29uZmlkZW5jZSB0aGF0IHRoZSB0ZWFtIGlzIGJ1aWxkaW5nIHNvbWV0aGluZyBvZiBxdWFsaXR5LCBub3RoaW5nIGlzIGJyb2tlbiwgYW5kIHRoZXnigJl2ZSBtYWRlIHRoZSByaWdodCBjaG9pY2VzIGluIGJ1aWxkaW5nIHRvb2xzIGZvciB0aGUgZGFzaGJvYXJkLiZsdDsvcCZndDsKCiZsdDtoMiZndDtCdXNpbmVzcyBtZXRyaWNzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0V2ZXJ5dGhpbmcgYW4gZW5naW5lZXIgZG9lcyBzaG91bGQgcHJvcGVsIHRoZSBjb21wYW55IGZvcndhcmQuIFRoYXTigJlzIHdoeSBpdOKAmXMgYWxzbyBlc3NlbnRpYWwgdG8gdHJhY2sgYnVzaW5lc3MgbWV0cmljcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtTb21lIGNvbW1vbiBidXNpbmVzcyBtZXRyaWNzIGluY2x1ZGU6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDtDb21wYW55IGdyb3d0aCBGdW5uZWwgbWV0cmljcyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0VuZC11c2VyIHZhbHVlJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMiZndDtUcmFjayBob3cgcXVpY2tseSB5b3VyIGJ1c2luZXNzIGlzIHNjYWxpbmcmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VHJhY2tpbmcgYnVzaW5lc3MgbWV0cmljcyBpcyBob3cgeW91ciB0ZWFtIGFjY29tbW9kYXRlcyBmb3IgdXNlciBncm93dGggZWZmZWN0aXZlbHkuIEFjY29yZGluZyB0byBZaXhpbiBaaHUsIGZvcm1lcmx5IG9mIFViZXIsIHdoaWxlIGl04oCZcyBlc3NlbnRpYWwgdG8gbG9vayBhdCBlbmdpbmVlcmluZyBleGVjdXRpb24gbWV0cmljcywgaXTigJlzIGFsc28gaW1wb3J0YW50IHRvIGJlIGRpYWxlZCBpbnRvIHRoZSBidXNpbmVzc+KAmXMgZ29hbHMgYW5kIHRvIG1lYXN1cmUgdGhlIGNvbXBhbnkgZ3Jvd3RoLiZsdDsvcCZndDsKCiZsdDtwJmd0O0FzIFViZXIgZ3JldyBleHBvbmVudGlhbGx5LCB0cmFja2luZyBidXNpbmVzcyBtZXRyaWNzIHdhcyBpbmNyZWRpYmx5IGltcG9ydGFudCBpbiBvcmRlciBmb3IgWmh14oCZcyBlbmdpbmVlcmluZyB0ZWFtIHRvIHN1Y2NlZWQuIOKAnFdoZW4geW914oCZcmUgdGFsa2luZyBhYm91dCBkb3VibGluZyBldmVyeSBzaXggbW9udGhzLCB5b3UgaGF2ZSB0byBiZSB0cmFja2luZyB0aGF0IHRvIGtub3cgd2hhdCB5b3UgbmVlZCB0byBidWlsZCwgd2hhdCBkZWdyYWRhdGlvbnMgdG8gZXhwZWN0LCBob3cgbWFueSBkYXRhIGNlbnRlcnMgeW91IG5lZWQsIGhvdyBtYW55IGJveGVzLCBldGMuLOKAnSBaaHUgc2FpZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtJbiBzaG9ydCwgZW5naW5lZXJzIGhhdmUgdG8ga2VlcCBhbiBleWUgb24gcmVhbC10aW1lIGJ1c2luZXNzIG1ldHJpY3MgdG8gcHJvamVjdCBhbmQgcGxhbiBhY2N1cmF0ZWx5LiDigJxZb3UgaGF2ZSB0byBiZSBwcm9hY3RpdmUs4oCdIFpodSBhZGRlZC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7R2V0dGluZyB0aGUgbW9zdCBvdXQgb2YgbWVhbmluZ2Z1bCBtZXRyaWNzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0hlcmUgYXJlIHNvbWUgdGlwcyB0byBoZWxwIHlvdSBnZXQgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2hvdy10by1tZWFzdXJlLWRldm9wcy1zdWNjZXNzLTQta2V5LW1ldHJpY3MvJnF1b3Q7Jmd0O3RoZSBtb3N0IHZhbHVlJmx0Oy9hJmd0OyBvdXQgb2YgeW91ciBlbmdpbmVlcmluZyBlZmZvcnRzOiZsdDsvcCZndDsKCiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7RGVmaW5lIGJ1c2luZXNzIGdvYWxzLiBZb3VyIGVuZ2luZWVycyBzaG91bGQga25vdyB3aGF0IHlvdXIgYnVzaW5lc3MgaXMgdHJ5aW5nIHRvIGFjY29tcGxpc2guIFdoZW4gZW5naW5lZXJzIHVuZGVyc3RhbmQgdGhlIGRpcmVjdGlvbiBvZiB0aGUgY29tcGFueSwgdGhleSB1bmRlcnN0YW5kIHdoYXQgdGhleeKAmXJlIHdvcmtpbmcgdG93YXJkcy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtSZXZpZXcgbWV0cmljcyBvZnRlbi4gU3RhcnQgZXZlcnkgbWVldGluZyBieSByZXZpZXdpbmcgbWV0cmljcyBzbyB0aGUgdGVhbSBpcyBhbGlnbmVkIG9uIHdoYXQgeW914oCZcmUgZG9pbmcgcmlnaHQgYW5kIHdoYXQgbmVlZHMgaW1wcm92ZW1lbnQuJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7U3RhcnQgc21hbGwuIFlvdSBvbmx5IG5lZWQgb25lIHRvIHRocmVlIG1ldHJpY3MgdG8gZ2V0IHN0YXJ0ZWQuIElmIHlvdeKAmXJlIGludGVudGlvbmFsIGFib3V0IHRyYWNraW5nIHNpbXBsZSBtZXRyaWNzLCBleHBlcmltZW50aW5nIHdpdGggZGlmZmVyZW50IGFwcHJvYWNoZXMsIGFuZCBzZWVpbmcgdGhvc2UgbWV0cmljcyBldm9sdmUsIHlvdSBjYW4gYWRkIG1ldHJpY3Mgb3ZlciB0aW1lLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0xvb2sgYmV5b25kIGV4ZWN1dGlvbiBtZXRyaWNzLiBUaGUgc3VjY2VzcyBvZiBhbiBlbmdpbmVlcmluZyB0ZWFtIGhpbmdlcyBvbiBtb3JlIHRoYW4gZW5naW5lZXJpbmcgbWV0cmljcy4gUGFpcmluZyBlbmdpbmVlcmluZyBtZXRyaWNzIHdpdGggYnVzaW5lc3MgbWV0cmljcyB3aWxsIGhlbHAgeW91IHVuZGVyc3RhbmQgd2h5IHlvdeKAmXJlIGJ1aWxkaW5nIHdoYXQgeW914oCZcmUgYnVpbGRpbmcgZXZlcnkgZGF5LiZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDsmbHQ7ZW0mZ3Q7VGhpcyBhcnRpY2xlIHdhcyBvcmlnaW5hbGx5IHB1Ymxpc2hlZCBpbiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vdmVudHVyZWJlYXQuY29tLzIwMjEvMDcvMTgvdXNlLXRoZXNlLW1ldHJpY3MtdG8tZ2V0LXRoZS1tb3N0LW91dC1vZi15b3VyLWVuZ2luZWVyaW5nLXRlYW0vJnF1b3Q7Jmd0O1ZlbnR1cmVCZWF0Jmx0Oy9hJmd0OyZsdDsvZW0mZ3Q7Jmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5DcmVhdGUgYSBjb250aW51b3VzIGRlcGxveW1lbnQgcGlwZWxpbmUgZm9yIERqYW5nbyBhcHBsaWNhdGlvbnM8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvZGphbmdvLWRlcGxveS88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+VHVlLCAxMCBBdWcgMjAyMSAxMzowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9kamFuZ28tZGVwbG95LzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPkZpa2F5byBBZGVwb2p1PC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cuZGphbmdvcHJvamVjdC5jb20vJnF1b3Q7Jmd0O0RqYW5nbyZsdDsvYSZndDsgaXMgdGhlIG1vc3QgcG9wdWxhciB3ZWIgZGV2ZWxvcG1lbnQgZnJhbWV3b3JrIGZvciB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3d3dy5weXRob24ub3JnLyZxdW90OyZndDtQeXRob24mbHQ7L2EmZ3Q7IHByb2dyYW1taW5nIGxhbmd1YWdlLiBJdHMgZGVzaWduIGZhY2lsaXRhdGVzIHJhcGlkIGRldmVsb3BtZW50IHdpdGhvdXQgY29tcHJvbWlzaW5nIG9uIHRoZSBzdGFuZGFyZHMgb2YgcHJvZmVzc2lvbmFsbHkgYnVpbHQgYXBwbGljYXRpb25zLiBJdCBpcyBmcmVlLCBvcGVuIHNvdXJjZSwgdXNlcyB0aGUgTW9kZWwtVmlldy1UZW1wbGF0ZSBhcmNoaXRlY3R1cmFsIHBhdHRlcm4sIGFuZCBlbmNhcHN1bGF0ZXMgYSBsb3Qgb2YgYm9pbGVycGxhdGVzIHRvIGVuYWJsZSBkZXZlbG9wZXJzIGNodXJuIG91dCB3ZWIgYXBwcyBxdWlja2x5LiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIHRoaXMgdHV0b3JpYWwsIHlvdSB3aWxsIGxlYXJuIGFuZCBkZW1vbnN0cmF0ZSBob3cgdG8gY3JlYXRlIGEgZGVwbG95bWVudCBwaXBlbGluZSB0byBjb250aW51b3VzbHkgZGVwbG95IHlvdXIgRGphbmdvIGFwcHMgdG8gYSBob3N0aW5nIGVudmlyb25tZW50LiZsdDsvcCZndDsKCiZsdDtoMiZndDtQcmVyZXF1aXNpdGVzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGZvbGxvdyB0aGlzIHBvc3QsIGEgZmV3IHRoaW5ncyBhcmUgcmVxdWlyZWQ6Jmx0Oy9wJmd0OwoKJmx0O29sJmd0OwogICZsdDtsaSZndDtCYXNpYyBrbm93bGVkZ2Ugb2YgdGhlIFB5dGhvbiBwcm9ncmFtbWluZyBsYW5ndWFnZSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cucHl0aG9uLm9yZy8mcXVvdDsmZ3Q7UHl0aG9uJmx0Oy9hJmd0OyAodmVyc2lvbiAmYW1wO2d0Oz0gMykgaW5zdGFsbGVkIG9uIHlvdXIgc3lzdGVtIGFuZCB1cGRhdGVkJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vaGVyb2t1LmNvbS8mcXVvdDsmZ3Q7SGVyb2t1Jmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL3NpZ251cCZxdW90OyZndDtDaXJjbGVDSSZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vJnF1b3Q7Jmd0O0dpdEh1YiZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiZsdDsvb2wmZ3Q7CgombHQ7cCZndDtXaXRoIGFsbCB0aGVzZSBpbnN0YWxsZWQgYW5kIHNldCB1cCwgeW91IGNhbiBiZWdpbiB0aGUgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0Nsb25pbmcgYW5kIHJ1bm5pbmcgdGhlIHNhbXBsZSBEamFuZ28gcHJvamVjdCZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBnZXQgc3RhcnRlZCwgeW91IHdpbGwgYmUgY2xvbmluZyBhIHNpbXBsZSBEamFuZ28gcHJvamVjdCB5b3UgY2FuIHVzZSBmb3IgdGhlIGRlcGxveW1lbnQgZGVtb25zdHJhdGlvbi4gVG8gY2xvbmUgdGhlIHByb2plY3QsIHJ1bjombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2dpdCBjbG9uZSAtLXNpbmdsZS1icmFuY2ggLS1icmFuY2ggYmFzZS1wcm9qZWN0IGh0dHBzOi8vZ2l0aHViLmNvbS9DSVJDTEVDSS1HV1AvY2NpLWNkLWRqYW5nbwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtPbmNlIGNsb25lZCwgZ28gaW50byB0aGUgcHJvamVjdCByb290ICgmbHQ7Y29kZSZndDtjZCBjZC1kamFuZ28tc2l0ZSZsdDsvY29kZSZndDspIGFuZCBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kIHRvIHN0YXJ0IHVwIHRoZSBwcm9qZWN0IHdpdGggdGhlIGxvY2FsIFB5dGhvbiBzZXJ2ZXI6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtweXRob24gbWFuYWdlLnB5IHJ1bnNlcnZlcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgYm9vdCB1cCB0aGUgc2VydmVyIGFuZCBydW4gdGhlIGFwcGxpY2F0aW9uIGF0IHRoZSBhZGRyZXNzICZsdDtjb2RlJmd0O2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMCZsdDsvY29kZSZndDsuIExvYWQgdGhpcyBhZGRyZXNzIGluIHlvdXIgYnJvd3Nlci4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O1NpdGUgUnVuIC0gTG9jYWwmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAyLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtDcmVhdGluZyBhIEhlcm9rdSBBcHAmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7WW91ciBuZXh0IHN0ZXAgaXMgdG8gc2V0IHVwIGEgSGVyb2t1IGFwcGxpY2F0aW9uIHRvIGhvc3QgdGhlIGFwcGxpY2F0aW9uLiBHbyB0byB5b3VyICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9kYXNoYm9hcmQuaGVyb2t1LmNvbSZxdW90OyZndDtIZXJva3UgZGFzaGJvYXJkJmx0Oy9hJmd0OyBhbmQgY2xpY2sgJmx0O3N0cm9uZyZndDtOZXcmbHQ7L3N0cm9uZyZndDsgLSZhbXA7Z3Q7ICZsdDtzdHJvbmcmZ3Q7Q3JlYXRlIG5ldyBhcHAmbHQ7L3N0cm9uZyZndDsuIEVudGVyIGEgbmFtZSBmb3IgdGhlIG5ldyBhcHBsaWNhdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtOZXcgQXBwIC0gSGVyb2t1JnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1oZXJva3UtbmV3LWFwcC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktaGVyb2t1LW5ldy1hcHAucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktaGVyb2t1LW5ldy1hcHAucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1oZXJva3UtbmV3LWFwcC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1oZXJva3UtbmV3LWFwcC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1oZXJva3UtbmV3LWFwcC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktaGVyb2t1LW5ldy1hcHAucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktaGVyb2t1LW5ldy1hcHAucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktaGVyb2t1LW5ldy1hcHAucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWhlcm9rdS1uZXctYXBwLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtNYWtlIGEgbm90ZSBvZiB0aGUgbmFtZSB5b3UganVzdCBlbnRlcmVkLiBZb3Ugd2lsbCBuZWVkIHRoaXMgbGF0ZXIgb24gaW4gdGhlIHR1dG9yaWFsLiBOZXh0LCBsb2NhdGUgeW91ciBIZXJva3UgQVBJIGtleSBpbiB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2Rhc2hib2FyZC5oZXJva3UuY29tL2FjY291bnQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7QWNjb3VudCBTZXR0aW5ncyZsdDsvY29kZSZndDsmbHQ7L2EmZ3Q7IHNlY3Rpb24gb2YgeW91ciBkYXNoYm9hcmQuIFlvdSB3aWxsIGFsc28gbmVlZCB0aGlzIGxhdGVyIGluIHRoZSB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFjY291bnQtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0FjY291bnQgU2V0dGluZ3MgLSBIZXJva3UmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWNjb3VudC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWNjb3VudC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWNjb3VudC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hY2NvdW50LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hY2NvdW50LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFjY291bnQtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWNjb3VudC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWNjb3VudC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hY2NvdW50LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFjY291bnQtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFjY291bnQtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWNjb3VudC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hY2NvdW50LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hY2NvdW50LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFjY291bnQtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtTZXR0aW5nIHVwIGEgQ2lyY2xlQ0kgcHJvamVjdCBmb3IgZGVwbG95bWVudCZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBiZWdpbiB0aGlzIHByb2Nlc3MsIHlvdSBmaXJzdCBuZWVkIHRvICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9wdXNoaW5nLWEtcHJvamVjdC10by1naXRodWIvJnF1b3Q7Jmd0O3B1c2ggdGhlIHByb2plY3QgdG8gYSByZW1vdGUgcmVwb3NpdG9yeSBvbiBHaXRIdWImbHQ7L2EmZ3Q7LiBNYWtlIHN1cmUgdGhhdCB0aGlzIGlzIHRoZSBHaXRIdWIgYWNjb3VudCBjb25uZWN0ZWQgdG8geW91ciBDaXJjbGVDSSBhY2NvdW50LiZsdDsvcCZndDsKCiZsdDtwJmd0O05leHQsIGdvIHRvIHRoZSBQcm9qZWN0cyBwYWdlIChjbGljayAmbHQ7c3Ryb25nJmd0O1Byb2plY3RzJmx0Oy9zdHJvbmcmZ3Q7IG9uIHRoZSB2ZXJ0aWNhbCBtZW51IG9uIHRoZSByaWdodCkgb24gdGhlIENpcmNsZUNJIGRhc2hib2FyZC4gQWRkIHRoZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7QWRkIFByb2plY3QgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTAxLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDEucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wMS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtTZXQgVXAgUHJvamVjdCZsdDsvc3Ryb25nJmd0OyB0byBiZWdpbi4gQ2xpY2sgJmx0O3N0cm9uZyZndDtTa2lwIHRoaXMgc3RlcCZsdDsvc3Ryb25nJmd0OyBvbiB0aGUgbW9kYWwgdGhhdCBwb3BzIHVwLiBXZSB3aWxsIGJlIG1hbnVhbGx5IGFkZGluZyBvdXIgQ2lyY2xlQ0kgY29uZmlnIGxhdGVyIGluIHRoaXMgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtBZGQgQ29uZmlnIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA3LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O09uIHRoZSBTZXR1cCBwYWdlLCBjbGljayAmbHQ7c3Ryb25nJmd0O1VzZSBFeGlzdGluZyBDb25maWcmbHQ7L3N0cm9uZyZndDsgdG8gaW5kaWNhdGUgdGhhdCB5b3UgYXJlIGFkZGluZyBhIGNvbmZpZ3VyYXRpb24gZmlsZSBtYW51YWxseSBhbmQgbm90IHVzaW5nIHRoZSBzYW1wbGUgZGlzcGxheWVkLiBOZXh0LCB5b3UgZ2V0IGEgcHJvbXB0IHRvIGVpdGhlciBkb3dubG9hZCBhIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgdGhlIHBpcGVsaW5lIG9yIHN0YXJ0IGJ1aWxkaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtCdWlsZCBQcm9tcHQgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtTdGFydCBCdWlsZGluZyZsdDsvc3Ryb25nJmd0Oy4gVGhpcyBidWlsZCB3aWxsIGZhaWwgYmVjYXVzZSB3ZSBoYXZlIG5vdCBzZXQgdXAgb3VyIGNvbmZpZ3VyYXRpb24gZmlsZSB5ZXQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIGZpbmFsIHRoaW5nIHdlIG5lZWQgdG8gZG8gb24gdGhlIENpcmNsZUNJIGNvbnNvbGUgaXMgdG8gc2V0IHVwIGVudmlyb25tZW50IHZhcmlhYmxlcyBmb3IgdGhlIHByb2plY3Qgd2UganVzdCBhZGRlZC4gVGhpcyB3aWxsIGVuYWJsZSBvdXIgcHJvamVjdCB0byBoYXZlIGF1dGhlbnRpY2F0ZWQgYWNjZXNzIHRvIG91ciBIZXJva3UgYXBwbGljYXRpb24gZm9yIGRlcGxveW1lbnRzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0dvIHRvIHlvdXIgcHJvamVjdOKAmXMgc2V0dGluZ3MgYnkgY2xpY2tpbmcgdGhlICZsdDtzdHJvbmcmZ3Q7UHJvamVjdCBTZXR0aW5ncyZsdDsvc3Ryb25nJmd0OyBidXR0b24gb24gdGhlIFBpcGVsaW5lcyBwYWdlLiBNYWtlIHN1cmUgeW91ciBwcm9qZWN0IGlzIHRoZSBvbmUgdGhhdCBpcyBzZWxlY3RlZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXByb2plY3Qtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O1Byb2plY3Qgc2V0dGluZ3MgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1wcm9qZWN0LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1wcm9qZWN0LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1wcm9qZWN0LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXByb2plY3Qtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXByb2plY3Qtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktcHJvamVjdC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1wcm9qZWN0LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1wcm9qZWN0LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXByb2plY3Qtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktcHJvamVjdC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktcHJvamVjdC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1wcm9qZWN0LXNldHRpbmdzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXByb2plY3Qtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXByb2plY3Qtc2V0dGluZ3MucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktcHJvamVjdC1zZXR0aW5ncy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QmFjayBvbiB0aGUgUHJvamVjdCBTZXR0aW5ncyBwYWdlLCBjbGljayAmbHQ7c3Ryb25nJmd0O0Vudmlyb25tZW50IFZhcmlhYmxlcyZsdDsvc3Ryb25nJmd0OyBvbiB0aGUgc2lkZSBtZW51LiZsdDsvcCZndDsKCiZsdDtwJmd0O09uIHRoZSBFbnZpcm9ubWVudCBWYXJpYWJsZXMgcGFnZSwgY2xpY2sgJmx0O3N0cm9uZyZndDtBZGQgRW52aXJvbm1lbnQgVmFyaWFibGUmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hZGQtZW52aXJvbm1lbnQtdmFyaWFibGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0FkZCBFbnZpcm9ubWVudCB2YXJpYWJsZSAtIENpcmNsZUNJJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFkZC1lbnZpcm9ubWVudC12YXJpYWJsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWRkLWVudmlyb25tZW50LXZhcmlhYmxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hZGQtZW52aXJvbm1lbnQtdmFyaWFibGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWRkLWVudmlyb25tZW50LXZhcmlhYmxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hZGQtZW52aXJvbm1lbnQtdmFyaWFibGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWRkLWVudmlyb25tZW50LXZhcmlhYmxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFkZC1lbnZpcm9ubWVudC12YXJpYWJsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWRkLWVudmlyb25tZW50LXZhcmlhYmxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFkZC1lbnZpcm9ubWVudC12YXJpYWJsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hZGQtZW52aXJvbm1lbnQtdmFyaWFibGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWFkZC1lbnZpcm9ubWVudC12YXJpYWJsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hZGQtZW52aXJvbm1lbnQtdmFyaWFibGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWRkLWVudmlyb25tZW50LXZhcmlhYmxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1hZGQtZW52aXJvbm1lbnQtdmFyaWFibGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktYWRkLWVudmlyb25tZW50LXZhcmlhYmxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtBZGQgdGhlIGZvbGxvd2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZXM6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSZndDtIRVJPS1VfQVBQX05BTUUmbHQ7L2NvZGUmZ3Q7IGlzIHRoZSBuYW1lIG9mIHlvdXIgSGVyb2t1IGFwcGxpY2F0aW9uIChpbiB0aGlzIGNhc2UgdGhlIG5hbWUgaXMgJmx0O2NvZGUmZ3Q7Y2NpLWNkLWRqYW5nbyZsdDsvY29kZSZndDspLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlJmd0O0hFUk9LVV9BUElfS0VZJmx0Oy9jb2RlJmd0OyBpcyB5b3VyIEhlcm9rdSBhY2NvdW50IEFQSSBrZXkuIFlvdSBjYW4gY29weSBhbmQgcGFzdGUgaXQgZnJvbSBIZXJva3XigJlzIGFjY291bnQgcGFnZS4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgeW91IGhhdmUgYWRkZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzLCB5b3UgaGF2ZSBldmVyeXRoaW5nIHNldCB1cCBvbiB5b3VyIENpcmNsZUNJIGNvbnNvbGUgZm9yIGRlcGxveW1lbnQgdG8gSGVyb2t1LiZsdDsvcCZndDsKCiZsdDtoMiZndDtBdXRvbWF0aW5nIHRoZSBkZXBsb3ltZW50IG9mIHRoZSBEamFuZ28gYXBwJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGZpbmFsaXplIHRoZSBwcm9jZXNzLCB5b3Ugd2lsbCBuZWVkIHRvIHNldCB1cCB0aGUgRGphbmdvIHByb2plY3QgZm9yIGRlcGxveW1lbnQgb24gSGVyb2t1LiZsdDsvcCZndDsKCiZsdDtwJmd0O0JlZ2luIGJ5IGluc3RhbGxpbmcgdGhlICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9ndW5pY29ybi5vcmcvJnF1b3Q7Jmd0O0d1bmljb3JuJmx0Oy9hJmd0OyB3ZWIgc2VydmVyIGZvciBQeXRob24uIEd1bmljb3JuIGlzIEhlcm9rdeKAmXMgcHJlZmVycmVkIHNlcnZlciBmb3IgcnVubmluZyBEamFuZ28gYXBwcyBpbiBwcm9kdWN0aW9uLiBBdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCwgaW5zdGFsbCBHdW5pY29ybiBieSBydW5uaW5nOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7cGlwIGluc3RhbGwgZ3VuaWNvcm4KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgaW5zdGFsbCAmbHQ7Y29kZSZndDtwc3ljb3BnMiZsdDsvY29kZSZndDssIHdoaWNoIGlzIHRoZSBQb3N0Z3JlcyBhZGFwdGVyIGZvciBQeXRob24gYXBwbGljYXRpb25zLiBFbnRlciB0aGlzIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtwaXAgaW5zdGFsbCBwc3ljb3BnMi1iaW5hcnkKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7Rm9yIGEgc3VjY2Vzc2Z1bCBkZXBsb3ltZW50LCBIZXJva3UgYWxzbyByZXF1aXJlcyB0aGUgJmx0O2NvZGUmZ3Q7ZGphbmdvLWhlcm9rdSZsdDsvY29kZSZndDsgcGFja2FnZSB0byBiZSBpbnN0YWxsZWQgYW5kIGNvbmZpZ3VyZWQuIEluc3RhbGwgdGhpcyBwYWNrYWdlIGJ5IHJ1bm5pbmc6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtwaXAgaW5zdGFsbCBkamFuZ28taGVyb2t1CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1doZW4gdGhlIGluc3RhbGxhdGlvbiBpcyBjb21wbGV0ZSwgaW1wb3J0IHRoaXMgbGF0ZXN0IHBhY2thZ2UgYXQgdGhlIHRvcCBvZiB0aGUgJmx0O2NvZGUmZ3Q7bXlfZGphbmdvX3Byb2plY3Qvc2V0dGluZ3MucHkmbHQ7L2NvZGUmZ3Q7IGZpbGUuIFBsYWNlIGl0IGp1c3QgYmVsb3cgdGhlIGxpbmUgJmx0O2NvZGUmZ3Q7ZnJvbSBwYXRobGliIGltcG9ydCBQYXRoJmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2ltcG9ydCBkamFuZ29faGVyb2t1CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1RoZW4gYXQgdGhlIGJvdHRvbSBvZiB0aGUgZmlsZSwgYWRkIHRoZSBmb2xsb3dpbmcgbGluZTombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2RqYW5nb19oZXJva3Uuc2V0dGluZ3MobG9jYWxzKCkpCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1dpdGggYWxsIGRlcGVuZGVuY2llcyBpbnN0YWxsZWQsIHVwZGF0ZSB0aGUgJmx0O2NvZGUmZ3Q7cmVxdWlyZW1lbnRzLnR4dCZsdDsvY29kZSZndDsgZmlsZSB0aGF0IHRyYWNrcyBhbGwgZGVwZW5kZW5jaWVzLiBFbnRlciB0aGlzIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtwaXAgZnJlZXplICZhbXA7Z3Q7IHJlcXVpcmVtZW50cy50eHQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGNvbW1hbmQgYWJvdmUsICZsdDtjb2RlJmd0O3BpcCBmcmVlemUmbHQ7L2NvZGUmZ3Q7IGlzIHVzZWQgdG8gZ2V0IGFsbCB0aGUgZGVwZW5kZW5jaWVzIGludG8gdGhlIHByb2plY3QgYW5kIHNlbmQgdGhlIG91dHB1dCBvZiB0aGlzIGNvbW1hbmQgaW50byB0aGUgJmx0O2NvZGUmZ3Q7cmVxdWlyZW1lbnRzLnR4dCZsdDsvY29kZSZndDsgZmlsZS4gVGhpcyBzdGVwIGlzIHJlcXVpcmVkIGJ5IEhlcm9rdS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOZXh0LCBjcmVhdGUgYSBmaWxlIG5hbWVkICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9kZXZjZW50ZXIuaGVyb2t1LmNvbS9hcnRpY2xlcy9wcm9jZmlsZSZxdW90OyZndDsmbHQ7Y29kZSZndDtQcm9jZmlsZSZsdDsvY29kZSZndDsmbHQ7L2EmZ3Q7IGF0IHRoZSByb290IG9mIHRoZSBwcm9qZWN0IChIZXJva3UgYXBwcyBpbmNsdWRlIGEgUHJvY2ZpbGUgdGhhdCBzcGVjaWZpZXMgdGhlIGNvbW1hbmRzIHRoYXQgYXJlIGV4ZWN1dGVkIGJ5IHRoZSBhcHAgb24gc3RhcnR1cCkgYW5kIGFkZCB0aGUgZm9sbG93aW5nIGxpbmU6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDt3ZWI6IGd1bmljb3JuIG15X2RqYW5nb19wcm9qZWN0LndzZ2kKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7VGhpcyBjb21tYW5kIGluc3RydWN0cyBIZXJva3UgdG8gcnVuIHRoZSBhcHBsaWNhdGlvbiB1c2luZyB0aGUgJmx0O2NvZGUmZ3Q7Z3VuaWNvcm4mbHQ7L2NvZGUmZ3Q7IHNlcnZlci4gWW91IG5vdyBoYXZlIGV2ZXJ5dGhpbmcgaW4gcGxhY2UgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIERqYW5nbyBhcHBsaWNhdGlvbiBpcyBzdWNjZXNzZnVsbHkgZGVwbG95ZWQgdG8gSGVyb2t1LiZsdDsvcCZndDsKCiZsdDtwJmd0O05vdyB5b3UgY2FuIHdyaXRlIHRoZSBjb250aW51b3VzIGRlcGxveW1lbnQgcGlwZWxpbmUgc2NyaXB0IHRoYXQgd2lsbCBzaGlwIHRoZSBwcm9qZWN0IGZyb20geW91ciBsb2NhbCBlbnZpcm9ubWVudCB0byBIZXJva3XigJlzIHJlbW90ZSBob3N0aW5nIGVudmlyb25tZW50LiZsdDsvcCZndDsKCiZsdDtwJmd0O0F0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdCwgY3JlYXRlIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlJmd0Oy5jaXJjbGVjaSZsdDsvY29kZSZndDsgd2l0aCBhIGZpbGUgbmFtZWQgJmx0O2NvZGUmZ3Q7Y29uZmlnLnltbCZsdDsvY29kZSZndDsgaW5zaWRlIGl0LiBJbiAmbHQ7Y29kZSZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OywgZW50ZXIgdGhpcyBjb2RlOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7dmVyc2lvbjogMi4xCm9yYnM6CiAgaGVyb2t1OiBjaXJjbGVjaS9oZXJva3VAMC4wLjEwCndvcmtmbG93czoKICBoZXJva3VfZGVwbG95OgogICAgam9iczoKICAgICAgLSBoZXJva3UvZGVwbG95LXZpYS1naXQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7SW4gdGhpcyBjb25maWd1cmF0aW9uLCB0aGUgSGVyb2t1IG9yYiAmbHQ7Y29kZSZndDtjaXJjbGVjaS9oZXJva3VAMC4wLjEwJmx0Oy9jb2RlJmd0OyBpcyBpbXBvcnRlZCwgd2hpY2ggYXV0b21hdGljYWxseSBnaXZlcyBhY2Nlc3MgdG8gYSBzZXQgb2YgSGVyb2t1IGpvYnMgYW5kIGNvbW1hbmRzIHRoYXQgZW5hYmxlIGVhc2Utb2YtdXNlIG9mIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZGV2Y2VudGVyLmhlcm9rdS5jb20vYXJ0aWNsZXMvaGVyb2t1LWNsaSZxdW90OyZndDtIZXJva3UgdG9vbGJlbHQmbHQ7L2EmZ3Q7LiBPbmUgb2YgdGhlc2Ugam9icyBpcyB0aGUgJmx0O2NvZGUmZ3Q7aGVyb2t1L2RlcGxveS12aWEtZ2l0Jmx0Oy9jb2RlJmd0Oywgd2hpY2ggZGVwbG95cyB5b3VyIGFwcGxpY2F0aW9uIHN0cmFpZ2h0IGZyb20geW91ciBHaXRIdWIgcmVwbyB0byB5b3VyIEhlcm9rdSBhY2NvdW50LiBUaGlzIGpvYiBhbHJlYWR5IHRha2VzIGNhcmUgb2YgaW5zdGFsbGluZyB0aGUgSGVyb2t1IENMSSwgaW5zdGFsbGluZyBwcm9qZWN0IGRlcGVuZGVuY2llcywgYW5kIGRlcGxveWluZyB0aGUgYXBwbGljYXRpb24uIEl0IGFsc28gcGlja3MgdXAgeW91ciBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gZmFjaWxpdGF0ZSBhIHNtb290aCBkZXBsb3ltZW50IHRvIEhlcm9rdS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtDb21taXQgYWxsIGNoYW5nZXMgdG8gdGhlIHByb2plY3QgYW5kIHB1c2ggdG8geW91ciByZW1vdGUgR2l0SHViIHJlcG9zaXRvcnkuIFRoaXMgd2lsbCBhdXRvbWF0aWNhbGx5IHRyaWdnZXIgdGhlIGRlcGxveW1lbnQgcGlwZWxpbmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtCdWlsZCBTdWNjZXNzZnVsIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1N1Y2Nlc3MhIE5leHQsIGNsaWNrIHRoZSBidWlsZCAoJmx0O3N0cm9uZyZndDtoZXJva3UvZGVwbG95LXZpYS1naXQmbHQ7L3N0cm9uZyZndDspLCBmb3IgZGV0YWlscyBhYm91dCB0aGUgZGVwbG95bWVudC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0J1aWxkIERldGFpbHMgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1kamFuZ28tZGVwbG95LTA0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LWRqYW5nby1kZXBsb3ktMDQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktZGphbmdvLWRlcGxveS0wNC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7R2V0dGluZyB0aGF0IHN1Y2Nlc3NmdWwgYnVpbGQgaXMgZ3JlYXQsIGJ1dCB5b3UgbmVlZCB0byBjb25maXJtIHRoYXQgeW91ciBhcHAgYWN0dWFsbHkgd29ya3MgZXJyb3ItZnJlZSBvbiBIZXJva3UuIFRvIGRvIHRoYXQsIHZpc2l0IHlvdXIgSGVyb2t1LWFzc2lnbmVkIGFwcGxpY2F0aW9uIFVSTC4gVGhlIFVSTCBzaG91bGQgYmUgaW4gdGhlIGZvcm1hdCAmbHQ7Y29kZSZndDtodHRwczovL1tBUFBfTkFNRV0uaGVyb2t1YXBwLmNvbSZsdDsvY29kZSZndDsuIEZvciB0aGlzIHR1dG9yaWFsLCB0aGUgVVJMIGlzOiAmbHQ7Y29kZSZndDtodHRwczovL2NjaS1jZC1kamFuZ28uaGVyb2t1YXBwLmNvbS8mbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc2l0ZS1saXZlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtTaXRlIExpdmUgLSBIZXJva3UmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc2l0ZS1saXZlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zaXRlLWxpdmUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXNpdGUtbGl2ZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zaXRlLWxpdmUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXNpdGUtbGl2ZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zaXRlLWxpdmUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc2l0ZS1saXZlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zaXRlLWxpdmUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc2l0ZS1saXZlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXNpdGUtbGl2ZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDgtMDktc2l0ZS1saXZlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXNpdGUtbGl2ZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zaXRlLWxpdmUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA4LTA5LXNpdGUtbGl2ZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wOC0wOS1zaXRlLWxpdmUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0ZhbnRhc3RpYyEmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q29uY2x1c2lvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtQeXRob24gZGV2ZWxvcGVycyBsb3ZlIHdvcmtpbmcgd2l0aCBEamFuZ28gYmVjYXVzZSBvZiBpdHMgZmVhdHVyZS1yaWNoIG5hdHVyZSBhbmQgZWFzeS10by11c2UgQVBJLiBQeXRob24gaXRzZWxmIGlzIGEgZGV2ZWxvcGVyLWZyaWVuZGx5IGxhbmd1YWdlIGFuZCBEamFuZ28gbWFrZXMgdXNpbmcgUHl0aG9uIGZvciB3ZWIgYXBwcyBhIGdyZWF0IGNob2ljZS4gSWYgeW91ciB0ZWFtIG1ha2VzIHVzZSBvZiB0aGVzZSB0b29scywgbGV0IHRoZW0ga25vdyBhYm91dCB3aGF0IHlvdSBoYXZlIGxlYXJuZWQgaW4gdGhpcyB0dXRvcmlhbC4gVGhlIG1hbnkgYmVuZWZpdHMgb2YgdXNpbmcgYSBjb250aW51b3VzIGRlcGxveW1lbnQgcGlwZWxpbmUgdG8gYXV0b21hdGljYWxseSBkZXBsb3kgeW91ciBEamFuZ28gYXBwbGljYXRpb25zIG9ubHkgaW5jcmVhc2Ugd2hlbiBvdGhlciB0ZWFtIG1lbWJlcnMgaGF2ZSBhY2Nlc3MgdG8gdGhlIGluZm9ybWF0aW9uLiBNYWtlIGRlcGxveW1lbnRzIHRvIEhlcm9rdSBvbmUgbGVzcyB0aGluZyBmb3IgeW91ciB0ZWFtIHRvIHdvcnJ5IGFib3V0LiZsdDsvcCZndDsKCiZsdDtwJmd0O0hhcHB5IGNvZGluZyEmbHQ7L3AmZ3Q7CgombHQ7aHIgLyZndDsKCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly90d2l0dGVyLmNvbS9jb2Rlcm9uZmxlZWs/bGFuZz1lbiZxdW90OyZndDtGaWtheW8gQWRlcG9qdSZsdDsvYSZndDsgaXMgYSBmdWxsLXN0YWNrIGRldmVsb3BlciwgdGVjaG5pY2FsIHdyaXRlciwgYW5kIHRlY2ggY29udGVudCBjcmVhdG9yIHByb2ZpY2llbnQgaW4gV2ViIGFuZCBNb2JpbGUgdGVjaG5vbG9naWVzIGFuZCBEZXZPcHMsIHdpdGggb3ZlciB0ZW4gKDEwKSB5ZWFycyBleHBlcmllbmNlIGRldmVsb3Bpbmcgc2NhbGFibGUgZGlzdHJpYnV0ZWQgYXBwbGljYXRpb25zLiBXaXRoIG92ZXIgNDAgYXJ0aWNsZXMgd3JpdHRlbiBmb3IgQ2lyY2xlQ0ksIFR3aWxpbywgQXV0aDAsIGFuZCBUaGUgTmV3IFN0YWNrIGJsb2dzIGFuZCBhbHNvIG9uIGhpcyBwZXJzb25hbCBNZWRpdW0gcGFnZSwgaGUgbG92ZXMgdG8gc2hhcmUgaGlzIGtub3dsZWRnZSB0byBhcyBtYW55IGRldmVsb3BlcnMgYXMgd291bGQgYmVuZWZpdCBmcm9tIGl0LiBZb3UgY2FuIGFsc28gY2hlY2sgb3V0IGhpcyB2aWRlbyBjb3Vyc2VzIG9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cudWRlbXkuY29tL3VzZXIvZmlrYXlvLWFkZXBvanUvJnF1b3Q7Jmd0O1VkZW15Jmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPlByZXZlbnQgWFNTIGF0dGFja3Mgd2l0aCBicm93c2VyIHRlc3Rpbmc8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cveHNzLWF0dGFja3MvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPkZyaSwgMDYgQXVnIDIwMjEgMTM6MDA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cveHNzLWF0dGFja3MvPC9ndWlkPgogICAgICAgIAogICAgICAgICAgPGRjOmNyZWF0b3I+RmlrYXlvIEFkZXBvanU8L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7U2VjdXJpdHkgaXMgYSBuZXZlci1lbmRpbmcgYmF0dGxlIG9uIHRoZSB3ZWIuIFlvdSBjYW4gaGF2ZSBhIHNlcnZlciB1cCBpbiBqdXN0IGEgZmV3IG1pbnV0ZXMsIGFuZCB0aGUgbmV4dCBtaW51dGUsIHNvbWVvbmUgaXMgYWxyZWFkeSB0cnlpbmcgdG8gaGFjayBpbnRvIGl0LiBUaGVzZSBhdHRhY2tzIGNvdWxkIGJlIGF1dG9tYXRlZCB1c2luZyBtYWxpY2lvdXMgYm90cyBvciBsYXVuY2hlZCBtYW51YWxseS4gV2Vic2l0ZXMgY2FuIGJlIHRhcmdldGVkIGJ5IGEgbWFsaWNpb3VzIHVzZXIgdHJ5aW5nIHRvIGNvbXByb21pc2UgeW91ciB3ZWIgcHJlc2VuY2Ugb3IgZGF0YS4gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL293YXNwLm9yZy93d3ctY29tbXVuaXR5L2F0dGFja3MveHNzLyZxdW90OyZndDtDcm9zcy1zaXRlIHNjcmlwdGluZyAoWFNTKSZsdDsvYSZndDsgaXMganVzdCBvbmUgdHlwZSBvZiBhdHRhY2sgeW91ciBzaXRlIG1heSBiZSB2dWxuZXJhYmxlIHRvLiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIGFuIFhTUyBhdHRhY2ssIGEgdXNlciBleHBsb2l0cyBsb29waG9sZXMgaW4gZGF0YSBlbnRyeSBwb2ludHMgaW4geW91ciBhcHBsaWNhdGlvbnMuIFRoZSBhdHRhY2sgdGFyZ2V0cyBmb3JtIGZpZWxkcyBvciB0aGUgYWRkcmVzcyBiYXIgdG8gaW5qZWN0IHNjcmlwdGVkIGNvZGUgaW50byB5b3VyIGFwcGxpY2F0aW9uLCBmb3JjaW5nIGl0IHRvIHJ1biB0aGUgbWFsaWNpb3VzIGNvZGUuIFRoZXNlIGF0dGFja3MgY2FuIGNhdXNlIHNlbnNpdGl2ZSBjb29raWUgaW5mb3JtYXRpb24gdG8gYmUgbGVha2VkIG9yIHRoZXkgY2FuIHJ1biBhIHNjcmlwdCBvbiB5b3VyIHdlYnBhZ2UgdGhhdCBpbmplY3RzIGZvcmVpZ24gZWxlbWVudHMgaW50byB5b3VyIHBhZ2UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SW4gdGhpcyB0dXRvcmlhbCwgeW91IHdpbGwgbGVhcm4gYW5kIGRlbW9uc3RyYXRlIGhvdyB0byBwcmV2ZW50IHN1Y2ggWFNTIGF0dGFja3Mgb24geW91ciB3ZWIgcGFnZXMgdXNpbmcgYnJvd3NlciB0ZXN0aW5nLiZsdDsvcCZndDsKCiZsdDtoMiZndDtQcmVyZXF1aXNpdGVzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGZvbGxvdyBhbG9uZyB3aXRoIHRoaXMgdHV0b3JpYWwgYSBmZXcgdGhpbmdzIGFyZSByZXF1aXJlZDombHQ7L3AmZ3Q7CgombHQ7b2wmZ3Q7CiAgJmx0O2xpJmd0O0Jhc2ljIGtub3dsZWRnZSBvZiBKYXZhU2NyaXB0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL25vZGVqcy5vcmcmcXVvdDsmZ3Q7Tm9kZS5qcyZsdDsvYSZndDsgaW5zdGFsbGVkIG9uIHlvdXIgc3lzdGVtICh2ZXJzaW9uICZhbXA7Z3Q7PSAxMSkmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vJnF1b3Q7Jmd0O0NpcmNsZUNJJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS8mcXVvdDsmZ3Q7R2l0SHViJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKJmx0Oy9vbCZndDsKCiZsdDtoMiZndDtDbG9uaW5nIGFuZCBydW5uaW5nIHRoZSBzYW1wbGUgYXBwbGljYXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VG8gYmVnaW4sIHlvdSB3aWxsIG5lZWQgdG8gY2xvbmUgdGhlIGRlbW8gYXBwbGljYXRpb24gdGhhdCB3aWxsIGJlIHRlc3RlZCBmb3IgWFNTIGF0dGFja3MuIFJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgdG8gZ2V0IHRoZSBjb2RlIG9uIHlvdXIgc3lzdGVtOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7Z2l0IGNsb25lIC0tc2luZ2xlLWJyYW5jaCAtLWJyYW5jaCBiYXNlLXByb2plY3QgaHR0cHM6Ly9naXRodWIuY29tL2NvZGVyb25mbGVlay94c3MtYXR0YWNrcy5naXQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7T25jZSB0aGUgYXBwIGlzIGNsb25lZCwgZ28gaW50byB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCAoJmx0O2NvZGUmZ3Q7Y2QgeHNzLWF0dGFja3MmbHQ7L2NvZGUmZ3Q7KSBhbmQgaW5zdGFsbCBkZXBlbmRlbmNpZXMgYnkgcnVubmluZzombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O25wbSBpbnN0YWxsCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1dpdGggdGhlIGRlcGVuZGVuY2llcyBmdWxseSBpbnN0YWxsZWQsIHJ1biB0aGUgYXBwbGljYXRpb246Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtub2RlIHNlcnZlcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgYm9vdCB1cCB0aGUgYXBwbGljYXRpb24gc2VydmVyIGF0ICZsdDtjb2RlJmd0O2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMCZsdDsvY29kZSZndDsuIE5hdmlnYXRlIHRvIHRoaXMgVVJMIG9uIHlvdXIgYnJvd3Nlci4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtIb21lcGFnZSAtIERlbW8gQXBwJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hcHAtbG9hZC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYXBwLWxvYWQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYXBwLWxvYWQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hcHAtbG9hZC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hcHAtbG9hZC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hcHAtbG9hZC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYXBwLWxvYWQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYXBwLWxvYWQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYXBwLWxvYWQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFwcC1sb2FkLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIHBhZ2UgY29uc2lzdHMgb2YgYSBmb3JtIGFuZCBjb2x1bW4gZm9yIGluZm9ybWF0aW9uIGRpc3BsYXkgb24gdGhlIHJpZ2h0IHNpZGUuIFdoZW4geW91IGZpbGwgaW4gdGhlIGZvcm0gYW5kIHByZXNzIEVudGVyLCB5b3VyIGVtYWlsIGFwcGVhcnMgaW4gdGhlICZsdDtjb2RlJmd0O0RldGFpbHMmbHQ7L2NvZGUmZ3Q7IGJveC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0ZpbGwgZm9ybSAtIERlbW8gQXBwJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc2FmZS1lbWFpbC1lbnRyeS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc2FmZS1lbWFpbC1lbnRyeS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zYWZlLWVtYWlsLWVudHJ5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc2FmZS1lbWFpbC1lbnRyeS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zYWZlLWVtYWlsLWVudHJ5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zYWZlLWVtYWlsLWVudHJ5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXNhZmUtZW1haWwtZW50cnkucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc2FmZS1lbWFpbC1lbnRyeS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc2FmZS1lbWFpbC1lbnRyeS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zYWZlLWVtYWlsLWVudHJ5LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7TWFudWFsbHkgdGVzdGluZyBmb3IgWFNTIGF0dGFja3MmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7V2hlbiB0aGUgZm9ybSBpcyBzdWJtaXR0ZWQsIHRoZSBpbmZvcm1hdGlvbiBpcyBzdWJtaXR0ZWQgdG8gYW4gZW5kcG9pbnQgKCZsdDtjb2RlJmd0Oy9zZW5kaW5mbyZsdDsvY29kZSZndDspIG9uIHRoZSBzZXJ2ZXIgYmVoaW5kIHRoZSBzY2VuZXMuIFRoaXMgZW5kcG9pbnQgc2VuZHMgdGhlIGVtYWlsIGJhY2sgaW4gYSAmbHQ7Y29kZSZndDtqc29uJmx0Oy9jb2RlJmd0OyByZXNwb25zZSBib2R5IHdoaWNoIGlzIHRoZW4gcGlja2VkIHVwIGJ5IHRoZSBwYWdlIGFuZCBkaXNwbGF5ZWQgaW4gdGhlIERldGFpbHMgc2VjdGlvbi4gRGlzcGxheWluZyB0aGUgZW1haWwgc2hvd3MgdGhhdCBkYXRhIGVudGVyZWQgaW4gdGhlIGZvcm0gbWFkZSBpdCB0byB0aGUgYmFja2VuZCBhbmQgaGFzIGJlZW4gcmV0dXJuZWQgYmFjayB0byB0aGUgcGFnZS4gQSBtYWxpY2lvdXMgdXNlciBjYW4gZWFzaWx5IHRha2UgYWR2YW50YWdlIG9mIHRoaXMgcHJvY2VzcyBieSBlbnRlcmluZyBjb3JydXB0IGRhdGEgaW50byB0aGUgZW1haWwgZmllbGQuIEZvciBleGFtcGxlLCBpbnN0ZWFkIG9mIGVudGVyaW5nIGEgdmFsaWQgZW1haWwgaW50byB0aGUgZW1haWwgZmllbGQsIGVudGVyIHRoZSBIVE1MIG1hcmt1cCBmb3IgYSBmaWxlIGZpZWxkOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7JmFtcDtsdDtpbnB1dCB0eXBlPSZxdW90O2ZpbGUmcXVvdDsgLyZhbXA7Z3Q7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O0ZpbGwgdGhlIHBhc3N3b3JkIGZpZWxkIGFuZCBjbGljayAmbHQ7Y29kZSZndDtTdWJtaXQmbHQ7L2NvZGUmZ3Q7LiBUaGUgZGV0YWlscyBzZWN0aW9uIGxvb2tzIG11Y2ggZGlmZmVyZW50LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTIteHNzLWF0dGFjay5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7QXR0YWNrZWQgUGFnZSAtIERlbW8gQXBwJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXhzcy1hdHRhY2sucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXhzcy1hdHRhY2sucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXhzcy1hdHRhY2sucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTIteHNzLWF0dGFjay5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTIteHNzLWF0dGFjay5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi14c3MtYXR0YWNrLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXhzcy1hdHRhY2sucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXhzcy1hdHRhY2sucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTIteHNzLWF0dGFjay5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi14c3MtYXR0YWNrLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi14c3MtYXR0YWNrLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXhzcy1hdHRhY2sucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTIteHNzLWF0dGFjay5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTIteHNzLWF0dGFjay5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi14c3MtYXR0YWNrLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgZGF0YSB0aGF0IGhhcyBiZWVuIGlucHV0IGhhcyBjYXVzZWQgYSBuZXcgSFRNTCBlbGVtZW50LCBhIGZpbGUgaW5wdXQgZmllbGQsIHRvIGJlIGRpc3BsYXllZCBvbiB0aGUgcGFnZS4gVGhpcyBpcyBkZWZpbml0ZWx5IHVud2FudGVkIGFuZCBjb3VsZCBiZSBkYW5nZXJvdXMgaWYgaXQgaXMgd2VsbCBwb3NpdGlvbmVkLiBBbiBhdHRhY2tlciBjb3VsZCB1c2UgdGhpcyBzdHJhdGVneSB0byBlbWJlZCBtYWxpY2lvdXMgZGF0YSAob3Igc2NyaXB0cykgaW4geW91ciBmb3Jtcy4gUGxhY2luZyBhIGhpZGRlbiBpbnB1dCBmaWVsZCB3aXRoaW4geW91ciBmb3JtIGNvdWxkIGNhdXNlIHRoZSBmb3JtIHRvIHN1Ym1pdCB0aGUgY29tcHJvbWlzaW5nIGRhdGEsIGFsb25nIHdpdGggaXRzIHBheWxvYWQsIHRvIHlvdXIgc2VydmVyLiBUaGlzIGNhbiBsZWFkIHRvIHNlcmlvdXMgZGFtYWdlIGFuZCBjb21wcm9taXNlIGRhdGEgaW50ZWdyaXR5LiBZb3Ugd2lsbCB3YW50IHRvIGNhdGNoIHN1Y2ggYSB2dWxuZXJhYmlsaXR5IGJlZm9yZSBzb21lb25lIHRha2VzIGFkdmFudGFnZS4gT25lIGVmZmVjdGl2ZSB3YXkgb2YgZG9pbmcgdGhhdCBpcyB0aHJvdWdoIGJyb3dzZXIgdGVzdGluZy4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7SW5zdGFsbGluZyBKZXN0IGFuZCBQdXBwZXRlZXImbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7QnJvd3NlciB0ZXN0aW5nIGxldHMgeW91IHJ1biB0ZXN0cyBhZ2FpbnN0IHdlYiBwYWdlcyBieSBpbnRlcmFjdGluZyB3aXRoIHRoZW0ganVzdCBsaWtlIGEgcmVndWxhciB1c2VyIHdvdWxkLiBUaGlzIGFsbG93cyB5b3UgdGVzdCBkaWZmZXJlbnQgZGF0YSBlbnRyeSBzY2VuYXJpb3MgdG8gZmluZCBhbmQgZml4IGFueSB2dWxuZXJhYmlsaXRpZXMgYSBoYWNrZXIgbWlnaHQgdHJ5IHRvIGV4cGxvcmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gc2V0IHVwIGF1dG9tYXRlZCBicm93c2VyIHRlc3RzLCB5b3Ugd2lsbCBuZWVkIHR3byBwYWNrYWdlcy4mbHQ7L3AmZ3Q7CiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2plc3Rqcy5pby8mcXVvdDsmZ3Q7SmVzdCZsdDsvYSZndDsgd2lsbCBiZSB1c2VkIGFzIHRoZSB0ZXN0IHJ1bm5lciBmb3IgdGhlIHRlc3Qgc3VpdGVzLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9wcHRyLmRldi8mcXVvdDsmZ3Q7UHVwcGV0ZWVyJmx0Oy9hJmd0OyB3b3VsZCBiZSB1c2VkIHRvIHdyaXRlIHRoZSBicm93c2VyIHRlc3RzLiZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtJbnN0YWxsIHRoZXNlIHBhY2thZ2VzIGJ5IHJ1bm5pbmcgdGhpcyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwgLS1zYXZlLWRldiBqZXN0IHB1cHBldGVlcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtXaXRoIHRoZXNlIHBhY2thZ2VzIGluc3RhbGxlZCwgeW91IGNhbiBub3cgYmVnaW4gd3JpdGluZyB0ZXN0cyBmb3IgeW91ciBicm93c2VyLiZsdDsvcCZndDsKCiZsdDtoMiZndDtBZGRpbmcgdGVzdHMgZm9yIHRoZSBicm93c2VyJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0luIHRoaXMgc2VjdGlvbiwgeW91IHdpbGwgd3JpdGUgYSB0ZXN0IHN1aXRlIHRvIHRlc3QgeW91ciBicm93c2VyIHRvIGRldGVjdCB0aGUgZW1haWwgaW5wdXQgdnVsbmVyYWJpbGl0eS4gSWYgdGhlIHZ1bG5lcmFiaWxpdHkgaXMgZm91bmQsIHRoZSB0ZXN0IHdpbGwgZmFpbC4gQSBmYWlsZWQgdGVzdCBpbmRpY2F0ZXMgdGhhdCB0aGVyZSBpcyBhIGxvb3Bob2xlIGluIHlvdXIgZW1haWwgZmllbGQgdGhhdCBuZWVkcyB0byBiZSBhZGRyZXNzZWQgdG8gYXZvaWQgWFNTIGF0dGFja3MuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIHRlc3QgeW91IHdpbGwgd3JpdGUgd2lsbCBwZXJmb3JtIHRoZSBzYW1lIGF0dGFjayB5b3UgcGVyZm9ybWVkIG1hbnVhbGx5IGluIHRoZSBwcmV2aW91cyBzZWN0aW9uLiBDcmVhdGUgdGhlIHRlc3QgZmlsZSAmbHQ7Y29kZSZndDtsb2dpbi50ZXN0LmpzJmx0Oy9jb2RlJmd0OyBhbmQgZW50ZXIgdGhpcyBjb2RlOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7Y29uc3QgcHVwcGV0ZWVyID0gcmVxdWlyZSgmcXVvdDtwdXBwZXRlZXImcXVvdDspOwoKdGVzdCgmcXVvdDtDaGVjayBmb3IgWFNTIGF0dGFjayBvbiBlbWFpbCBmaWVsZCZxdW90OywgYXN5bmMgKCkgPSZhbXA7Z3Q7IHsKICBjb25zdCBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaCgpOwogIHRyeSB7CiAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7CgogICAgYXdhaXQgcGFnZS5nb3RvKCZxdW90O2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMCZxdW90Oyk7CgogICAgYXdhaXQgcGFnZS50eXBlKCZxdW90OyN1c2VyRW1haWwmcXVvdDssICcmYW1wO2x0O2lucHV0IHR5cGU9JnF1b3Q7ZmlsZSZxdW90OyAvJmFtcDtndDsnKTsKICAgIGF3YWl0IHBhZ2UudHlwZSgmcXVvdDsjdXNlclBhc3N3b3JkJnF1b3Q7LCAmcXVvdDtwYXNzd29yZCZxdW90Oyk7CiAgICBhd2FpdCBwYWdlLmNsaWNrKCZxdW90OyNzdWJtaXRCdXR0b24mcXVvdDspOwoKICAgIGxldCBlbWFpbENvbnRhaW5lciA9IGF3YWl0IHBhZ2UuJCgmcXVvdDsjaW5mb0Rpc3BsYXkmcXVvdDspOwogICAgbGV0IHZhbHVlID0gYXdhaXQgZW1haWxDb250YWluZXIuZXZhbHVhdGUoKGVsKSA9JmFtcDtndDsgZWwudGV4dENvbnRlbnQpOwoKICAgIGV4cGVjdCh2YWx1ZS5sZW5ndGgpLnRvQmVHcmVhdGVyVGhhbigwKTsKICB9IGZpbmFsbHkgewogICAgYXdhaXQgYnJvd3Nlci5jbG9zZSgpOwogIH0KfSwgMTIwMDAwKTsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIHRlc3QgZmlsZSBhYm92ZSwgdGhlICZsdDtjb2RlJmd0O0NoZWNrIGZvciBYU1MgYXR0YWNrIG9uIGVtYWlsIGZpZWxkJmx0Oy9jb2RlJmd0OyB0ZXN0IGNhc2UgdXNlcyBQdXBwZXRlZXIgdG8gbGF1bmNoIGEgYnJvd3NlciBpbnN0YW5jZSB3aGljaCB0aGVuIGxvYWRzIHRoZSBhcHBsaWNhdGlvbiBhdCB0aGUgVVJMICZsdDtjb2RlJmd0O2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMCZsdDsvY29kZSZndDsuIE9uY2UgdGhlIGFwcCBpcyBydW5uaW5nLCB0aGUgZW1haWwgZmllbGQgaXMgZmlsbGVkIHVzaW5nIHRoZSBpbnB1dCBmaWxlIG1hcmt1cC4gVGhlIHBhc3N3b3JkIGZpZWxkIGlzIGFsc28gZmlsbGVkLiBUaGUgJmx0O2NvZGUmZ3Q7U3VibWl0Jmx0Oy9jb2RlJmd0OyBidXR0b24gaXMgY2xpY2tlZCwgYW5kIG9uY2UgdGhlIGZvcm0gaXMgc3VibWl0dGVkLCB0aGUgZGlzcGxheSBzZWN0aW9uIGlzIGNoZWNrZWQgZm9yIGEgc3RyaW5nIHdpdGggbGVuZ3RoIGdyZWF0ZXIgdGhhbiB6ZXJvIChub24tdGV4dCBIVE1MIGVsZW1lbnRzIHdpbGwgcmV0dXJuIGEgc3RyaW5nIHdpdGggYSBsZW5ndGggb2YgemVybykuIE9uY2UgdGhlIHRlc3QgaXMgZG9uZSBydW5uaW5nLCBjbG9zZSB0aGUgYnJvd3Nlci4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3cgeW91IGhhdmUgdGhlIHRlc3QgaW4gcGxhY2UgdG8gY2hlY2sgZm9yIGFuIGF0dGFjay4gVG8gY29tcGxldGUgdGhlIHRlc3Qgc2V0dXAsIGFkZCBhICZsdDtjb2RlJmd0O3Rlc3QmbHQ7L2NvZGUmZ3Q7IHNjcmlwdCB0byB0aGUgJmx0O2NvZGUmZ3Q7cGFja2FnZS5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7Li4uCiZxdW90O3NjcmlwdHMmcXVvdDsgOiB7CiAgICAmcXVvdDt0ZXN0JnF1b3Q7IDogJnF1b3Q7amVzdCZxdW90Owp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O01ha2Ugc3VyZSB0aGF0IHlvdXIgYXBwIGlzIGN1cnJlbnRseSBydW5uaW5nIHVzaW5nICZsdDtjb2RlJmd0O25vZGUgc2VydmVyLmpzJmx0Oy9jb2RlJmd0OyBhbmQgcnVuIHRoZSB0ZXN0IGZpbGU6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtucG0gcnVuIHRlc3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7VGhpcyB0ZXN0IHdpbGwgZmFpbCBiZWNhdXNlLCBhcyB3ZSBhbHJlYWR5IGtub3csIHRoZSB2dWxuZXJhYmlsaXR5IGRvZXMgZXhpc3QuIEhlcmUgaXMgd2hhdCB0aGUgQ0xJIG91dHB1dCBzaG93cy4mbHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0OyBGQUlMICAuL2xvZ2luLnRlc3QuanMgKDUuNDc1IHMpCiAg4pyVIENoZWNrIGZvciBYU1MgYXR0YWNrIG9uIGVtYWlsIGZpZWxkICgyMDk2IG1zKQoKICDil48gQ2hlY2sgZm9yIFhTUyBhdHRhY2sgb24gZW1haWwgZmllbGQKCiAgICBleHBlY3QocmVjZWl2ZWQpLnRvQmVHcmVhdGVyVGhhbihleHBlY3RlZCkKCiAgICBFeHBlY3RlZDogJmFtcDtndDsgMAogICAgUmVjZWl2ZWQ6ICAgMAoKICAgICAgMjMgfCAgIGxldCB2YWx1ZSA9IGF3YWl0IGVtYWlsQ29udGFpbmVyLmV2YWx1YXRlKGVsID0mYW1wO2d0OyBlbC50ZXh0Q29udGVudCk7CiAgICAgIDI0IHwKICAgICZhbXA7Z3Q7IDI1IHwgICBleHBlY3QodmFsdWUubGVuZ3RoKS50b0JlR3JlYXRlclRoYW4oMCk7CiAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICBeCiAgICAgIDI2IHwKICAgICAgMjcgfCB9LCAxMjAwMDApOwogICAgICAyOCB8CgogICAgICBhdCBPYmplY3QuJmFtcDtsdDthbm9ueW1vdXMmYW1wO2d0OyAobG9naW4udGVzdC5qczoyNToyNCkKClRlc3QgU3VpdGVzOiAxIGZhaWxlZCwgMSB0b3RhbApUZXN0czogICAgICAgMSBmYWlsZWQsIDEgdG90YWwKU25hcHNob3RzOiAgIDAgdG90YWwKVGltZTogICAgICAgIDE0LjU4MiBzClJhbiBhbGwgdGVzdCBzdWl0ZXMuCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtoMiZndDtGaXhpbmcgdGhlIFhTUyB2dWxuZXJhYmlsaXR5Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O09uZSBlZmZlY3RpdmUgZml4IHRvIFhTUyB2dWxuZXJhYmlsaXR5IGlzIHRvIG1ha2Ugc3VyZSB0aGF0IGRhdGEgYmVpbmcgZW50ZXJlZCBpbnRvIHRoZSBhcHBsaWNhdGlvbiBpcyB2YWxpZGF0ZWQgYmVmb3JlIGFueSBmb3JtIG9mIHByb2Nlc3NpbmcgaXMgZG9uZSB3aXRoIGl0LiBEYXRhIHZhbGlkYXRpb24gY2FuIGJlIGRvbmUgb24gYm90aCB0aGUgY2xpZW50IGFuZCBzZXJ2ZXIgZW5kcyBvZiB0aGUgYXBwbGljYXRpb24uIEZvciB0aGlzIGFwcGxpY2F0aW9uLCB5b3Ugd2lsbCBiZSB2YWxpZGF0aW5nIHRoZSBlbWFpbCByZWNlaXZlZCBvbiB0aGUgc2VydmVyIHNpZGUgdG8gZW5zdXJlIHRoYXQgb25seSBzYWZlIHRleHQgaXMgcmV0dXJuZWQgYmFjayB0byB0aGUgY2xpZW50LiZsdDsvcCZndDsKCiZsdDtwJmd0O0xvY2F0ZSB0aGUgJmx0O2NvZGUmZ3Q7c2VydmVyLmpzJmx0Oy9jb2RlJmd0Oy4gVGhlICZsdDtjb2RlJmd0Oy9zZW5kaW5mbyZsdDsvY29kZSZndDsgZW5kcG9pbnQgc2hvd3MgdGhhdCB0aGUgZW1haWwgaXMgcmV0dXJuZWQgdG8gdGhlIGNsaWVudCB3aXRob3V0IHZhbGlkYXRpb246Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDthcHAucG9zdCgmcXVvdDsvc2VuZGluZm8mcXVvdDssIChyZXEsIHJlcykgPSZhbXA7Z3Q7IHsKICBjb25zdCBlbWFpbCA9IHJlcS5ib2R5LmVtYWlsOwoKICByZXMuc2VuZCh7IGVtYWlsIH0pOwp9KTsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7Tm93LCByZXBsYWNlIHRoaXMgZW5kcG9pbnQgd2l0aCB0aGlzIGNvZGU6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDthcHAucG9zdCgmcXVvdDsvc2VuZGluZm8mcXVvdDssIChyZXEsIHJlcykgPSZhbXA7Z3Q7IHsKICBsZXQgZW1haWwgPSByZXEuYm9keS5lbWFpbDsKCiAgaWYgKCF2YWxpZEVtYWlsKGVtYWlsKSkgewogICAgZW1haWwgPSAmcXVvdDtFbnRlciBhIFZhbGlkIEVtYWlsIGUuZyB0ZXN0QGNvbXBhbnkuY29tJnF1b3Q7OwogIH0KCiAgcmVzLnNlbmQoeyBlbWFpbCB9KTsKfSk7CgpmdW5jdGlvbiB2YWxpZEVtYWlsKG1haWwpIHsKICByZXR1cm4gL15bYS16QS1aMC05LiEjJCUmYW1wO2FtcDsnKisvPT9eX2B7fH1+LV0rQFthLXpBLVowLTktXSsoPzpcLlthLXpBLVowLTktXSspKiQvLnRlc3QoCiAgICBtYWlsCiAgKTsKfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtJbiB0aGUgbmV3IGNvZGUsIGEgJmx0O2NvZGUmZ3Q7dmFsaWRFbWFpbCZsdDsvY29kZSZndDsgZnVuY3Rpb24gdGFrZXMgaW4gYSBzdHJpbmcgYW5kIHJldHVybnMgYSBib29sZWFuIGJhc2VkIG9uIHRoZSBzdHJpbmcgYmVpbmcgYSB2YWxpZCBlbWFpbCBvciBub3QuIFRoaXMgZnVuY3Rpb24gaXMgdGhlbiB1c2VkIGluIHRoZSAmbHQ7Y29kZSZndDsvc2VuZGluZm8mbHQ7L2NvZGUmZ3Q7IHRvIHZhbGlkYXRlIHRoZSBlbWFpbCBzZW50IGJ5IHRoZSBjbGllbnQuIElmIHRoZSBlbWFpbCBpcyB2YWxpZCwgaXQgaXMgcmV0dXJuZWQgYmFjayB0byB0aGUgY2xpZW50LiBJZiBpdCBpcyBub3QgdmFsaWQsIGEgbWVzc2FnZSBpcyBzZW50IGluc3RlYWQgdGhhdCBwcm9tcHRzIHRoZSB1c2VyIHRvIGVudGVyIGEgdmFsaWQgZW1haWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2l0aCB0aGUgJmx0O2NvZGUmZ3Q7c2VydmVyLmpzJmx0Oy9jb2RlJmd0OyBjb2RlIGNoYW5nZWQsIHJlc3RhcnQgdGhlIGFwcGxpY2F0aW9uIGFnYWluIGJ5IGtpbGxpbmcgaXQgKCZsdDtjb2RlJmd0O0N0cmwgKyBDJmx0Oy9jb2RlJmd0OykgYW5kIHJlc3RhcnRpbmcgaXQgKCZsdDtjb2RlJmd0O25vZGUgc2VydmVyLmpzJmx0Oy9jb2RlJmd0OykuIFlvdSBjYW4gZG8gYSBtYW51YWwgdGVzdCBmaXJzdCBieSByZWZyZXNoaW5nIHRoZSBicm93c2VyIGFuZCByZXRyeWluZyB0aGUgYXR0YWNrLiBUaGlzIGRpc3BsYXlzIGEgdmFsaWRhdGlvbiBtZXNzYWdlIGluc3RlYWQgb2YgdGhlIGlucHV0IGZpZWxkLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3VjY2Vzc2Z1bC1tYW51YWwtdGVzdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7U3VjY2Vzc2Z1bCBNYW51YWwgVGVzdCAtIERlbW8gQXBwJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN1Y2Nlc3NmdWwtbWFudWFsLXRlc3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN1Y2Nlc3NmdWwtbWFudWFsLXRlc3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN1Y2Nlc3NmdWwtbWFudWFsLXRlc3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3VjY2Vzc2Z1bC1tYW51YWwtdGVzdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3VjY2Vzc2Z1bC1tYW51YWwtdGVzdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdWNjZXNzZnVsLW1hbnVhbC10ZXN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN1Y2Nlc3NmdWwtbWFudWFsLXRlc3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN1Y2Nlc3NmdWwtbWFudWFsLXRlc3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3VjY2Vzc2Z1bC1tYW51YWwtdGVzdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdWNjZXNzZnVsLW1hbnVhbC10ZXN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdWNjZXNzZnVsLW1hbnVhbC10ZXN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN1Y2Nlc3NmdWwtbWFudWFsLXRlc3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3VjY2Vzc2Z1bC1tYW51YWwtdGVzdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3VjY2Vzc2Z1bC1tYW51YWwtdGVzdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdWNjZXNzZnVsLW1hbnVhbC10ZXN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3cgcnVuIHRoZSB0ZXN0IHN1aXRlIHdpdGggdGhlIGNvbW1hbmQgJmx0O2NvZGUmZ3Q7bnBtIHJ1biB0ZXN0Jmx0Oy9jb2RlJmd0Oy4gVGhlIHRlc3Qgd2lsbCBwYXNzIGFzIHNob3duIGJ5IHRoZSBjb25zb2xlIG91dHB1dC4mbHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0OyBQQVNTICAuL2xvZ2luLnRlc3QuanMgKDYuOTUzIHMpCiAg4pyTIENoZWNrIGZvciBYU1MgYXR0YWNrIG9uIGVtYWlsIGZpZWxkICgzODg3IG1zKQoKVGVzdCBTdWl0ZXM6IDEgcGFzc2VkLCAxIHRvdGFsClRlc3RzOiAgICAgICAxIHBhc3NlZCwgMSB0b3RhbApTbmFwc2hvdHM6ICAgMCB0b3RhbApUaW1lOiAgICAgICAgMTYuMjU4IHMKUmFuIGFsbCB0ZXN0IHN1aXRlcy4KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O2gyJmd0O0F1dG9tYXRpbmcgdGhlIHRlc3RpbmcgcHJvY2VzcyZsdDsvaDImZ3Q7CgombHQ7cCZndDtUaGUgbWFpbiBhaW0gb2YgdGhpcyBleGVyY2lzZSBpcyB0byBhdXRvbWF0ZSB0aGUgYnJvd3NlciB0ZXN0aW5nIHByb2Nlc3Mgc28gdGhhdCB0aGUgWFNTIHZ1bG5lcmFiaWxpdGllcyBjYW4gYmUgY2F1Z2h0IGJlZm9yZSB0aGV5IG1ha2UgdGhlaXIgd2F5IGludG8geW91ciBwcm9kdWN0aW9uIGNvZGUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gYmVnaW4gdGhlIHByb2Nlc3MsIHlvdSBmaXJzdCBuZWVkIHRvICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9wdXNoaW5nLWEtcHJvamVjdC10by1naXRodWIvJnF1b3Q7Jmd0O3B1c2ggeW91ciBjb2RlIHRvIEdpdEh1YiZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgZ28gdG8gdGhlICZsdDtjb2RlJmd0O1Byb2plY3RzJmx0Oy9jb2RlJmd0OyBwYWdlIG9uIHRoZSBDaXJjbGVDSSBkYXNoYm9hcmQgdG8gYWRkIHRoZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0FkZCBQcm9qZWN0IC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDsgdG8gYmVnaW4gc2V0dGluZyB1cCB0aGUgcHJvamVjdC4gQ2xpY2sgb24gJmx0O3N0cm9uZyZndDtTa2lwIHRoaXMgc3RlcCZsdDsvc3Ryb25nJmd0OyBvbiB0aGUgbW9kYWwgdGhhdCBwb3BzIHVwLiBXZSB3aWxsIGJlIG1hbnVhbGx5IGFkZGluZyBvdXIgQ2lyY2xlQ0kgY29uZmlnIGxhdGVyIGluIHRoaXMgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtBZGQgQ29uZmlnIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O09uIHRoZSBTZXR1cCBwYWdlLCBjbGljayAmbHQ7c3Ryb25nJmd0O1VzZSBFeGlzdGluZyBDb25maWcmbHQ7L3N0cm9uZyZndDsgdG8gaW5kaWNhdGUgdGhhdCB3ZSB3aWxsIGJlIGFkZGluZyBhIGNvbmZpZ3VyYXRpb24gZmlsZSBtYW51YWxseSBhbmQgbm90IHVzaW5nIHRoZSBzYW1wbGUgZGlzcGxheWVkLiBOZXh0LCB5b3UgZ2V0IGEgcHJvbXB0IHRvIGVpdGhlciBkb3dubG9hZCBhIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgdGhlIHBpcGVsaW5lIG9yIHN0YXJ0IGJ1aWxkaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtCdWlsZCBQcm9tcHQgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtTdGFydCBCdWlsZGluZyZsdDsvc3Ryb25nJmd0OyB0byBiZWdpbi4gVGhpcyBidWlsZCB3aWxsIGZhaWwgYmVjYXVzZSB3ZSBoYXZlIG5vdCBzZXQgdXAgb3VyIGNvbmZpZ3VyYXRpb24gZmlsZSB5ZXQuIFdlIHdpbGwgY29tcGxldGUgdGhpcyBzdGVwIGxhdGVyLiZsdDsvcCZndDsKCiZsdDtwJmd0O0ZpbmFsbHksIGNyZWF0ZSBhIGRlcGxveW1lbnQgc2NyaXB0IGZvciBDaXJjbGVDSSB0aGF0IGJ1aWxkcyBhIGRlcGxveW1lbnQgYXV0b21hdGlvbiBwaXBlbGluZSBieSBydW5uaW5nIHRoZSBicm93c2VyIHRlc3RzLiBBdCB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QsIGNyZWF0ZSBhIGZvbGRlciBuYW1lZCAmbHQ7Y29kZSZndDsuY2lyY2xlY2kmbHQ7L2NvZGUmZ3Q7IHdpdGggYSBmaWxlIG5hbWVkICZsdDtjb2RlJmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7IGluIGl0LiBJbnNpZGUgJmx0O2NvZGUmZ3Q7Y29uZmlnLnltbCZsdDsvY29kZSZndDssIGVudGVyIHRoaXMgY29kZTombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246IDIuMQpqb2JzOgogIGJ1aWxkOgogICAgd29ya2luZ19kaXJlY3Rvcnk6IH4vcmVwbwogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9ub2RlOjEyLWJyb3dzZXJzCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IFVwZGF0ZSBOUE0KICAgICAgICAgIGNvbW1hbmQ6ICZxdW90O3N1ZG8gbnBtIGluc3RhbGwgLWcgbnBtJnF1b3Q7CiAgICAgIC0gcmVzdG9yZV9jYWNoZToKICAgICAgICAgIGtleTogZGVwZW5kZW5jeS1jYWNoZS17eyBjaGVja3N1bSAmcXVvdDtwYWNrYWdlLWxvY2suanNvbiZxdW90OyB9fQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IEluc3RhbGwgRGVwZW5kZW5jaWVzCiAgICAgICAgICBjb21tYW5kOiBucG0gaW5zdGFsbAogICAgICAtIHNhdmVfY2FjaGU6CiAgICAgICAgICBrZXk6IGRlcGVuZGVuY3ktY2FjaGUte3sgY2hlY2tzdW0gJnF1b3Q7cGFja2FnZS1sb2NrLmpzb24mcXVvdDsgfX0KICAgICAgICAgIHBhdGhzOgogICAgICAgICAgICAtIC4vbm9kZV9tb2R1bGVzCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogUnVuIHRoZSBhcHBsaWNhdGlvbgogICAgICAgICAgY29tbWFuZDogbm9kZSBzZXJ2ZXIuanMKICAgICAgICAgIGJhY2tncm91bmQ6IHRydWUKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBSdW4gdGVzdHMKICAgICAgICAgIGNvbW1hbmQ6IG5wbSBydW4gdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGUgc2NyaXB0IHN0YXJ0cyBvZmYgYnkgcHVsbGluZyBpbiB0aGUgcmVxdWlyZWQgaW1hZ2UgYW5kIHVwZGF0aW5nICZsdDtjb2RlJmd0O25wbSZsdDsvY29kZSZndDsuIERlcGVuZGVuY2llcyBhcmUgdGhlbiBpbnN0YWxsZWQgYW5kIGNhY2hlZC4gVG8gZW5zdXJlIHRoYXQgdGhlIGJyb3dzZXIgdGVzdHMgcnVuLCB0aGUgYXBwbGljYXRpb24gaXMgc3RhcnRlZCBpbiBhIGJhY2tncm91bmQgcHJvY2Vzcy4gT25jZSB0aGUgYXBwIGlzIHVwIGFuZCBydW5uaW5nLCB0aGUgJmx0O2NvZGUmZ3Q7dGVzdCZsdDsvY29kZSZndDsgc2NyaXB0IGlzIHJ1biB0byB0ZXN0IGl0LiZsdDsvcCZndDsKCiZsdDtwJmd0O0NvbW1pdCBhbGwgY2hhbmdlcyB0byB0aGUgcHJvamVjdCBhbmQgcHVzaCB0byB5b3VyIHJlbW90ZSBHaXRIdWIgcmVwb3NpdG9yeS4gVGhpcyB3aWxsIGF1dG9tYXRpY2FsbHkgdHJpZ2dlciB0aGUgYnVpbGQgcGlwZWxpbmUgYW5kIGEgc3VjY2Vzc2Z1bCBidWlsZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0J1aWxkIFN1Y2Nlc3NmdWwgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtidWlsZCZsdDsvc3Ryb25nJmd0OyB0byByZXZpZXcgdGhlIHRlc3QgZGV0YWlscy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0J1aWxkIERldGFpbHMgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNC0xMi1idWlsZC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA0LTEyLWJ1aWxkLWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDQtMTItYnVpbGQtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NvbmNsdXNpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7SGF2aW5nIHNlY3VyaXR5IGNoZWNrcyBidWlsdCBpbnRvIHlvdXIgYnVpbGQgcHJvY2VzcyBhZGRzIHNvIG11Y2ggdmFsdWUgdG8geW91ciBjb2RlLiBJdCBpcyBub3QgZW5vdWdoIHRoYXQgY29kZSB3b3JrcyBhbmQgaXMgbm90IGJ1Z2d5OyB5b3UgbXVzdCBhbHNvIG1ha2Ugc3VyZSB0aGF0IGl0IGNhbm5vdCBiZSBjb21wcm9taXNlZC4gQSBzZWN1cml0eS1kcml2ZW4gZGV2ZWxvcG1lbnQgcHJvY2VzcyBsaWtlIHRoaXMgY2FuIGJlIGV4dGVuZGVkIHRvIG90aGVyIHBhcnRzIG9mIHlvdXIgY29kZSB0aGF0IGludm9sdmUgdXNlciBpbnRlcmFjdGlvbiB0byBwcmV2ZW50IG1hbGljaW91cyB1c2VycyBmcm9tIHRha2luZyBhZHZhbnRhZ2Ugb2YgdnVsbmVyYWJpbGl0aWVzIGluIHlvdXIgY29kZS4gRW5jb3VyYWdlIHlvdXIgdGVhbSBtZW1iZXJzIHRvIHVzZSB0aGVzZSBzdGVwcyB0byBwcmV2ZW50IFhTUyBhdHRhY2tzIGluIHRoZWlyIGNvZGUsIHRvby4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtIYXBweSBjb2RpbmchJmx0Oy9wJmd0OwoKJmx0O2hyIC8mZ3Q7CgombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vdHdpdHRlci5jb20vY29kZXJvbmZsZWVrP2xhbmc9ZW4mcXVvdDsmZ3Q7RmlrYXlvIEFkZXBvanUmbHQ7L2EmZ3Q7IGlzIGEgTGlua2VkSW4gTGVhcm5pbmcgKEx5bmRhLmNvbSkgQXV0aG9yLCBGdWxsLXN0YWNrIGRldmVsb3BlciwgdGVjaG5pY2FsIHdyaXRlciBhbmQgdGVjaCBjb250ZW50IGNyZWF0b3IgcHJvZmljaWVudCBpbiBXZWIgYW5kIE1vYmlsZSB0ZWNobm9sb2dpZXMgYW5kIERldk9wcyB3aXRoIG92ZXIgMTAgeWVhcnMgZXhwZXJpZW5jZSBkZXZlbG9waW5nIHNjYWxhYmxlIGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9ucy4gV2l0aCBvdmVyIDQwIGFydGljbGVzIHdyaXR0ZW4gZm9yIENpcmNsZUNJLCBUd2lsaW8sIEF1dGgwIGFuZCBUaGUgTmV3IFN0YWNrIGJsb2dzIGFuZCBhbHNvIG9uIGhpcyBwZXJzb25hbCBNZWRpdW0gcGFnZSwgaGUgbG92ZXMgdG8gc2hhcmUgaGlzIGtub3dsZWRnZSB0byBhcyBtYW55IGRldmVsb3BlcnMgYXMgd291bGQgYmVuZWZpdCBmcm9tIGl0LiBZb3UgY2FuIGFsc28gY2hlY2sgb3V0IGhpcyB2aWRlbyBjb3Vyc2VzIG9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cudWRlbXkuY29tL3VzZXIvZmlrYXlvLWFkZXBvanUvJnF1b3Q7Jmd0O1VkZW15Jmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPkF1dG9tYXRlIHlvdXIgcmVsZWFzZXMgd2l0aCBDaXJjbGVDSSBhbmQgdGhlIEdpdEh1YiBDTEkgb3JiPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2F1dG9tYXRpbmcteW91ci1yZWxlYXNlcy13aXRoLWNpcmNsZWNpLWFuZC10aGUtZ2l0aHViLWNsaS1vcmIvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPkZyaSwgMzAgSnVsIDIwMjEgMDk6MDA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvYXV0b21hdGluZy15b3VyLXJlbGVhc2VzLXdpdGgtY2lyY2xlY2ktYW5kLXRoZS1naXRodWItY2xpLW9yYi88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5LeWxlIFRyeW9uPC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0O0xhc3QgeWVhciwgR2l0SHViIGFubm91bmNlZCB0aGUgcmVsZWFzZSBvZiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmJsb2cvMjAyMC0wOS0xNy1naXRodWItY2xpLTEtMC1pcy1ub3ctYXZhaWxhYmxlLyZxdW90OyZndDt0aGVpciBuZXcgQ0xJIHRvb2wmbHQ7L2EmZ3Q7LiBUaGUgbmV3ICZsdDtjb2RlJmd0O2doJmx0Oy9jb2RlJmd0OyBDTEkgd3JhcHMgYXJvdW5kIHRoZSBzdGFuZGFyZCAmbHQ7Y29kZSZndDtnaXQmbHQ7L2NvZGUmZ3Q7IGNsaSBhbmQgb2ZmZXJzIGEgc3VpdGUgb2YgYWRkaXRpb25hbCBHaXRIdWIuY29tIHNwZWNpZmljIGNvbW1hbmRzLiBUaGVzZSBuZXcgY29tbWFuZHMgaW5jbHVkZSB0aGUgYWJpbGl0eSB0byBjcmVhdGUgYSBuZXcgJmx0O2VtJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vZ2l0aHViL2NvbGxhYm9yYXRpbmctd2l0aC1pc3N1ZXMtYW5kLXB1bGwtcmVxdWVzdHMvYWJvdXQtcHVsbC1yZXF1ZXN0cyZxdW90OyZndDtwdWxsIHJlcXVlc3QmbHQ7L2EmZ3Q7Jmx0Oy9lbSZndDsgYW5kIHRvIGNyZWF0ZSBhICZsdDtlbSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZG9jcy5naXRodWIuY29tL2VuL2dpdGh1Yi9hZG1pbmlzdGVyaW5nLWEtcmVwb3NpdG9yeS9tYW5hZ2luZy1yZWxlYXNlcy1pbi1hLXJlcG9zaXRvcnkmcXVvdDsmZ3Q7cmVsZWFzZSZsdDsvYSZndDsmbHQ7L2VtJmd0OyBkaXJlY3RseSBmcm9tIHlvdXIgdGVybWluYWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2UgaGVyZSBvbiB0aGUgQ2lyY2xlQ0kgQ29tbXVuaXR5IGFuZCBQYXJ0bmVyIEVuZ2luZWVyaW5nIHRlYW0gYXQgQ2lyY2xlQ0kgdXNlIHRoZSAmbHQ7Y29kZSZndDtnaCBwciBjaGVja291dCZsdDsvY29kZSZndDsgY29tbWFuZCBhbGwgdGhlIHRpbWUgdG8gc2FmZWx5IHRlc3QgcHVsbCByZXF1ZXN0cyBmcm9tIHRoZSBjb21tdW5pdHkgKHlvdSEpIG9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL0NpcmNsZUNJLVB1YmxpYz9xPS1vcmImYW1wO2FtcDt0eXBlPSZhbXA7YW1wO2xhbmd1YWdlPSZhbXA7YW1wO3NvcnQ9JnF1b3Q7Jmd0O291ciB2YXJpb3VzIG9yYnMmbHQ7L2EmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RvZGF5IHdlIGFyZSBzaGFyaW5nIHRoZSBuZXcgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kZXZlbG9wZXIvb3Jicy9vcmIvY2lyY2xlY2kvZ2l0aHViLWNsaSZxdW90OyZndDtHaXRIdWIgQ0xJIG9yYiZsdDsvYSZndDsuIFlvdSBjYW4gbm93IGJyaW5nIHRoZSBwb3dlciBhbmQgZmxleGliaWxpdHkgb2YgdGhlIEdpdEh1YiBDTEkgdG8geW91ciBDSS9DRCBwaXBlbGluZS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7V2hhdCBhcmUgb3Jicz8mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzLyZxdW90OyZndDtPcmJzJmx0Oy9hJmd0OyBhcmUgcmV1c2FibGUgcGFja2FnZXMgb2YgQ0kgY29uZmlndXJhdGlvbiB0aGF0IGNhbiBiZSB1c2VkIGluIHlvdXIgQ2lyY2xlQ0kgY29uZmlnIHRvIGF1dG9tYXRlIGFuZCBvcHRpbWl6ZSBDSSB0YXNrcy4gV2l0aCBvcmJzIHlvdSBjYW4gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kZXZlbG9wZXIvb3Jicy9vcmIvY2lyY2xlY2kvbm9kZSN1c2FnZS1ub2RlX3Rlc3RfYW5kX2RlcGxveSZxdW90OyZndDt0ZXN0IGFuZCBkZXBsb3kgYSBOb2RlLmpzIGFwcGxpY2F0aW9uJmx0Oy9hJmd0OyBvciBlYXNpbHkgYWRkICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL0NpcmNsZUNJLVB1YmxpYy9zbGFjay1vcmIvd2lraSZxdW90OyZndDtjdXN0b21pemFibGUgU2xhY2sgbm90aWZpY2F0aW9ucyB0byB5b3VyIENJIHBpcGVsaW5lJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3cgdGhhdCB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kZXZlbG9wZXIvb3Jicy9vcmIvY2lyY2xlY2kvZ2l0aHViLWNsaSZxdW90OyZndDtHaXRIdWIgQ0xJIG9yYiZsdDsvYSZndDsgaXMgYXZhaWxhYmxlLCB3ZSBjYW4gc2hvdyB5b3UgaG93IHdlICBjb21iaW5lIHRoZSBwb3dlciBvZiBDaXJjbGVDSSBhbmQgR2l0SHViIHRvIGF1dG9tYXRlIG91ciB0ZXN0IGFuZCByZWxlYXNlIHByb2Nlc3MuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1Rlc3RpbmcgdGhlIGNvZGUmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhlIHVsdGltYXRlIGdvYWwgb2Ygb3VyIGNvbmZpZyBpcyB0byBoYXZlIGEgQ0kvQ0QgcGlwZWxpbmUgd2hlcmUgY29kZSBvbiBhbnkgYnJhbmNoIHdpbGwgYWx3YXlzIGJlIHRlc3RlZC4gSW4gdGhpcyBjYXNlLCBpZiB3ZSBtZXJnZSBvdXIgY2hhbmdlcyB0byB0aGUgJmx0O2NvZGUmZ3Q7bWFpbiZsdDsvY29kZSZndDsgYnJhbmNoLCB3ZSB3YW50IHRvIHRoZW4gdGFnIGFuZCByZWxlYXNlIHRoYXQgdXBkYXRlIG9uIEdpdEh1Yi5jb20uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gYmVnaW4sIHdlIHdpbGwgc3RhcnQgd2l0aCBhIHNhbXBsZSBjb25maWcgb2YgYSB2ZXJ5IHNpbXBsZSBOb2RlLmpzIHByb2plY3QsIG9uIHdoaWNoIHdlIHdpbGwgcnVuICZsdDtjb2RlJmd0O25wbSBydW4gdGVzdCZsdDsvY29kZSZndDsgb24gJmx0O2kmZ3Q7ZXZlcnkmbHQ7L2kmZ3Q7IGNvbW1pdCBwdXNoZWQgdG8gdGhlIHJlcG9zaXRvcnksIG9uIGFsbCBicmFuY2hlcy4mbHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246ICcyLjEnCm9yYnM6CiAgbm9kZTogY2lyY2xlY2kvbm9kZUA0LjMKd29ya2Zsb3dzOgogIHRlc3QtYW5kLXJlbGVhc2U6CiAgICBqb2JzOgogICAgICAtIG5vZGUvdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGlzIGNvbmZpZyBmaWxlIGNvbnRhaW5zIGEgd29ya2Zsb3cgJmx0O2NvZGUmZ3Q7dGVzdC1hbmQtcmVsZWFzZSZsdDsvY29kZSZndDsgY29udGFpbmluZyBhIHNpbmdsZSAmbHQ7Y29kZSZndDtub2RlL3Rlc3QmbHQ7L2NvZGUmZ3Q7IGpvYiBwcm92aWRlZCBieSB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kZXZlbG9wZXIvb3Jicy9vcmIvY2lyY2xlY2kvbm9kZSZxdW90OyZndDtOb2RlIG9yYiZsdDsvYSZndDsuIFRoaXMgam9iIGF1dG9tYXRpY2FsbHkgY2hlY2tzIG91dCBvdXIgY29kZSwgaW5zdGFsbHMgYW5kIGNhY2hlcyBvdXIgZGVwZW5kZW5jaWVzLCBhbmQgcnVucyBvdXIgJmx0O2NvZGUmZ3Q7dGVzdCZsdDsvY29kZSZndDsgbnBtIHNjcmlwdC4gSWYgeW91IHdhbnQgdG8gc2VlIGFuIGV4YW1wbGUgb2Ygd2hhdCB0aGlzIGpvYiBsb29rcyBsaWtlIGluIGFjdGlvbiwgeW91IGNhbiB2aWV3IHRoaXMgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2FwcC5jaXJjbGVjaS5jb20vcGlwZWxpbmVzL2dpdGh1Yi9DaXJjbGVDSS1QdWJsaWMvbm9kZS1vcmIvNzE5L3dvcmtmbG93cy9lMTdjNGY4Zi1kYjcxLTRkOTItOWE2MC05YWYyY2RkMmEzNzcvam9icy80NjYzJnF1b3Q7Jmd0O2xpdmUgZXhhbXBsZSBpbiB0aGUgQ2lyY2xlQ0kgYXBwJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3csIG91ciB0ZXN0cyBhcmUgcnVuIGZvciB1cyBhdXRvbWF0aWNhbGx5IGJ1dCB3aGVuIGl0IGNvbWVzIHRpbWUgdG8gaXNzdWUgYSBuZXcgcmVsZWFzZSBvZiBvdXIgcHJvZHVjdCwgd2Ugd2lsbCBuZWVkIHRvIG1hbnVhbGx5IGNyZWF0ZSBhIHRhZyBhbmQgcmVsZWFzZSBvbiBHaXRIdWIuY29tLiBXZSBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIG5ldyBHaXRIdWIgQ0xJIG9yYiBhbmQgb3VyIENpcmNsZUNJIGNvbmZpZyB0byBhdXRvbWF0ZSB0aGlzIHByb2Nlc3MuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1ByZXBhcmluZyBHaXRIdWIgYXV0aGVudGljYXRpb24mbHQ7L2gyJmd0OwombHQ7cCZndDtGb3IgYXV0b21hdGljYWxseSBjcmVhdGluZyB0YWdzIGFuZCByZWxlYXNlcywgd2Ugd2lsbCB1c2UgdGhlIEdpdEh1YiBDTEkgYW5kIHRva2VuIGJhc2VkIGF1dGhlbnRpY2F0aW9uLiBGaXJzdCwgd2Ugd2lsbCBjcmVhdGUgYSBHaXRIdWIgdG9rZW4gd2l0aCB0aGUgcHJvcGVyIHBlcm1pc3Npb25zLCBhbmQgdGhlbiB3ZSB3aWxsIGFkZCB0aGUgdG9rZW4gdG8gYSAmbHQ7YSBocmVmPSZxdW90Oy9kb2NzLzIuMC9jb250ZXh0cy8jY3JlYXRpbmctYW5kLXVzaW5nLWEtY29udGV4dCZxdW90OyZndDtDaXJjbGVDSSBjb250ZXh0Jmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtBIGNvbnRleHQgb24gQ2lyY2xlQ0kgaXMgYSBzaGFyZWQgY29sbGVjdGlvbiBvZiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdGhhdCBjYW4gYmUgYXR0YWNoZWQgdG8gdmFyaW91cyBqb2JzIGluIGFueSBwcm9qZWN0IHdpdGhpbiBhbiBvcmdhbml6YXRpb24uIFRoaXMgaXMgdXNlZnVsIHdoZW4geW91IG5lZWQgdG8gc2hhcmUgY3JlZGVudGlhbHMgKGxpa2UgR2l0SHViIGF1dGhlbnRpY2F0aW9uKSBiZXR3ZWVuIG1hbnkgcHJvamVjdHMuIENvbnRleHRzIGNhbiBldmVuIGJlICZsdDthIGhyZWY9JnF1b3Q7L2RvY3MvMi4wL2NvbnRleHRzLyNyZXN0cmljdGluZy1hLWNvbnRleHQmcXVvdDsmZ3Q7cmVzdHJpY3RlZCZsdDsvYSZndDsgdG8gcHJldmVudCBqb2JzIGZyb20gYWNjZXNzaW5nIGEgY29udGV4dCB1bmxlc3MgdHJpZ2dlcmVkIGJ5IGEgdXNlciB3aXRoIHRoZSBwcm9wZXIgcGVybWlzc2lvbnMuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QmVnaW4gYnkgY3JlYXRpbmcgYSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZG9jcy5naXRodWIuY29tL2VuL2dpdGh1Yi9hdXRoZW50aWNhdGluZy10by1naXRodWIva2VlcGluZy15b3VyLWFjY291bnQtYW5kLWRhdGEtc2VjdXJlL2NyZWF0aW5nLWEtcGVyc29uYWwtYWNjZXNzLXRva2VuJnF1b3Q7Jmd0O0dpdEh1YiBwZXJzb25hbCBhY2Nlc3MgdG9rZW4mbHQ7L2EmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0dpdGh1YiBwZXJzb25hIGFjY2VzcyB0b2tlbiBzY29wZXMmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJTY29wZXNGb3JHSC1DTEktT3JiLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViU2NvcGVzRm9yR0gtQ0xJLU9yYi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViU2NvcGVzRm9yR0gtQ0xJLU9yYi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJTY29wZXNGb3JHSC1DTEktT3JiLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJTY29wZXNGb3JHSC1DTEktT3JiLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJTY29wZXNGb3JHSC1DTEktT3JiLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViU2NvcGVzRm9yR0gtQ0xJLU9yYi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViU2NvcGVzRm9yR0gtQ0xJLU9yYi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViU2NvcGVzRm9yR0gtQ0xJLU9yYi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlNjb3Blc0ZvckdILUNMSS1PcmIucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBwZXJtaXNzaW9uIHNjb3BlcyBuZWVkZWQgZm9yIHRoZSBHaXRIdWIgQ0xJIGFyZSAmbHQ7Y29kZSZndDtyZXBvJmx0Oy9jb2RlJmd0OyBhbmQgJmx0O2NvZGUmZ3Q7cmVhZDpvcmcmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0O09uY2UgeW91IGhhdmUgeW91ciBwZXJzb25hbCBhY2Nlc3MgdG9rZW4gaGFuZHksIGhlYWQgb3ZlciB0byBodHRwczovL2FwcC5jaXJjbGVjaS5jb20vIGFuZCBpbiB0aGUgbGVmdCB2ZXJ0aWNhbCBuYXZpZ2F0aW9uIGJhciwgc2VsZWN0IHRoZSBnZWFyIGljb24gZm9yICZsdDtjb2RlJmd0O09yZ2FuaXphdGlvbiBTZXR0aW5ncyZsdDsvY29kZSZndDsuIFRoaXMgb3BlbnMgdGhlIGNvbnRleHRzIHNldHRpbmdzIHBhZ2UuIFRoZSBVUkwgd2lsbCBsb29rIHNvbWV0aGluZyBsaWtlIHRoaXM6ICZsdDtjb2RlJmd0O2h0dHBzOi8vYXBwLmNpcmNsZWNpLmNvbS9zZXR0aW5ncy9vcmdhbml6YXRpb24vJmFtcDtsdDtWQ1MmYW1wO2d0Oy8mYW1wO2x0O09yZ2FuaXphdGlvbiZhbXA7Z3Q7L2NvbnRleHRzJmx0Oy9jb2RlJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7Q3JlYXRlIENvbnRleHQmbHQ7L3N0cm9uZyZndDsgYW5kIGdpdmUgaXQgYSBuYW1lLiBJbiBvdXIgZXhhbXBsZSB3ZSB3aWxsIHVzZSAmbHQ7Y29kZSZndDtHSVRIVUJfQ1JFRFMmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZW4sIGNsaWNrICZsdDtzdHJvbmcmZ3Q7QWRkIEVudmlyb25tZW50IFZhcmlhYmxlJmx0Oy9zdHJvbmcmZ3Q7IGFuZCBhZGQgeW91ciB0b2tlbiwgdXNpbmcgdGhlIG5hbWUgJmx0O2NvZGUmZ3Q7R0lUSFVCX1RPS0VOJmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7QWRkIEVudmlyb25tZW50IFZhcmlhYmxlIFVJIHdpbmRvdyZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvQWRkR2l0SHViVG9rZW5Ub0NvbnRleHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0FkZEdpdEh1YlRva2VuVG9Db250ZXh0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0FkZEdpdEh1YlRva2VuVG9Db250ZXh0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvQWRkR2l0SHViVG9rZW5Ub0NvbnRleHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvQWRkR2l0SHViVG9rZW5Ub0NvbnRleHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0FkZEdpdEh1YlRva2VuVG9Db250ZXh0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvQWRkR2l0SHViVG9rZW5Ub0NvbnRleHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0FkZEdpdEh1YlRva2VuVG9Db250ZXh0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0FkZEdpdEh1YlRva2VuVG9Db250ZXh0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9BZGRHaXRIdWJUb2tlblRvQ29udGV4dC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0F1dG9tYXRpbmcgdGhlIHJlbGVhc2UmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7QmVnaW4gYnkgYWRkaW5nIHRoZSBHaXRIdWIgQ0xJIG9yYiB0byB5b3VyIGNvbmZpZzombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246ICcyLjEnCm9yYnM6CiAgbm9kZTogY2lyY2xlY2kvbm9kZUA0LjMKICBnaDogY2lyY2xlY2kvZ2l0aHViLWNsaUAxLjAKCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1RoaXMgZ2l2ZXMgdXMgYWNjZXNzIHRvIHRoZSB2YXJpb3VzICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAvb3JiLWNvbmNlcHRzLz9zZWN0aW9uPWNvbmZpZ3VyYXRpb24jY29tbWFuZHMmcXVvdDsmZ3Q7Y29tbWFuZHMmbHQ7L2EmZ3Q7IGFuZCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL29yYi1jb25jZXB0cy8/c2VjdGlvbj1jb25maWd1cmF0aW9uI2pvYnMmcXVvdDsmZ3Q7am9icyZsdDsvYSZndDsgb2ZmZXJlZCBieSB0aGUgR2l0SHViIENMSSBvcmIuIENvbW1hbmRzIGNhbiBiZSB1c2VkIGluIHlvdXIgY3VzdG9tIGpvYnMgdG8gc2V0IHVwIGFuZCBhdXRoZW50aWNhdGUgd2l0aCB0aGUgQ0xJIGZvciBtYW51YWwgdXNlLCBidXQgaW4gdGhpcyBleGFtcGxlIHdlIHdpbGwgdXNlIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RldmVsb3Blci9vcmJzL29yYi9jaXJjbGVjaS9naXRodWItY2xpI2pvYnMtcmVsZWFzZSZxdW90OyZndDsmbHQ7ZW0mZ3Q7cmVsZWFzZSZsdDsvZW0mZ3Q7IGpvYiZsdDsvYSZndDsgd2l0aCBzb21lIGN1c3RvbWl6ZWQgcGFyYW1ldGVycyBhbmQgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9jb25maWd1cmF0aW9uLXJlZmVyZW5jZS8jam9iZmlsdGVycyZxdW90OyZndDtmaWx0ZXJzJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7SW1wbGVtZW50aW5nIGEgY29tcGxldGUgdGVzdCBhbmQgcmVsZWFzZSB3b3JrZmxvdyB3aXRoIHRoZSBHaXRIdWIgQ0xJIG9yYiZsdDsvaDImZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246ICcyLjEnCm9yYnM6CiAgbm9kZTogY2lyY2xlY2kvbm9kZUA0LjMKICBnaDogY2lyY2xlY2kvZ2l0aHViLWNsaUAxLjAKd29ya2Zsb3dzOgogIHRlc3QtYW5kLXJlbGVhc2U6CiAgICBqb2JzOgogICAgICAtIG5vZGUvdGVzdAogICAgICAtIGdoL3JlbGVhc2U6CiAgICAgICAgICBub3Rlcy1maWxlOiBjaGFuZ2Vsb2cubWQKICAgICAgICAgIHRhZzogMS4wLjAKICAgICAgICAgIHRpdGxlOiBUaGUgaW5pdGlhbCByZWxlYXNlCiAgICAgICAgICByZXF1aXJlczoKICAgICAgICAgICAgLSBub2RlL3Rlc3QKICAgICAgICAgIGNvbnRleHQ6CiAgICAgICAgICAgIC0gR0lUSFVCX0NSRURTCiAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICBicmFuY2hlczoKICAgICAgICAgICAgICBvbmx5OgogICAgICAgICAgICAgICAgLSBtYWluCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1lvdSBjYW4gc2VlIHdlIGhhdmUgYWRkZWQgdGhlICZsdDtjb2RlJmd0O2doL3JlbGVhc2UmbHQ7L2NvZGUmZ3Q7IGpvYiB0byBvdXIgJmx0O2NvZGUmZ3Q7dGVzdC1hbmQtcmVsZWFzZSZsdDsvY29kZSZndDsgd29ya2Zsb3cgd2l0aCBhIG51bWJlciBvZiBjdXN0b21pemVkIHBhcmFtZXRlcnMuIFlvdSBjYW4gdmlldyAmbHQ7aSZndDthbGwmbHQ7L2kmZ3Q7IGF2YWlsYWJsZSBwYXJhbWV0ZXJzIGZvciB0aGUgam9iIG9uIHRoZSAmbHQ7YSBocmVmPSZxdW90Oy9kZXZlbG9wZXIvb3Jicy9vcmIvY2lyY2xlY2kvZ2l0aHViLWNsaT92ZXJzaW9uPWRldjphbHBoYSNqb2JzLXJlbGVhc2UmcXVvdDsmZ3Q7T3JiIFJlZ2lzdHJ5IHBhZ2UmbHQ7L2EmZ3Q7IGZvciB0aGlzIG9yYiBqb2IuIFRoaXMgam9iIGF1dG9tYXRpY2FsbHkgcnVucyB0aGUgJmx0O2NvZGUmZ3Q7Z2gvc2V0dXAmbHQ7L2NvZGUmZ3Q7IGNvbW1hbmQsIHdoaWNoIGluc3RhbGxzIGFuZCBhdXRoZW50aWNhdGVzIHRoZSBHaXRIdWIgQ0xJLCBhbmQgdGhlbiBydW5zICZsdDtjb2RlJmd0O2doIHJlbGVhc2UgY3JlYXRlJmx0Oy9jb2RlJmd0OyB3aXRoIG91ciBzcGVjaWZpZWQgcGFyYW1ldGVycy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtJbWFnaW5lIHlvdSBhcmUgd29ya2luZyBvbiB0aGUgZmlyc3QgbWFqb3IgcmVsZWFzZSBvZiB5b3VyIHByb2R1Y3QuIEZvciBub3csIHlvdSBhcmUgd29ya2luZyBpbiB0aGUgJmx0O2NvZGUmZ3Q7YmV0YSZsdDsvY29kZSZndDsgYnJhbmNoLiBXaGVuIHRoZSAmbHQ7aSZndDtiZXRhJmx0Oy9pJmd0OyBpcyBjb21wbGV0ZSwgeW91IHBsYW4gdG8gbWVyZ2UgdG8gJmx0O2NvZGUmZ3Q7bWFpbiZsdDsvY29kZSZndDsgYW5kIGlzc3VlIHZlcnNpb24gJmx0O2NvZGUmZ3Q7MS4wLjAmbHQ7L2NvZGUmZ3Q7IG9mIHlvdXIgcmVsZWFzZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtMb29raW5nIGF0IHRoZSBmdWxsIGV4YW1wbGUsIHdlIGFyZSBwcm92aWRpbmcgdGhlIChyZXF1aXJlZCkgJmx0O2NvZGUmZ3Q7dGFnJmx0Oy9jb2RlJmd0OyBwYXJhbWV0ZXIgdG8gc3BlY2lmeSB0aGUgaW50ZW5kZWQgcmVsZWFzZSB0YWcuIElmIG5vIHN1Y2ggdGFnIGV4aXN0cywgdGhlICZsdDtjb2RlJmd0O2doIGNsaSZsdDsvY29kZSZndDsgd2lsbCBjcmVhdGUgYSBuZXcgdGFnIHVzaW5nIHRoZSBsYXRlc3QgY29kZSBpbiB0aGUgZGVmYXVsdCBicmFuY2gsIHdoaWNoIGluIG91ciBjYXNlIGlzICZsdDtjb2RlJmd0O21haW4mbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZXJlIGFyZSB0aHJlZSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgc2hvd24gaGVyZSB0aGF0IGFyZSAmbHQ7aSZndDtub3QmbHQ7L2kmZ3Q7IGZyb20gdGhlIG9yYiBkaXJlY3RseSwgc28geW91IHdpbGwgbm90IHNlZSB0aGVtIG9uIHRoZSBPcmIgUmVnaXN0cnkgZG9jcy4gUGFyYW1ldGVycyAmbHQ7Y29kZSZndDtyZXF1aXJlcyZsdDsvY29kZSZndDssICZsdDtjb2RlJmd0O2NvbnRleHQmbHQ7L2NvZGUmZ3Q7LCBhbmQgJmx0O2NvZGUmZ3Q7ZmlsdGVycyZsdDsvY29kZSZndDsgYXJlIHNwZWNpYWwgam9iIHBhcmFtZXRlcnMgYXZhaWxhYmxlIHRvIGFueSBqb2Igb24gQ2lyY2xlQ0kgbmF0aXZlbHkuJmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDtUaGUgJmx0O2EgaHJlZj0mcXVvdDsvZG9jcy8yLjAvY29uZmlndXJhdGlvbi1yZWZlcmVuY2UvP3NlY3Rpb249Y29uZmlndXJhdGlvbiNyZXF1aXJlcyZxdW90OyZndDsmbHQ7Y29kZSZndDtyZXF1aXJlcyZsdDsvY29kZSZndDsgcGFyYW1ldGVyJmx0Oy9hJmd0OyBzcGVjaWZpZXMgdGhhdCB0aGlzIGpvYiAoJmx0O2NvZGUmZ3Q7Z2gvcmVsZWFzZSZsdDsvY29kZSZndDspIHdpbGwgbm90IHJ1biB1bnRpbCBhbGwgam9icyB1bmRlciAmbHQ7Y29kZSZndDtyZXF1aXJlcyZsdDsvY29kZSZndDsgaGF2ZSBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LiBJbiB0aGlzIGNhc2UgdGhlIGpvYiBpcyAmbHQ7Y29kZSZndDtub2RlL3Rlc3QmbHQ7L2NvZGUmZ3Q7LiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1RoZSAmbHQ7YSBocmVmPSZxdW90Oy9kb2NzLzIuMC9jb250ZXh0cy8jY3JlYXRpbmctYW5kLXVzaW5nLWEtY29udGV4dCZxdW90OyZndDtjb250ZXh0Jmx0Oy9hJmd0OyBjb250YWlucyBvdXIgc2hhcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcy4gSGVyZSBpcyB3aGVyZSB3ZSBjYW4gYXR0YWNoIHRoZSAmbHQ7Y29kZSZndDtHSVRIVUJfQ1JFRFMmbHQ7L2NvZGUmZ3Q7IGNvbnRleHQgd2UgY3JlYXRlZCBlYXJsaWVyLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0ZpbHRlcnMgbGltaXQgdGhlIGNvbmRpdGlvbnMgdW5kZXIgd2hpY2ggYSBqb2Igd2lsbCBleGVjdXRlLiBXaXRob3V0IGFueSBmaWx0ZXJzLCBhbGwgam9icyBpbiBhIHdvcmtmbG93IHdpbGwgYWx3YXlzIGV4ZWN1dGUuIFdpdGggdGhlIGZpbHRlciBhcHBsaWVkIGluIHRoaXMgZXhhbXBsZSwgb3VyICZsdDtjb2RlJmd0O2doL3JlbGVhc2UmbHQ7L2NvZGUmZ3Q7IGpvYiB3aWxsIHJ1biBvbmx5IGlmIHRoZSBqb2Igd2FzIHRyaWdnZXJlZCBvbiB0aGUgJmx0O2NvZGUmZ3Q7bWFpbiZsdDsvY29kZSZndDsgYnJhbmNoICh3aGVuIHdlIG1lcmdlKS4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7VGhpcyBtZWFucyB0aGF0IHdoZW4gd2UgbWVyZ2Ugb3VyIGNoYW5nZSBmcm9tICZsdDtjb2RlJmd0O2JldGEmbHQ7L2NvZGUmZ3Q7IHRvICZsdDtjb2RlJmd0O21haW4mbHQ7L2NvZGUmZ3Q7IGluIHRoZSBjb25maWcgc2V0dXAsIHRoZSAmbHQ7Y29kZSZndDsxLjAuMCZsdDsvY29kZSZndDsgdGFnIGFuZCByZWxlYXNlIHdpbGwgYmUgY3JlYXRlZCBmcm9tIHRoZSBuZXcgJmx0O2NvZGUmZ3Q7SEVBRCZsdDsvY29kZSZndDsgb2YgJmx0O2NvZGUmZ3Q7bWFpbiZsdDsvY29kZSZndDsgdGhhdCBjb250YWlucyBvdXIgbmV3IGNoYW5nZXMuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViUmVsZWFzZXNQYWdlRXhhbXBsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7R2l0SHViIFJlbGVhc2UgcGFnZSBzaG93aW5nIHRoYXQgYSByZWxlYXNlIGhhcyBiZWVuIGNyZWF0ZWQgZm9yIHZlcnNpb24gMS4wLjAmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlJlbGVhc2VzUGFnZUV4YW1wbGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJSZWxlYXNlc1BhZ2VFeGFtcGxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViUmVsZWFzZXNQYWdlRXhhbXBsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViUmVsZWFzZXNQYWdlRXhhbXBsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlJlbGVhc2VzUGFnZUV4YW1wbGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlJlbGVhc2VzUGFnZUV4YW1wbGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlJlbGVhc2VzUGFnZUV4YW1wbGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJSZWxlYXNlc1BhZ2VFeGFtcGxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJSZWxlYXNlc1BhZ2VFeGFtcGxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS9HaXRIdWJSZWxlYXNlc1BhZ2VFeGFtcGxlLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViUmVsZWFzZXNQYWdlRXhhbXBsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViUmVsZWFzZXNQYWdlRXhhbXBsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvR2l0SHViUmVsZWFzZXNQYWdlRXhhbXBsZS5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlJlbGVhc2VzUGFnZUV4YW1wbGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhL0dpdEh1YlJlbGVhc2VzUGFnZUV4YW1wbGUucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0luIHRoZSBleGFtcGxlIGFib3ZlLCB3ZSB1c2VkIHNldmVyYWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIHRvIHNwZWNpZnkgdGhlIGxvY2F0aW9uIG9mIHRoZSBjaGFuZ2Vsb2cgZmlsZSwgc2V0IHRoZSB0aXRsZSwgYW5kIG1vcmUuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1dyYXBwaW5nIHVwJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7QWZ0ZXIgaW1wbGVtZW50aW5nIHRoZSB0ZXN0IGFuZCByZWxlYXNlIHdvcmtmbG93LCB3ZSBjYW4ganVzdCB1cGRhdGUgb3VyICZsdDtjb2RlJmd0Oy5jaXJjbGVjaS9jb25maWcueW1sJmx0Oy9jb2RlJmd0OyB3aXRoIGVhY2ggcHVsbCByZXF1ZXN0IHRvIHJlZmxlY3QgdGhlIGRlc2lyZWQgY2hhbmdlLiBGb3IgZXhhbXBsZSwgaWYgd2Ugd2VyZSB0byBvcGVuIGEgbmV3IGJyYW5jaCBjYWxsZWQgJmx0O2NvZGUmZ3Q7YWRkLWZlYXR1cmUtYmxpbmsmbHQ7L2NvZGUmZ3Q7LCB3ZSB3b3VsZCBzdGFydCBvdXIgbmV3IGJyYW5jaCBieSB1cGRhdGluZyB0aGUgY29uZmlnIHRvIHJlZmxlY3QgdGhlIGludGVuZGVkIHJlbGVhc2Ugd2Ugd2FudCB0byBwcmVwYXJlIGZvciB3aGVuIHdlIGFyZSBhZ2FpbiByZWFkeSB0byBtZXJnZSB0byAmbHQ7Y29kZSZndDttYWluJmx0Oy9jb2RlJmd0OzombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O3dvcmtmbG93czoKICB0ZXN0LWFuZC1yZWxlYXNlOgogICAgam9iczoKICAgICAgLSBub2RlL3Rlc3QKICAgICAgLSBnaC9yZWxlYXNlOgogICAgICAgICAgbm90ZXMtZmlsZTogY2hhbmdlbG9nLm1kCiAgICAgICAgICB0YWc6IDEuMS4wCiAgICAgICAgICB0aXRsZTogJnF1b3Q7QWRkIEZlYXR1cmU6IEJsaW5raW5nIHRleHQmcXVvdDsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwombHQ7cCZndDtUaGFuayB5b3UgZm9yIHJlYWRpbmchJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7S3lsZSBUcnlvbiBAVGVjaFNxdWlkVFYmbHQ7L3AmZ3Q7CgombHQ7cCZndDtWaWV3IHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RldmVsb3Blci9vcmJzL29yYi9jaXJjbGVjaS9naXRodWItY2xpJnF1b3Q7Jmd0O0dpdEh1YiBDTEkgb3JiJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPkNvbnRpbnVvdXMgaW50ZWdyYXRpb24gZm9yIFJ1c3QgYXBwbGljYXRpb25zPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL3J1c3QtY2kvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPkZyaSwgMzAgSnVsIDIwMjEgMDk6MDA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvcnVzdC1jaS88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5GaWtheW8gQWRlcG9qdTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7aDImZ3Q7SW50cm9kdWN0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cucnVzdC1sYW5nLm9yZy8mcXVvdDsmZ3Q7UnVzdCZsdDsvYSZndDsgaXMgYSBwb3dlcmZ1bCBsYW5ndWFnZSBidWlsdCBvbiB0aGUgcHJvbWlzZSBvZiBwZXJmb3JtYW5jZSBhbmQgcmVsaWFiaWxpdHkuIFdpdGggbm8gcnVudGltZSBvciBnYXJiYWdlIGNvbGxlY3RvciwgaXQgZWFzaWx5IHJ1bnMgaW4gYW55IGVudmlyb25tZW50IGFuZCBjYW4gYmUgaW50ZWdyYXRlZCBpbnRvIGFueSBleGlzdGluZyBsYW5ndWFnZSBvciBmcmFtZXdvcmsuIFdpdGggdGhlIGFkdmVudCBvZiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViQXNzZW1ibHkmcXVvdDsmZ3Q7V2ViQXNzZW1ibHkmbHQ7L2EmZ3Q7LiBSdXN0IGhhcyBiZWNvbWUgZXZlbiBtb3JlIHZhbHVlZCBpbiB0aGUgd2ViIGRldmVsb3BtZW50IHNwYWNlLiBSdXN04oCZcyBzZWFtbGVzcyBwZWVyaW5nIHdpdGggTm9kZS5qcyB0byBidWlsZCBoaWdobHkgcGVyZm9ybWFudCBmdW5jdGlvbmFsaXRpZXMgaGFzIG1hZGUgaXQgYSBkZWxpZ2h0IGZvciB3ZWIgZGV2ZWxvcGVycy4gTWFueSB3ZWIgZGV2ZWxvcGVycyB3b3VsZCByYXRoZXIgd3JpdGUgUnVzdCB0aGFuIGhhdmUgdG8gbGVhcm4vd3JpdGUgQysrIG9yIEMgZm9yIFdlYkFzc2VtYmx5IGludGVncmF0aW9ucy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHR1dG9yaWFsLCB5b3Ugd2lsbCBsZWFybiBhbmQgZGVtb25zdHJhdGUgaG93IHRvIGF1dG9tYXRpY2FsbHkgdGVzdCBSdXN0IGFwcGxpY2F0aW9ucyBhcyB5b3UgcHVzaCB1cGRhdGVzIGFuZCB1cGdyYWRlcyBpbiB5b3VyIFJ1c3QgYXBwbGljYXRpb25zIHRvIGEgcmVtb3RlIHJlcG9zaXRvcnkuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1ByZXJlcXVpc2l0ZXMmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VG8gZm9sbG93IGFsb25nIHdpdGggdGhlIHR1dG9yaWFsLCBhIGZldyB0aGluZ3MgYXJlIHJlcXVpcmVkOiZsdDsvcCZndDsKCiZsdDtvbCZndDsKICAmbHQ7bGkmZ3Q7QmFzaWMga25vd2xlZGdlIG9mIFJ1c3QmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd3d3LnJ1c3QtbGFuZy5vcmcvJnF1b3Q7Jmd0O1J1c3QmbHQ7L2EmZ3Q7IGluc3RhbGxlZCBvbiB5b3VyIHN5c3RlbSAoZmluZCBpbnN0YWxsYXRpb24gaW5zdHJ1Y3Rpb25zICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cucnVzdC1sYW5nLm9yZy9sZWFybi9nZXQtc3RhcnRlZCZxdW90OyZndDtoZXJlJmx0Oy9hJmd0OykmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vc2lnbnVwJnF1b3Q7Jmd0O0NpcmNsZUNJJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS8mcXVvdDsmZ3Q7R2l0SHViJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKJmx0Oy9vbCZndDsKCiZsdDtwJmd0O1dpdGggYWxsIHRoZXNlIGluc3RhbGxlZCBhbmQgc2V0IHVwLCBpdCBpcyB0aW1lIHRvIGJlZ2luIHRoZSB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgYSBuZXcgUnVzdCBwcm9qZWN0Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O0lmIHlvdSBoYXZlIGFscmVhZHkgaW5zdGFsbGVkIFJ1c3QgYmVmb3JlIHN0YXJ0aW5nIHRoaXMgcHJvamVjdCwgbWFrZSBzdXJlIHlvdSBydW4gJmx0O2NvZGUmZ3Q7cnVzdHVwIHVwZGF0ZSZsdDsvY29kZSZndDsgc28geW91ciBjdXJyZW50IGluc3RhbGxhdGlvbiBpcyBjb21wYXRpYmxlLiBUbyBiZWdpbiwgY3JlYXRlIGEgbmV3IFJ1c3QgYXBwbGljYXRpb24gYnkgcnVubmluZyB0aGlzIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtjYXJnbyBuZXcgcnVzdC10ZXN0aW5nCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O1RoaXMgY29tbWFuZCBxdWlja2x5IHNjYWZmb2xkcyBhIGJhcmVib25lcyBSdXN0IGFwcGxpY2F0aW9uIGluc2lkZSB0aGUgJmx0O2NvZGUmZ3Q7cnVzdC10ZXN0aW5nJmx0Oy9jb2RlJmd0OyBmb2xkZXIuIFlvdSB3aWxsIGJ1aWxkIGEgc2ltcGxlIENMSSBhcHBsaWNhdGlvbiB0aGF0IHByb21wdHMgdGhlIHVzZXIgZm9yIGEgbmFtZSBhbmQgcHJpbnRzIGEgZ3JlZXRpbmcgbWVzc2FnZSBiYWNrIHRvIHRoZSBDTEkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TG9jYXRlIHRoZSBmaWxlICZsdDtjb2RlJmd0O3NyYy9tYWluLnJzJmx0Oy9jb2RlJmd0OyBhbmQgcmVwbGFjZSBpdHMgY29udGVudCB3aXRoIHRoaXMgY29kZTombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2ZuIG1haW4oKSB7CiAgICBsZXQgbXV0IGxpbmUgPSBTdHJpbmc6Om5ldygpOwogICAgcHJpbnRsbiEoJnF1b3Q7UGxlYXNlIGVudGVyIHlvdXIgbmFtZTogJnF1b3Q7KTsKICAgIHN0ZDo6aW86OnN0ZGluKCkucmVhZF9saW5lKCZhbXA7YW1wO211dCBsaW5lKS51bndyYXAoKTsKICAgIHByaW50bG4hKCZxdW90O3t9JnF1b3Q7LCBidWlsZF9tZXNzYWdlKGxpbmUpKTsKfQoKZm4gYnVpbGRfbWVzc2FnZShuYW1lOiBTdHJpbmcpIC0mYW1wO2d0OyBTdHJpbmd7CiAgICBsZXQgbWVzc2FnZSA9ICZxdW90O1lvdSBhcmUgd2VsY29tZSAmcXVvdDsudG9fb3duZWQoKSArICZhbXA7YW1wO25hbWU7CiAgICByZXR1cm4gbWVzc2FnZTsKfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtJbiB0aGUgY29kZSBhYm92ZSwgYSAmbHQ7Y29kZSZndDtidWlsZF9tZXNzYWdlJmx0Oy9jb2RlJmd0OyBmdW5jdGlvbiBpcyBkZWZpbmVkIHdoaWNoIHRha2VzIGluIGEgJmx0O2NvZGUmZ3Q7bmFtZSZsdDsvY29kZSZndDsgYXJndW1lbnQgb2YgdHlwZSAmbHQ7Y29kZSZndDtTdHJpbmcmbHQ7L2NvZGUmZ3Q7IGFuZCByZXR1cm5zIGEgZ3JlZXRpbmcgbWVzc2FnZSBjb25zdHJ1Y3RlZCB1c2luZyB0aGUgJmx0O2NvZGUmZ3Q7bmFtZSZsdDsvY29kZSZndDsgYXJndW1lbnQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlICZsdDtjb2RlJmd0O21haW4mbHQ7L2NvZGUmZ3Q7IGZ1bmN0aW9uIHByb21wdHMgdGhlIHVzZXIgZm9yIGEgbmFtZS4gVGhlIG5hbWUgaXMgdGhlbiBwYXNzZWQgdG8gdGhlICZsdDtjb2RlJmd0O2J1aWxkX21lc3NhZ2UmbHQ7L2NvZGUmZ3Q7IGZ1bmN0aW9uIGFuZCBpdHMgcmV0dXJuIHZhbHVlIHByaW50ZWQgb3V0IHRvIHRoZSBDTEkgb3V0cHV0LiZsdDsvcCZndDsKCiZsdDtwJmd0O1J1biB0aGlzIHByb2dyYW0gYnkgcnVubmluZyB0aGUgY29tbWFuZCBiZWxvdyBhdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb2xkZXIuJmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtjYXJnbyBydW4KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7VGhlIGFwcGxpY2F0aW9uIHdpbGwgcHJvbXB0IHlvdSBmb3IgeW91ciBuYW1lLiBFbnRlciB5b3VyIG5hbWUgYW5kIGhpdCB0aGUgJmx0O2NvZGUmZ3Q7RW50ZXImbHQ7L2NvZGUmZ3Q7IGtleSB0byBzZWUgdGhlIGdyZWV0aW5nIG1lc3NhZ2UgcHJpbnRlZCB0byB0aGUgQ0xJIHNjcmVlbiBhcyBzaG93biBiZWxvdy4mbHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O0ZpbmlzaGVkIGRldiBbdW5vcHRpbWl6ZWQgKyBkZWJ1Z2luZm9dIHRhcmdldChzKSBpbiAwLjAwcwogICAgIFJ1bm5pbmcgYHRhcmdldC9kZWJ1Zy9ydXN0LXRlc3RpbmdgClBsZWFzZSBlbnRlciB5b3VyIG5hbWU6IApGaWtheW8gQWRlcG9qdQpZb3UgYXJlIHdlbGNvbWUgRmlrYXlvIEFkZXBvanUKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O2gyJmd0O0FkZGluZyB0ZXN0cyBmb3IgdGhlIFJ1c3QgYXBwbGljYXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7T25lIG9mIHRoZSBiZWF1dGllcyBvZiBSdXN0IGlzIHRoYXQgaXQgY29tZXMgYnVuZGxlZCB3aXRoIGl0cyBvd24gdGVzdGluZyBmcmFtZXdvcmssIGFuZCByZXF1aXJlcyBubyBhZGRpdGlvbmFsIHNldHVwLiBZb3Ugd2lsbCBiZSB3cml0aW5nIGEgdW5pdCB0ZXN0IGZvciB0aGUgJmx0O2NvZGUmZ3Q7YnVpbGRfbWVzc2FnZSZsdDsvY29kZSZndDsgZnVuY3Rpb24gdG8gYXNzZXJ0IGl0cyBvdXRwdXQuIFVubGlrZSBtb3N0IG90aGVyIGxhbmd1YWdlcyBhbmQgZnJhbWV3b3JrcyB0aGF0IHBsYWNlIHRlc3RzIGluIHNlcGFyYXRlIGZpbGVzLCBSdXN0IGFjdHVhbGx5IGVuY291cmFnZXMgeW91IHRvIHBsYWNlIHlvdXIgdW5pdCB0ZXN0cyBpbiB0aGUgc2FtZSBmaWxlIGFzIHRoZSBwaWVjZSBvZiBjb2RlIGJlaW5nIHRlc3RlZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgJmx0O2NvZGUmZ3Q7Y2FyZ28gdGVzdCZsdDsvY29kZSZndDsgY29tbWFuZCBmb3IgcnVubmluZyB0ZXN0cyBpbiBhIFJ1c3QgYXBwbGljYXRpb24gd2lsbCBsb2NhdGUgYW55IGZ1bmN0aW9uIHdpdGggdGhlICZsdDtjb2RlJmd0OyNbdGVzdF0mbHQ7L2NvZGUmZ3Q7IGF0dHJpYnV0ZSBpbiB0aGUgcHJvamVjdCBhbmQgcnVuIGl0IGFzIGEgdGVzdCBjYXNlLiZsdDsvcCZndDsKCiZsdDtwJmd0O0FkZCB0aGlzIHRlc3QgY2FzZSBqdXN0IGJlbG93IHRoZSAmbHQ7Y29kZSZndDtidWlsZF9tZXNzYWdlJmx0Oy9jb2RlJmd0OyBmdW5jdGlvbjombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0OyNbdGVzdF0KZm4gdGVzdF9idWlsZF9tZXNzYWdlKCl7CiAgICBsZXQgbmFtZSA9IFN0cmluZzo6ZnJvbSgmcXVvdDtGaWtheW8mcXVvdDspOwoKICAgIGFzc2VydF9lcSEoYnVpbGRfbWVzc2FnZShuYW1lKSwgJnF1b3Q7WW91IGFyZSB3ZWxjb21lIEZpa2F5byZxdW90OykKfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHRlc3QsIGEgJmx0O2NvZGUmZ3Q7bmFtZSZsdDsvY29kZSZndDsgdmFyaWFibGUgaXMgZGVjbGFyZWQgYW5kIGFzc2lnbmVkIGEgJmx0O2NvZGUmZ3Q7U3RyaW5nJmx0Oy9jb2RlJmd0OyB2YWx1ZSBvZiAmbHQ7Y29kZSZndDtGaWtheW8mbHQ7L2NvZGUmZ3Q7LiBUaGUgbmV4dCBsaW5lIHRoZW4gY2hlY2tzIHRoYXQgdGhlICZsdDtjb2RlJmd0O2J1aWxkX21lc3NhZ2UmbHQ7L2NvZGUmZ3Q7IGZ1bmN0aW9uIHJldHVybnMgdGhlIGV4cGVjdGVkIG1lc3NhZ2UgZm9yIHRoZSBhcmd1bWVudCBwYXNzZWQgaW4uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gcnVuIHRoaXMgdGVzdCwgcnVuOiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7Y2FyZ28gdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtUaGUgdGVzdCBzaG91bGQgcnVuIHN1Y2Nlc3NmdWxseS4gVGhpcyBpcyB0aGUgb3V0cHV0IHRoYXQgd2lsbCBhcHBlYXIgb24geW91ciBDTEk6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDtDb21waWxpbmcgcnVzdC10ZXN0aW5nIHYwLjEuMCAoL1VzZXJzL3N0YW5tZC9Qcm9qZWN0cy9DQ0kvcnVzdC10ZXN0aW5nKQogICAgRmluaXNoZWQgdGVzdCBbdW5vcHRpbWl6ZWQgKyBkZWJ1Z2luZm9dIHRhcmdldChzKSBpbiAwLjYzcwogICAgIFJ1bm5pbmcgdGFyZ2V0L2RlYnVnL2RlcHMvcnVzdF90ZXN0aW5nLTVjZmZiYjY4NGRiYzY4OTkKCnJ1bm5pbmcgMSB0ZXN0CnRlc3QgdGVzdF9idWlsZF9tZXNzYWdlIC4uLiBvawoKdGVzdCByZXN1bHQ6IG9rLiAxIHBhc3NlZDsgMCBmYWlsZWQ7IDAgaWdub3JlZDsgMCBtZWFzdXJlZDsgMCBmaWx0ZXJlZCBvdXQ7IGZpbmlzaGVkIGluIDAuMDBzCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtoMiZndDtDb25uZWN0aW5nIHRoZSBSdXN0IGFwcGxpY2F0aW9uIHRvIENpcmNsZUNJJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGJlZ2luIHRoZSB0ZXN0IGF1dG9tYXRpb24gcHJvY2VzcyBmb3IgeW91ciBSdXN0IHByb2plY3QsIHlvdSBuZWVkIHRvICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9wdXNoaW5nLWEtcHJvamVjdC10by1naXRodWIvJnF1b3Q7Jmd0O3B1c2ggdGhlIHByb2plY3QgdG8gR2l0SHViJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOZXh0LCBnbyB0byB0aGUgUHJvamVjdHMgcGFnZSBvbiB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2FwcC5jaXJjbGVjaS5jb20vcHJvamVjdHMmcXVvdDsmZ3Q7Q2lyY2xlQ0kgZGFzaGJvYXJkJmx0Oy9hJmd0Oy4gU2VsZWN0IHRoZSBhcHByb3ByaWF0ZSBHaXRIdWIgYWNjb3VudCBhbmQgYWRkIHRoZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0FkZCBQcm9qZWN0IC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtBZGQgQ29uZmlnIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYWRkLWNvbmZpZy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1hZGQtY29uZmlnLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWFkZC1jb25maWcucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O09uIHRoZSBzZXR1cCBwYWdlLCBjbGljayAmbHQ7c3Ryb25nJmd0O1VzZSBFeGlzdGluZyBDb25maWcmbHQ7L3N0cm9uZyZndDsgdG8gaW5kaWNhdGUgdGhhdCB5b3UgYXJlIHNldHRpbmcgdXAgYSBjb25maWd1cmF0aW9uIGZpbGUgbWFudWFsbHkgYW5kIG5vdCB1c2luZyB0aGUgc2FtcGxlIGRpc3BsYXllZC4gTmV4dCwgeW91IGdldCBhIHByb21wdCB0byBlaXRoZXIgZG93bmxvYWQgYSBjb25maWd1cmF0aW9uIGZpbGUgZm9yIHRoZSBwaXBlbGluZSBvciB0byBzdGFydCBidWlsZGluZy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7QnVpbGQgUHJvbXB0IC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1zdGFydC1idWlsZGluZy1wcm9tcHQucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsuIFRoaXMgYnVpbGQgd2lsbCBmYWlsIGJlY2F1c2UgeW91IGhhdmUgbm90IHNldCB1cCB5b3VyIGNvbmZpZ3VyYXRpb24gZmlsZSB5ZXQuIFdlIHdpbGwgYnVpbGQgdGhpcyBmaWxlIGluIHRoZSBuZXh0IHN0ZXAuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0F1dG9tYXRpbmcgdGVzdHMgZm9yIHRoZSBSdXN0IGFwcGxpY2F0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RpbWUgdG8gd3JpdGUgdGhlIGNvbnRpbnVvdXMgaW50ZWdyYXRpb24gc2NyaXB0IHRoYXQgd2lsbCBhdXRvbWF0ZSB0aGUgcnVubmluZyBvZiB0ZXN0cyBpbiB0aGUgcHJvamVjdCBhbnkgdGltZSB1cGRhdGVzIGFyZSBwdXNoZWQgdG8gdGhlIHJlbW90ZSBjb2RlIHJlcG9zaXRvcnkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QXQgdGhlIHJvb3Qgb2YgeW91ciBwcm9qZWN0LCBjcmVhdGUgYSBmb2xkZXIgbmFtZWQgJmx0O2NvZGUmZ3Q7LmNpcmNsZWNpJmx0Oy9jb2RlJmd0OyBhbmQgYWRkIGEgZmlsZSBuYW1lZCAmbHQ7Y29kZSZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OyB0byBpdC4gSW5zaWRlICZsdDtjb2RlJmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7LCBlbnRlciB0aGlzIGNvZGU6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDt2ZXJzaW9uOiAyLjEKCmpvYnM6CiAgYnVpbGQ6CiAgICBkb2NrZXI6CiAgICAgIC0gaW1hZ2U6IGNpbWcvcnVzdDoxLjUwLjAKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0gcnVuOiBjYXJnbyAtLXZlcnNpb24KICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBSdW4gVGVzdHMKICAgICAgICAgIGNvbW1hbmQ6ICZxdW90O2NhcmdvIHRlc3QmcXVvdDsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7VGhpcyBjb2RlIHB1bGxzIGluIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RldmVsb3Blci9pbWFnZXMvaW1hZ2UvY2ltZy9ydXN0JnF1b3Q7Jmd0O0NpcmNsZUNJIFJ1c3QgaW1hZ2UmbHQ7L2EmZ3Q7ICZsdDtjb2RlJmd0O2NpbWcvcnVzdDoxLjUwLjAmbHQ7L2NvZGUmZ3Q7LiBUaGlzIGltYWdlIGdpdmVzIHlvdSBhY2Nlc3MgdG8gYWxsIENMSSBjb21tYW5kcyBhdmFpbGFibGUgZm9yIGEgUnVzdCBpbnN0YWxsYXRpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIGNvZGUgaXMgdGhlbiBwdWxsZWQgZnJvbSB0aGUgcmVtb3RlIHJlcG9zaXRvcnkgYW5kIHRoZSBzdGVwIGxhYmVsbGVkICZsdDtjb2RlJmd0O1J1biBUZXN0cyZsdDsvY29kZSZndDsgdXNlcyB0aGUgJmx0O2NvZGUmZ3Q7Y2FyZ28gdGVzdCZsdDsvY29kZSZndDsgY29tbWFuZCB0byBydW4gdGVzdHMgY29udGFpbmVkIGluIHRoZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0O0NvbW1pdCBhbGwgY2hhbmdlcyB0byB0aGUgcHJvamVjdCBhbmQgcHVzaCB0byB5b3VyIHJlbW90ZSBHaXRIdWIgcmVwb3NpdG9yeS4gVGhlIGludGVncmF0aW9uIHBpcGVsaW5lIGlzIHRyaWdnZXJlZCwgYW5kIHlvdSBzaG91bGQgaGF2ZSBhIHN1Y2Nlc3NmdWwgYnVpbGQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtCdWlsZCBTdWNjZXNzZnVsIC0gQ2lyY2xlQ0kmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctYnVpbGQtc3VjY2Vzc2Z1bC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy1idWlsZC1zdWNjZXNzZnVsLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LWJ1aWxkLXN1Y2Nlc3NmdWwucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrIHRoZSBidWlsZCBqb2IgZm9yIGRldGFpbHMgYWJvdXQgdGhlIGRlcGxveW1lbnQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy10ZXN0LWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0J1aWxkIERldGFpbHMgLSBDaXJjbGVDSSZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy10ZXN0LWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTQ0OSA0NDl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXRlc3QtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctdGVzdC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXRlc3QtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctdGVzdC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXRlc3QtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy10ZXN0LWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXRlc3QtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy10ZXN0LWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctdGVzdC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NzkgNzc5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wMy0xNy10ZXN0LWRldGFpbHMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctdGVzdC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXRlc3QtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzUwIDc1MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDMtMTctdGVzdC1kZXRhaWxzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTAzLTE3LXRlc3QtZGV0YWlscy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93LCBlYWNoIHRpbWUgeW91IGNoYW5nZSB5b3VyIGNvZGUsIGVpdGhlciBieSBhZGRpbmcgbW9yZSBmZWF0dXJlcyBvciBtb3JlIHRlc3RzLCBhbmQgdGhlbiBwdXNoIHRvIHlvdXIgcmVtb3RlIHJlcG9zaXRvcnksIHlvdXIgdGVzdHMgd2lsbCBhdXRvbWF0aWNhbGx5IHJ1bi4gWW91IHdpbGwgYmUgYWxlcnRlZCBpZiB5b3VyIGJ1aWxkIGZhaWxlZCBkdWUgdG8gYSBicm9rZW4gcGllY2Ugb2YgY29kZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtTbW9vdGghJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NvbmNsdXNpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7SW4gdGhpcyB0dXRvcmlhbCwgeW91IGhhdmUgbGVhcm5lZCBhbmQgZGVtb25zdHJhdGVkIGhvdyB0byBhdXRvbWF0ZSB0ZXN0cyBpbiB5b3VyIFJ1c3QgcHJvamVjdHMgdXNpbmcgYSBjb250aW51b3VzIGludGVncmF0aW9uIHBpcGVsaW5lLiBUbyBleHBhbmQgeW91ciBrbm93bGVkZ2UsIGxlYXJuIGhvdyB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvcnVzdC1jZC8mcXVvdDsmZ3Q7Y29udGlub3VzbHkgZGVwbG95IFJ1c3QgYXBwbGljYXRpb25zJmx0Oy9hJmd0Oy4gRnJvbSBzdGFydCB0byBmaW5pc2gsIHlvdSBjYW4gaW5jcmVhc2UgdGhlIHZhbHVlIG9mIFJ1c3QgZm9yIHlvdXIgdGVhbSBzbyB5b3UgY2FuIGJ1aWxkIGJldHRlciBhcHBzLCBmYXN0ZXIuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SGFwcHkgY29kaW5nISZsdDsvcCZndDsKCiZsdDtociAvJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL2NvZGVyb25mbGVlaz9sYW5nPWVuJnF1b3Q7Jmd0O0Zpa2F5byBBZGVwb2p1Jmx0Oy9hJmd0OyBpcyBhIEZ1bGwtc3RhY2sgZGV2ZWxvcGVyLCB0ZWNobmljYWwgd3JpdGVyLCBhbmQgdGVjaCBjb250ZW50IGNyZWF0b3IgcHJvZmljaWVudCBpbiBXZWIgYW5kIE1vYmlsZSB0ZWNobm9sb2dpZXMgYW5kIERldk9wcyB3aXRoIG92ZXIgMTAgeWVhcnMgZXhwZXJpZW5jZSBkZXZlbG9waW5nIHNjYWxhYmxlIGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9ucy4gV2l0aCBvdmVyIDQwIGFydGljbGVzIHdyaXR0ZW4gZm9yIENpcmNsZUNJLCBUd2lsaW8sIEF1dGgwLCBhbmQgVGhlIE5ldyBTdGFjayBibG9ncyBhbmQgYWxzbyBvbiBoaXMgcGVyc29uYWwgTWVkaXVtIHBhZ2UsIGhlIGxvdmVzIHRvIHNoYXJlIGhpcyBrbm93bGVkZ2UgdG8gYXMgbWFueSBkZXZlbG9wZXJzIGFzIHdvdWxkIGJlbmVmaXQgZnJvbSBpdC4gWW91IGNhbiBhbHNvIGNoZWNrIG91dCBoaXMgdmlkZW8gY291cnNlcyBvbiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd3d3LnVkZW15LmNvbS91c2VyL2Zpa2F5by1hZGVwb2p1LyZxdW90OyZndDtVZGVteSZsdDsvYSZndDsuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5Ib3cgdG8gc2VsbCB5b3VyIG1hbmFnZXIgb24gQ0kvQ0Q8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvaG93LXRvLXNlbGwteW91ci10ZWFtLW9uLWNpLWNkLzwvbGluaz4KICAgICAgICA8cHViRGF0ZT5GcmksIDMwIEp1bCAyMDIxIDA2OjAwOjAwIC0wNzAwPC9wdWJEYXRlPgogICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJ0cnVlIj5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2hvdy10by1zZWxsLXlvdXItdGVhbS1vbi1jaS1jZC88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5MaW5kYSBCeXJuZTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDtDb250aW51b3VzIGludGVncmF0aW9uIHNlZW1zIGxpa2UgYSBzbWFydCBjaG9pY2UsIHJpZ2h0PyBXaHkgd291bGQgYW55b25lIHRoaW5rIHRoYXQgaW50ZWdyYXRpbmcgeW91ciBjb2RlIGludG8gdGhlIHByb2R1Y3QgYXMgc29vbiBhcyBwb3NzaWJsZSBpcyBhIGJhZCBpZGVhPyZsdDsvcCZndDsKCiZsdDtwJmd0O0xldCBtZSB0YWtlIHlvdSBiYWNrIHRvIEF1Z3VzdCAyMDAwLCB3aGVuIGEgZnJlc2gtZmFjZWQgeW91bmcgZW5naW5lZXIgd2FzIHN0YXJ0aW5nIGhlciBmaXJzdCBlbmdpbmVlcmluZyByb2xlLiBTaGUgd2FzIGdpdmVuIGEgZGVzaywgYSBjb21wdXRlciwgYW5kIGEgZGV0YWlsZWQgcHJvamVjdCBwbGFuIHRoYXQgaW5jbHVkZWQgYSByZWxlYXNlIGRhdGUgdGhyZWUgbW9udGhzIGluIHRoZSBmdXR1cmUuIEFzIHNoZSB3YXMgd3JpdGluZyB0aGUgY29kZSwgdGhlIFFBIGVuZ2luZWVycyB3ZXJlIGJ1c3kgd3JpdGluZyB1cCB0ZXN0IHBsYW5zIGluIHByZXBhcmF0aW9uIGZvciBhIHJlbGVhc2UgY2FuZGlkYXRlIHRvIGJlIHJlYWR5LiZsdDsvcCZndDsKCiZsdDtwJmd0O0FmdGVyIGZvdXIgbW9udGhzIG9mIGhhcmQgd29yaywgdGhlIGVuZ2luZWVyIGFuZCBoZXIgdGVhbSBzZW50IHRoZWlyIGNvZGUgdG8gdGhlIENELVJPTSBmYWN0b3J5IHRoYXQgd291bGQgcHJpbnQgQ0QtUk9NcyB0byBzZW5kIHRvIGN1c3RvbWVycy4gTWFueSBjdXN0b21lcnMgd2VyZSBlYWdlcmx5IHdhaXRpbmcgZm9yIHRoaXMgbmV3IHZlcnNpb24gb2YgdGhlIHNvZnR3YXJlLiBJdCBoYWQgYmVlbiBlaWdodCBtb250aHMgc2luY2UgdGhlIGxhc3QgdXBkYXRlLCBhbmQgdGhlIGJ1ZyB0aGV5IHJlcG9ydGVkIHNpeCBtb250aHMgYWdvIHdhcyBzdGFydGluZyB0byBpcmsgdGhlbS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgc3RvcnkgYWJvdmUgaXMgYSAobW9zdGx5KSB0cnVlIGFjY291bnQgb2YgbXkgaW50cm9kdWN0aW9uIHRvIHNvZnR3YXJlIGVuZ2luZWVyaW5nLiBBdCB0aGUgdGltZSwgdGhlIGNvc3Qgb2YgdXBkYXRpbmcgdGhlIHNvZnR3YXJlIHdhcyBodWdlLiBJdCBpbnZvbHZlZCBsb25nIHRlc3RpbmcgY3ljbGVzIGFuZCBhIGxvdCBvZiBoYXJkIHdvcmsgdG8gbWFrZSB0aGUgZG9jdW1lbnRhdGlvbiBhY2N1cmF0ZSDigJQgc2NyZWVuc2hvdHMgY291bGQgcXVpY2tseSBiZWNvbWUgb3V0IG9mIGRhdGUgYnV0IHRoZSBkb2N1bWVudGF0aW9uIGNvdWxkbuKAmXQgYmUgdXBkYXRlZCBhZnRlciB0aGUgc29mdHdhcmUgaGFkIGFscmVhZHkgYmVlbiByZWxlYXNlZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtNYWtpbmcgYSBjaGFuZ2UgdG8gYSBwcm9kdWN0IHdhcyBoYXJkIGFuZCB0aGUgY29zdCBvZiBtYWtpbmcgYSBtaXN0YWtlIHdhcyBoaWdoLiZsdDsvcCZndDsKCiZsdDtoMiZndDtUaGUgQ0kvQ0QgZGlmZmVyZW50aWF0b3ImbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VG9kYXksIHRoaW5ncyBhcmUgdmVyeSBkaWZmZXJlbnQsIGxhcmdlbHkgdGhhbmtzIHRvIGNvbnRpbnVvdXMgaW50ZWdyYXRpb24gYW5kIGNvbnRpbnVvdXMgZGVsaXZlcnkgKENJL0NEKS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtJdOKAmXMgaGFyZCB0byBvdmVyc3RhdGUgdGhlIHBvd2VyZnVsIGltcGFjdCBvZiBiZWluZyBhYmxlIHRvIG1ha2UgY2hhbmdlcyBpbiB0aGUgcHJvZHVjdCBhcyBzb29uIGFzIHRoZXkgYXJlIHJlYWR5LiBUaGUgZmVlZGJhY2sgbG9vcCBiZXR3ZWVuIGVuZ2luZWVycyBhbmQgY3VzdG9tZXJzIGlzIG11Y2ggc2hvcnRlciwgYW5kIGFzIGVuZ2luZWVycywgd2UgY2FuIHJlc3BvbmQgdG8gY3VzdG9tZXIgZmVlZGJhY2sgaW4gYSB3YXkgdGhhdCBwdXRzIHRoZSBjdXN0b21lciBmaXJzdC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtMb3dlcmluZyB0aGUgY29zdCBvZiBkZWxpdmVyaW5nIGNoYW5nZXMgdG8gdGhlIGN1c3RvbWVyIG1lYW5zIHRoYXQgd2UgY2FuIHF1aWNrbHkgcm9sbCBiYWNrIGFueSBlcnJvcnMgd2XigJl2ZSBpbnRyb2R1Y2VkLiBJdCBhbHNvIG1lYW5zIGhhdmluZyBhIGxvdCBtb3JlIGNvbmZpZGVuY2UgaW4gZGVsaXZlcmluZyBjaGFuZ2VzIHRoYXQgbWlnaHQgaGF2ZSBzZWVtZWQgcmlza3kgYmVmb3JlLiBJbnRyb2R1Y2luZyBjaGFuZ2VzIG9uZSBhdCBhIHRpbWUgYWxzbyBoZWxwcyBhdm9pZCB0aG9zZSBoYXJkLXRvLWRldGVjdCBlcnJvcnMgdGhhdCBjb21lIGZyb20gcHVzaGluZyB0d28gZmVhdHVyZXMgdG9nZXRoZXIgYXQgdGhlIGxhc3QgbWludXRlLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBmYWN0IHRoYXQgeW91IGNhbiBhY2hpZXZlIGEgaGlnaGVyIHF1YWxpdHkgcHJvZHVjdCBieSBjb250aW51b3VzbHkgbWFraW5nIGNoYW5nZXMgbWlnaHQgc2VlbSBjb3VudGVyaW50dWl0aXZlIGJ1dCBpbiByZWFsaXR5LCBpdOKAmXMgdGhlIG9ubHkgd2F5IHRvIGltcHJvdmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7U28sIHdoYXQgZG8geW91IHNheSB0byBhIG1hbmFnZXIgd2hvIGlzIHNrZXB0aWNhbCBvZiBDSS9DRD8gSGVyZSBhcmUgc29tZSBwb3RlbnRpYWwgYW5zd2VycyB0byBxdWVzdGlvbnMgdGhhdCB5b3VyIG1hbmFnZXIgbWF5IGFzazombHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7V2hhdCBpcyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2NvbnRpbnVvdXMtaW50ZWdyYXRpb24vJnF1b3Q7Jmd0O2NvbnRpbnVvdXMgaW50ZWdyYXRpb24mbHQ7L2EmZ3Q7PyZsdDsvaDImZ3Q7CgombHQ7cCZndDtDYXJlZnVsIG5vdCB0byBzY2FyZSB5b3VyIG1hbmFnZXIgaGVyZSBieSBzYXlpbmcgc29tZXRoaW5nIGFsb25nIHRoZSBsaW5lcyBvZiDigJxwdXR0aW5nIGNvZGUgaW50byBwcm9kdWN0aW9uIGFzIGZhc3QgYXMgaHVtYW5seSBwb3NzaWJsZSHigJ0mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIGNvdWxkIGJlIHJlYWQgYXMgcHV0dGluZyB1bmZpbmlzaGVkIG9yIGJyb2tlbiBmZWF0dXJlcyBpbiBmcm9udCBvZiBjdXN0b21lcnMsIHdoaWNoIGlzIG5vdCB0aGUgY2FzZSBhdCBhbGwuIEEgZ29vZCBhbnN3ZXIgY291bGQgYmUgc29tZXRoaW5nIGFsb25nIHRoZSBsaW5lcyBvZiwg4oCcJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9jb250aW51b3VzLWludGVncmF0aW9uLyZxdW90OyZndDtjb250aW51b3VzIGludGVncmF0aW9uJmx0Oy9hJmd0OyBpcyBicmVha2luZyBvdXIgd29yayB1cCBpbnRvIHNtYWxsIHBpZWNlcywgc2hhcmluZyBvdXIgd29yayB3aXRoIG91ciBwZWVycywgYW5kIFFBLWluZyBmcmVxdWVudGx5LuKAnSZsdDsvcCZndDsKCiZsdDtoMiZndDtXaGF0IGRvZXMgQ0kvQ0QgY29zdD8mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhlIGNvc3QgdG8gbW92ZSB0byBDSS9DRCBkZXBlbmRzIG9uIGhvdyBtdWNoIHlvdeKAmXJlIHdpbGxpbmcgdG8gaW52ZXN0IGluIGdyZWF0IGF1dG9tYXRlZCB0ZXN0aW5nLiBCZWNhdXNlIG9mIHRoYXQsIHRoZSBjb3N0IHZhcmllcyBkZXBlbmRpbmcgb24gaG93IGZhciBhbG9uZyB5b3UgYXJlIGluIHlvdXIgdGVzdGluZyBqb3VybmV5LiBJZiB5b3XigJlyZSBkb2luZyBtb3N0IG9yIGFsbCBvZiB5b3VyIHRlc3RpbmcgbWFudWFsbHksIHRoZSBjb3N0IG1heSBiZSBoaWdoZXIgdGhhbiBpZiB5b3UgaGF2ZSBhIHJpY2ggc3VpdGUgb2YgYXV0b21hdGVkIHRlc3RzIGluY2x1ZGluZyBlbmQtdG8tZW5kIHRlc3RzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0l04oCZcyBlYXN5IHRvIG1ha2UgYSBjYXNlIGZvciBpbnZlc3RtZW50IGluIGF1dG9tYXRlZCB0ZXN0aW5nLiBSdW5uaW5nIGF1dG9tYXRlZCB0ZXN0cyBvbiBhIENJIHRvb2wgY29zdHMgZmFyIGxlc3MgYW5kIGlzIG1vcmUgcmVsaWFibGUgdGhhbiBwYXlpbmcgYW4gZW5naW5lZXIgdG8gZG8gdGhlIHNhbWUgdGhpbmcuIEJlIGF3YXJlIHRob3VnaCB0aGF0IHlvdeKAmXJlIGFza2luZyB5b3VyIG1hbmFnZXIgdG8gb2Zmc2V0IHRoaXMgdmFsdWUgYWdhaW5zdCBmZWF0dXJlIGRlbGl2ZXJ5LCB3aGljaCBjYW4gYmUgYSBoYXJkIGRlY2lzaW9uLiBFeHBlY3QgdGhhdCB5b3VyIG1hbmFnZXIgd2lsbCB3YW50IHRvIGFkZCBhdXRvbWF0ZWQgdGVzdGluZyBpbmNyZW1lbnRhbGx5IGFuZCBwb3RlbnRpYWxseSBhZGQgYSBtYW51YWwgUUEgc3RlcCBiZWZvcmUgZGVwbG95bWVudCDigJQgYSBzdGVwIG1hbnkgdGVhbXMgaGF2ZSB0YWtlbiBpbiBvcmRlciB0byBhY2hpZXZlIENJL0NELiZsdDsvcCZndDsKCiZsdDtwJmd0O0xpZmUgUHJvIFRpcDogaWYgeW91ciBtYW5hZ2VyIGFza3MgeW91IGFib3V0IHRoZSBwcmljZSBvZiBDSS9DRCBhbmQgeW91IGFuc3dlciB3aXRoIGhvdyBtYW55IHF1YXJ0ZXJzIGl0IHdpbGwgY29zdCB0aGUgdGVhbSwgdGhleSB3aWxsIHRha2UgeW91IG11Y2ggbW9yZSBzZXJpb3VzbHkuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1doYXQgYXJlIHRoZSBiZW5lZml0cyBvZiBpbnZlc3RpbmcgaW4gQ0kvQ0Q/Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O1doaWxlIEnigJltIHN1cmUgdGhhdCBldmVyeSBtYW5hZ2VyIGlzIGludmVzdGVkIGluIHRoZSBoYXBwaW5lc3Mgb2YgdGhlaXIgZW5naW5lZXJzIOKAlCBJIGtub3cgSSBhbSDigJQgdmVyeSBmZXcgbWFuYWdlcnMgY2FuIGFmZm9yZCB0byBkZWRpY2F0ZSBhIHNpZ25pZmljYW50IGFtb3VudCBvZiB0aW1lIGV4Y2x1c2l2ZWx5IHRvIG1ha2luZyB0aGVpciBlbmdpbmVlcnMgaGFwcHkuIFllcywgQ0kvQ0QgaXMgYSBncmVhdCBpbnZlc3RtZW50IGJlY2F1c2UgaXQgbWFrZXMgeW91ciBkZXZlbG9wZXLigJlzIGpvYiBtb3JlIGVuam95YWJsZSwgYnV0IGVuZ2luZWVyIGhhcHBpbmVzcyBpcyBzaW1wbHkgYSBzaWRlLWVmZmVjdCBvZiBhIGdyZWF0IGJ1c2luZXNzIGRlY2lzaW9uLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZXJlIGFyZSBhbHNvIG1hbnkgYmVuZWZpdHMgb2YgQ0kvQ0QgdGhhdCBnbyBiZXlvbmQgZW5naW5lZXIgaGFwcGluZXNzIGFuZCB0cnVseSBqdXN0aWZ5IHRoZSBpbnZlc3RtZW50LiZsdDsvcCZndDsKCiZsdDtvbCZndDsKICAmbHQ7bGkmZ3Q7SXQgaXMgbXVjaCBlYXNpZXIgZm9yIG1vcmUgdGhhbiBvbmUgdGVhbSBtZW1iZXIgdG8gd29yayBvbiB0aGUgc2FtZSBmZWF0dXJlLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1RoZSBjb3N0IG9mIG1lcmdpbmcgc21hbGwgY2hhbmdlcyBpcyBtdWNoIGxvd2VyIHRoYW4gbGFyZ2UgY2hhbmdlcy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtUZWFtIG1lbWJlcnMgY2FuIGV2YWx1YXRlIHRoZWlyIHBlZXLigJlzIGNoYW5nZXMgaW4gYSBzeXN0ZW0gdGhhdCBoYXMgcGFzc2VkIGF1dG9tYXRlZCB0ZXN0aW5nIHJhdGhlciB0aGFuIHRoZSBtb3ZpbmcgdGFyZ2V0IG9mIGEgZmVhdHVyZSBicmFuY2guJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7SXQgaXMgbXVjaCBlYXNpZXIgZm9yIFFBIGVuZ2luZWVycyB0byB2YWxpZGF0ZSBzbWFsbCBjaGFuZ2VzIGl0ZXJhdGl2ZWx5IGluIGEgY29uc2lzdGVudCBzeXN0ZW0sIHNvIGRldGVjdGluZyB0aGUgc291cmNlIG9mIGVycm9ycyBiZWNvbWVzIG11Y2ggc2ltcGxlci4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtGZWF0dXJlcyBjYW4gZ2V0IGludG8gdGhlIGhhbmRzIG9mIGN1c3RvbWVycyBpbiBhbiBlYXJsaWVyIHN0YXRlLiBUaGlzIG1lYW5zIHRoYXQgaWYgd2XigJlyZSBvbiB0aGUgd3JvbmcgdHJhY2ssIHdlIGNhbiBjaGFuZ2UgZGlyZWN0aW9uIGFmdGVyIG9ubHkgYSBzbWFsbCBpbnZlc3RtZW50LiZsdDsvbGkmZ3Q7CiZsdDsvb2wmZ3Q7CgombHQ7aDImZ3Q7QWxpZ24gd2l0aCBsZWFkZXJzaGlwIHZhbHVlcyB0byBnZXQgYSDigJh5ZXPigJkgb24gQ0kvQ0QmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7QXMgZW5naW5lZXJzLCB3ZSBrbm93IHRoYXQgQ0kvQ0QgbWFrZXMgc2Vuc2UuIEl0IG1lYW5zIHRoYXQgY29kZSBxdWFsaXR5IGlzIGhpZ2hlciBhbmQgZmVhdHVyZXMgYXJlIGRlbGl2ZXJlZCBmYXN0ZXIuIEl0IGludHJvZHVjZXMgYSBjb25maWRlbmNlIGluIG91ciBwcm9kdWN0aW9uIGNvZGUgdGhhdCBkb2VzbuKAmXQgZXhpc3Qgd2hlbiBmZWF0dXJlcyBhcmUgaW50ZWdyYXRlZCBhbmQgZGVsaXZlcmVkIGxvbmcgYWZ0ZXIgdGhleeKAmXJlIHdyaXR0ZW4uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gc29tZSBtYW5hZ2VycywgdGhpcyBjYW4gZmVlbCB1bmludHVpdGl2ZS4gSW4gb3JkZXIgdG8gZ2V0IHlvdXIgbWFuYWdlciBvbiBib2FyZCB3aXRoIENJL0NELCB5b3XigJlsbCBuZWVkIHRvIHVzZSB0aGUgbGFuZ3VhZ2UgYW5kIGlkZWFzIHRoYXQgYWxpZ24gd2l0aCB0aGVpciB2YWx1ZXMuIEkgaG9wZSB0aGlzIGFydGljbGUgY2FuIHByb3ZpZGUgYSBnb29kIHN0YXJ0aW5nIHBvaW50LiZsdDsvcCZndDsKCjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPlNlY3VyaXR5IHNjYW5zIHdpdGggU255ayBpbiBhIENpcmNsZUNJIHdvcmtmbG93PC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL3NlY3VyaXR5LXdpdGgtc255ay1pbi10aGUtY2lyY2xlY2ktd29ya2Zsb3cvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPlRodSwgMjkgSnVsIDIwMjEgMDQ6MjA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvc2VjdXJpdHktd2l0aC1zbnlrLWluLXRoZS1jaXJjbGVjaS13b3JrZmxvdy88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5Ub23DoXMgR29uemFsZXo8L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7VG9kYXnigJlzIGFwcGxpY2F0aW9ucyBhcmUgYnVpbHQgdXNpbmcgbW9kZXJuIERldk9wcyBwcm9jZXNzZXMsIHdpdGggZnJlcXVlbnQgaW50ZWdyYXRpb24gYW5kIGRlcGxveW1lbnRzIHNldmVyYWwgdGltZXMgYSBkYXkuIFRvIGVuYWJsZSBwYWNlIGFuZCBzY2FsZSwgYXBwbGljYXRpb24gc2VjdXJpdHkgbXVzdCBzdGFydCB3aXRoIGRldmVsb3BlcnMsIHdpdGggc2VjdXJpdHkgdGVhbXMgbW92aW5nIGZyb20gYW4gYXVkaXQgYW5kIGdhdGUgZnVuY3Rpb24gdG8gYW4gZW1wb3dlcmluZyBhbmQgZ292ZXJuaW5nIHJvbGUuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1NlY3VyaW5nIGNsb3VkLW5hdGl2ZSBhcHBsaWNhdGlvbnMmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7QXBwbGljYXRpb25zIGhhdmUgY2hhbmdlZCBhcyBjbG91ZC1uYXRpdmUgdGVjaG5vbG9naWVzIGxpa2UgY29udGFpbmVycywgS3ViZXJuZXRlcywgYW5kIFRlcnJhZm9ybSBoYXZlIHJlcGxhY2VkIGluZnJhc3RydWN0dXJlIHdpdGggY29kZS4gVGhlc2UgZWxlbWVudHMgYXJlIG5vdyBidWlsdCBhbmQgY3VzdG9taXplZCBieSBkZXZlbG9wZXJzIGFuZCBsaXZlIGluIHRoZWlyIHJlcG9zaXRvcmllcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtTZWN1cmluZyBjbG91ZC1uYXRpdmUgYXBwbGljYXRpb25zIHJlcXVpcmVzIHNoaWZ0aW5nIHRoZSBvd25lcnNoaXAgb2YgdGhlc2UgYXBwbGljYXRpb24gY29tcG9uZW50cywgdHJhZGl0aW9uYWxseSBwYXJ0IG9mIElUIHNlY3VyaXR5LCBpbnRvIHRoZSBhcHBsaWNhdGlvbiBzZWN1cml0eSBtb2RlbC4gQXMgZGV2ZWxvcGVycyB0YWtlIG93bmVyc2hpcCBvZiB0aGUgZmlyc3Qgc3RlcHMgaW4gc2VjdXJpdHksIHNlY3VyaXR5IHRlc3RpbmcgdG9vbHMgdGhhdCBpbnRlZ3JhdGUgaW50byB0aGVpciB3b3JrZmxvd3MgYW5kIHByZXNlbnQgaW5mb3JtYXRpb24gaW4gYSBkZXZlbG9wZXItZnJpZW5kbHkgd2F5IGJlY29tZSBlc3NlbnRpYWwgdG8gdGhlaXIgcHJvZHVjdGl2aXR5LiZsdDsvcCZndDsKCiZsdDtoMiZndDtHZXR0aW5nIHN0YXJ0ZWQgd2l0aCBTbnlrJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7VGhlIFNueWsgb3JiIG1ha2VzIGl0IGVhc3kgZm9yIERldlNlY09wcyB0ZWFtcyB0byBpbnRlZ3JhdGUgdGVzdGluZyBpbnRvIENpcmNsZUNJIHdvcmtmbG93cy4gV2l0aCB0aGUgU255ayBvcmIsIHlvdSBjYW4gaW5zdGFsbCwgcnVuIHRlc3RzLCBhbmQgbW9uaXRvciBwcm9qZWN0cyB3aXRoIFNueWsuIFlvdSBjYW4gYWxzbyBzZXQgYSB0aHJlc2hvbGQgZm9yIGZhaWxpbmcgYnVpbGRzLCBkZXBlbmRpbmcgb24geW91ciByaXNrIHRvbGVyYW5jZS4gU2NhbiByZXN1bHRzIHByZXNlbnQgY2xlYXIgaW5mb3JtYXRpb24gdG8gaGVscCBkZXZlbG9wZXJzIHF1aWNrbHkgbWFrZSBzZW5zZSBvZiB0aGUgaXNzdWVzIGFuZCBhbnkgYXZhaWxhYmxlIGZpeGVzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIHRoaXMgdHV0b3JpYWwsIHdlIHVzZSB0aGUgU255ayBvcmIgdG8gZGVtb25zdHJhdGUgaG93IHRvIHByZXZlbnQgdnVsbmVyYWJpbGl0aWVzIGZyb20gcGFzc2luZyB0aHJvdWdoIHRoZSBidWlsZCBwcm9jZXNzIGJ5IGFkZGluZyBhdXRvbWF0ZWQgU255ayB0ZXN0cyBpbnRvIGEgQ2lyY2xlQ0kgd29ya2Zsb3cuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O1ByZXJlcXVpc2l0ZXMmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7VG8gZm9sbG93IHRoaXMgdHV0b3JpYWwsIHlvdSB3aWxsIG5lZWQ6Jmx0Oy9wJmd0OwombHQ7b2wmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9zaWdudXAvJnF1b3Q7Jmd0O0NpcmNsZUNJJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9zaWdudXAmcXVvdDsmZ3Q7R2l0SHViJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vYXBwLnNueWsuaW8vbG9naW4/dXRtX2NhbXBhaWduPVR1dG9yaWFsLUJsb2ctSnVsMjEmYW1wO2FtcDt1dG1fbWVkaXVtPVBhcnRuZXImYW1wO2FtcDt1dG1fc291cmNlPUNpcmNsZUNJJnF1b3Q7Jmd0O1NueWsmbHQ7L2EmZ3Q7IGFjY291bnQmbHQ7L2xpJmd0OwombHQ7L29sJmd0OwoKJmx0O3AmZ3Q7WW91IG5lZWQgYSBTbnlrIEFQSSB0b2tlbiB0byB1c2UgdGhlIFNueWsgb3JiLiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vc3VwcG9ydC5zbnlrLmlvL2hjL2VuLXVzL2FydGljbGVzLzM2MDAwNDAwODI3OC1SZXZva2luZy1hbmQtcmVnZW5lcmF0aW5nLVNueWstQVBJLXRva2VucyZxdW90OyZndDtDcmVhdGUgYSBTbnlrIHRva2VuJmx0Oy9hJmd0OywgdGhlbiAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL2Vudi12YXJzLyNzZXR0aW5nLWFuLWVudmlyb25tZW50LXZhcmlhYmxlLWluLWEtcHJvamVjdCZxdW90OyZndDtzZXQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUgaW4gQ2lyY2xlQ0kmbHQ7L2EmZ3Q7IGNhbGxlZCAmbHQ7Y29kZSZndDtTTllLX1RPS0VOJmx0Oy9jb2RlJmd0OyB3aXRoIGl0cyB2YWx1ZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIHR1dG9yaWFsIG1ha2VzIHRoZSBtb3N0IHNlbnNlIGFmdGVyIHlvdSBoYXZlIGNvbXBsZXRlZCB0aGUgSW5mcmFzdHJ1Y3R1cmUgYXMgQ29kZSBtb2R1bGUgaW4gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2FjYWRlbXkuY2lyY2xlY2kuY29tJnF1b3Q7Jmd0O0NpcmNsZUNJIEFjYWRlbXkmbHQ7L2EmZ3Q7LiBZb3UgY2FuIGNvbXBsZXRlIHRoaXMgdHV0b3JpYWwgd2l0aG91dCBjb21wbGV0aW5nIHRoZSBtb2R1bGUsIGJ1dCB0aGUgVGVycmFmb3JtIHdvcmtmbG93cyB3aWxsIGZhaWwuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0ZvcmsgdGhlIGRlbW8gcHJvamVjdCZsdDsvaDMmZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHR1dG9yaWFsLCB5b3Ugd2lsbCB1c2UgdGhlIHJlcG9zaXRvcnkgZnJvbSB0aGUgQ2lyY2xlQ0kgQWNhZGVteSBtb2R1bGUuIFRoZXJlLCB5b3Ugd2lsbCBjcmVhdGUgYSB3b3JrZmxvdyB0aGF0IHVzZXMgVGVycmFmb3JtIHRvIGNyZWF0ZSBhIEdLRSBjbHVzdGVyIGFuZCBkZXBsb3kgYW4gYXBwbGljYXRpb24gaW50byBpdCBhcyBwYXJ0IG9mIGEgY29udGludW91cyBkZWxpdmVyeSBwaXBlbGluZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtJZiB5b3UgZGlkIG5vdCBjb21wbGV0ZSB0aGUgbW9kdWxlLCBuYXZpZ2F0ZSB0byB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vZGF0YXB1bmt6L2xlYXJuX2lhYyZxdW90OyZndDtMZWFybiBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIHJlcG8mbHQ7L2EmZ3Q7IGFuZCBmb3JrIGl0LiBUaGVuLCBoZWFkIHRvIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vYXBwLmNpcmNsZWNpLmNvbS8mcXVvdDsmZ3Q7Q2lyY2xlQ0kgUHJvamVjdHMmbHQ7L2EmZ3Q7IHBhZ2UsIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDssIHRoZW4gc2VsZWN0ICZsdDtzdHJvbmcmZ3Q7VXNlIEV4aXN0aW5nIENvbmZpZyZsdDsvc3Ryb25nJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7RW5zdXJlIGRlcGVuZGVuY2llcyBhcmUgc2VjdXJlIGFuZCBjb21wbGlhbnQgd2l0aCBTbnlrIE9wZW4gU291cmNlJmx0Oy9oMyZndDsKCiZsdDtwJmd0O0lmIHlvdSBjb21wbGV0ZWQgdGhlIEFjYWRlbXkgbW9kdWxlLCB5b3UgZGVwbG95ZWQgYW4gYXBwbGljYXRpb24gd2l0aCBvcGVuIHNvdXJjZSBjb21wb25lbnRzLCBidXQgeW91IGRpZCBub3QgY2hlY2sgdGhlbSBmb3IgdnVsbmVyYWJpbGl0aWVzLiBJbnRlZ3JhdGluZyBTbnlrIE9wZW4gU291cmNlIGludG8gdGhlIENJIHdvcmtmbG93IG1ha2VzIHNlY3VyaXR5IGFuZCBjb21wbGlhbmNlIHRlc3RpbmcgcGFydCBvZiB0aGUgcGlwZWxpbmUsIGFsbG93aW5nIHlvdSB0byBwcmV2ZW50IGFwcGxpY2F0aW9ucyB3aXRoIHZ1bG5lcmFibGUgZGVwZW5kZW5jaWVzIGZyb20gbWFraW5nIHRoZWlyIHdheSBpbnRvIHByb2R1Y3Rpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gYWRkIFNueWsgT3BlbiBTb3VyY2UsIG9wZW4gdGhlICZsdDtjb2RlJmd0Oy5jaXJjbGVjaS9jb25maWcueW1sJmx0Oy9jb2RlJmd0OyBmaWxlIGluIGFuIGVkaXRvciwgdGhlbiBhZGQgdGhlIFNueWsgb3JiIHRvIHRoZSB0b3AsIHJlcGxhY2luZyAmbHQ7Y29kZSZndDtAeC55LnombHQ7L2NvZGUmZ3Q7IHdpdGggdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RldmVsb3Blci9vcmJzL29yYi9zbnlrL3NueWsmcXVvdDsmZ3Q7U255ayBvcmIgaW4gdGhlIG9yYnMgcmVnaXN0cnkmbHQ7L2EmZ3Q7OiZsdDsvcCZndDsKCiZsdDtwcmUmZ3Q7Jmx0O2NvZGUmZ3Q7dmVyc2lvbjogMi4xCgpvcmJzOgogIHNueWs6IHNueWsvc255a0AxLjAuMQogIApqb2JzOgogIHJ1bl90ZXN0czoKICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvbm9kZToxMgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtBZGRpbmcgdGhlIG9yYiBleHBvc2VzIHRoZSBTbnlrIGNvbW1hbmRzIGFuZCBqb2JzIHRvIHlvdXIgd29ya2Zsb3cuIENvbnNpZGVyIHlvdXIgcmVxdWlyZW1lbnRzIHdoZW4gY2hvb3Npbmcgd2hlcmUgaW4gdGhlIHdvcmtmbG93IHRvIGFkZCB0aGVtLiBGb3IgdGhpcyBleGFtcGxlLCBhZGQgdGhlICZsdDtjb2RlJmd0O3NueWsvc2NhbiZsdDsvY29kZSZndDsgY29tbWFuZCB0byB0aGUgJmx0O2NvZGUmZ3Q7cnVuX3Rlc3RzJmx0Oy9jb2RlJmd0OyBqb2IgdG8gY2hlY2sgZm9yIHZ1bG5lcmFiaWxpdGllcyBhbmQgbGljZW5zZSBpc3N1ZXMgYmVmb3JlIHJ1bm5pbmcgdW5pdCB0ZXN0czombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2pvYnM6CiAgcnVuX3Rlc3RzOgogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9ub2RlOjEyCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IEluc3RhbGwgbnBtIGRlcGVuZGVuY2llcwogICAgICAgICAgY29tbWFuZDogfAogICAgICAgICAgICBucG0gaW5zdGFsbCAtLXNhdmUKICAgICAgLSBzbnlrL3NjYW4KICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBSdW4gVW5pdCBUZXN0cwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtTYXZlIGFuZCBjb21taXQgeW91ciBjaGFuZ2VzLiBXaGVuIHRoZSB3b3JrZmxvdyBydW5zLCB0aGUgJmx0O2NvZGUmZ3Q7cnVuX3Rlc3RzJmx0Oy9jb2RlJmd0OyBqb2IgZmFpbHMgYmVjYXVzZSB0aGUgJmx0O2NvZGUmZ3Q7cGFja2FnZS5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlIGRlY2xhcmVzIHZ1bG5lcmFibGUgZGVwZW5kZW5jaWVzLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktb3BlbnNvdXJjZS1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O09wZW4gU291cmNlIGlzc3VlcyZxdW90OyBzcmNzZXQ9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1vcGVuc291cmNlLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktb3BlbnNvdXJjZS1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTg5OCA4OTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LW9wZW5zb3VyY2UtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xMzQ3IDEzNDd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LW9wZW5zb3VyY2UtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1vcGVuc291cmNlLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1vcGVuc291cmNlLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1vcGVuc291cmNlLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktb3BlbnNvdXJjZS1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktb3BlbnNvdXJjZS1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktb3BlbnNvdXJjZS1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LW9wZW5zb3VyY2UtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTU4IDE1NTh3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LW9wZW5zb3VyY2UtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMzM3IDIzMzd3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LW9wZW5zb3VyY2UtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1vcGVuc291cmNlLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTUwMCAxNTAwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1vcGVuc291cmNlLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjI1MCAyMjUwdyZxdW90OyBzaXplcz0mcXVvdDsobWluLXdpZHRoOiAxMjAwcHgpIDc1MHB4LAoobWluLXdpZHRoOiA5OTJweCkgNzc5cHgsCihtaW4td2lkdGg6IDc2OHB4KSA3MjBweCwKKG1pbi13aWR0aDogNDgwcHgpIDcyMHB4LAoobWluLXdpZHRoOiAwcHgpIDQ0OXB4JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7R29vZCB0aGluZyB5b3UgY2hlY2tlZCEgSG93ZXZlciwgeW91IG1pZ2h0IG5vdCB3YW50IHRvIGludHJvZHVjZSB0b28gbXVjaCBkaXNydXB0aW9uIGludG8geW91ciBwaXBlbGluZXMgdG9vIGVhcmx5LiZsdDsvcCZndDsKCiZsdDtwJmd0O0l0IGlzIHBvc3NpYmxlIHRvIGN1c3RvbWl6ZSB0aGlzIGJlaGF2aW9yIGJ5IHBhc3NpbmcgcGFyYW1ldGVycyB0byB0aGUgb3JiLiBGb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBwYXJhbWV0ZXJzLCB2aWV3IHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RldmVsb3Blci9vcmJzL29yYi9zbnlrL3NueWsmcXVvdDsmZ3Q7U255ayBvcmIgaW4gdGhlIG9yYiByZWdpc3RyeSZsdDsvYSZndDsuIFRvIGFsbG93IHRoZSB3b3JrZmxvdyB0byBjb250aW51ZSB1bmludGVycnVwdGVkLCBhZGQgdGhlICZsdDtjb2RlJmd0O2ZhaWwtb24taXNzdWVzJmx0Oy9jb2RlJmd0OyBwYXJhbWV0ZXIgdG8gdGhlICZsdDtjb2RlJmd0O3NueWsvc2NhbiZsdDsvY29kZSZndDsgY29tbWFuZCBhbmQgY29tbWl0IHlvdXIgY2hhbmdlczombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0Oy0gcnVuOgogICAgICAgICAgbmFtZTogSW5zdGFsbCBucG0gZGVwZW5kZW5jaWVzCiAgICAgICAgICBjb21tYW5kOiB8CiAgICAgICAgICAgIG5wbSBpbnN0YWxsIC0tc2F2ZQogICAgICAtIHNueWsvc2NhbjoKICAgICAgICAgIGZhaWwtb24taXNzdWVzOiBmYWxzZQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IFJ1biBVbml0IFRlc3RzCiAgICAgICAgICBjb21tYW5kOiB8CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsKCiZsdDtwJmd0O05leHQgdGltZSB0aGUgcGlwZWxpbmUgcnVucywgaXQgd2lsbCBzdGlsbCBmaW5kIGlzc3VlcywgYnV0IGl0IHdpbGwgY29udGludWUgdG8gdGhlIG5leHQgam9iLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktcGFzc2VkLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O1Bhc3NlZCBPcGVuIFNvdXJjZSBTY2FuJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LXBhc3NlZC1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz00NDkgNDQ5dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1wYXNzZWQtc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktcGFzc2VkLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktcGFzc2VkLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTcyMCA3MjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LXBhc3NlZC1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LXBhc3NlZC1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LXBhc3NlZC1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1wYXNzZWQtc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1wYXNzZWQtc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1wYXNzZWQtc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9Nzc5IDc3OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktcGFzc2VkLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktcGFzc2VkLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktcGFzc2VkLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc1MCA3NTB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LXBhc3NlZC1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LXBhc3NlZC1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUbyBsZWFybiBob3cgdG8gaW50ZXJwcmV0IHRoZSBDTEkgcmVzdWx0cyB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vc3VwcG9ydC5zbnlrLmlvL2hjL2VuLXVzL2FydGljbGVzLzM2MDAwNjExMzc5OC1SZW1lZGlhdGUteW91ci12dWxuZXJhYmlsaXRpZXMmcXVvdDsmZ3Q7cmVtZWRpYXRlIG9wZW4gc291cmNlIHZ1bG5lcmFiaWxpdGllcyZsdDsvYSZndDssIHZpc2l0IHRoZSBTbnlrIGRvY3VtZW50YXRpb24uJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O1NjYW4gYW5kIHNlY3VyZSBjb250YWluZXIgaW1hZ2VzIHdpdGggU255ayBDb250YWluZXImbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7QmVzaWRlcyB5b3VyIGFwcGxpY2F0aW9uIGRlcGVuZGVuY2llcywgeW91ciBjaG9pY2Ugb2YgY29udGFpbmVyIGJhc2UgaW1hZ2UgY2FuIGFsc28gaW50cm9kdWNlIHZ1bG5lcmFibGUgb3BlbiBzb3VyY2UgY29tcG9uZW50cyBieSBtZWFucyBvZiBvcGVyYXRpbmcgc3lzdGVtIHBhY2thZ2VzIGFuZCBsYW5ndWFnZSBydW50aW1lcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtTbnlrIENvbnRhaW5lciB1c2VzIHRoZSBzYW1lICZsdDtjb2RlJmd0O3NueWsvc2NhbiZsdDsvY29kZSZndDsgY29tbWFuZCB3aXRoIGEgZmV3IHBhcmFtZXRlcnMuIFNpbmNlIHRoZSBpbWFnZSBuZWVkcyB0byBiZSBidWlsdCB0byBzY2FuIGl0LCBhZGQgdGhlIGNvbW1hbmQgdG8gdGhlICZsdDtjb2RlJmd0O2J1aWxkX2RvY2tlcl9pbWFnZSZsdDsvY29kZSZndDsgam9iIGJldHdlZW4gdGhlICZsdDtjb2RlJmd0O2RvY2tlciBidWlsZCZsdDsvY29kZSZndDsgYW5kICZsdDtjb2RlJmd0O2RvY2tlciBwdXNoJmx0Oy9jb2RlJmd0OyBzdGVwcyBieSBicmVha2luZyB1cCB0aGUgZXhpc3RpbmcgY29tbWFuZC4gTm90aWNlIHRoZSB1c2Ugb2YgdGhlICZsdDtjb2RlJmd0O3NldmVyaXR5LXRocmVzaG9sZCZsdDsvY29kZSZndDsgcGFyYW1ldGVyIHRvIHJlcG9ydCBpc3N1ZXMgb2Ygb25seSBoaWdoIG9yIGNyaXRpY2FsIHNldmVyaXR5LiZsdDsvcCZndDsKCiZsdDtwJmd0O0lmIHlvdSBkaWQgbm90IGNvbXBsZXRlIHRoZSBDaXJjbGVDSSBBY2FkZW15IG1vZHVsZSwgeW91IHdpbGwgbmVlZCB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL2Vudi12YXJzLyNzZXR0aW5nLWFuLWVudmlyb25tZW50LXZhcmlhYmxlLWluLWEtcHJvamVjdCZxdW90OyZndDtzZXQgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUmbHQ7L2EmZ3Q7IGNhbGxlZCAmbHQ7Y29kZSZndDtET0NLRVJfTE9HSU4mbHQ7L2NvZGUmZ3Q7IHdpdGggeW91ciBEb2NrZXIgSUQgb3Igd2hhdGV2ZXIgeW91IHdhbnQgdG8gbmFtZSB0aGUgaW1hZ2UgZm9yIHRoaXMgdG8gd29yazombHQ7L3AmZ3Q7CgombHQ7cHJlJmd0OyZsdDtjb2RlJmd0O2J1aWxkX2RvY2tlcl9pbWFnZToKICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvbm9kZToxMgogICAgc3RlcHM6CiAgICAgIC0gY2hlY2tvdXQKICAgICAgLSBzZXR1cF9yZW1vdGVfZG9ja2VyOgogICAgICAgICAgZG9ja2VyX2xheWVyX2NhY2hpbmc6IGZhbHNlCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogQnVpbGQgRG9ja2VyIGltYWdlCiAgICAgICAgICBjb21tYW5kOiB8CiAgICAgICAgICAgIGV4cG9ydCBUQUc9MC4yLiZhbXA7bHQ7JmFtcDtsdDsgcGlwZWxpbmUubnVtYmVyICZhbXA7Z3Q7JmFtcDtndDsKICAgICAgICAgICAgZXhwb3J0IElNQUdFX05BTUU9JENJUkNMRV9QUk9KRUNUX1JFUE9OQU1FCiAgICAgICAgICAgIGRvY2tlciBidWlsZCAtdCAkRE9DS0VSX0xPR0lOLyRJTUFHRV9OQU1FIC10ICRET0NLRVJfTE9HSU4vJElNQUdFX05BTUU6JFRBRyAuCiAgICAgIC0gc255ay9zY2FuOgogICAgICAgICAgc2V2ZXJpdHktdGhyZXNob2xkOiBoaWdoCiAgICAgICAgICBkb2NrZXItaW1hZ2UtbmFtZTogJERPQ0tFUl9MT0dJTi8kQ0lSQ0xFX1BST0pFQ1RfUkVQT05BTUUKICAgICAgICAgIHRhcmdldC1maWxlOiAmcXVvdDtEb2NrZXJmaWxlJnF1b3Q7CiAgICAgICAgICBmYWlsLW9uLWlzc3VlczogdHJ1ZQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IFB1c2ggRG9ja2VyIGltYWdlCiAgICAgICAgICBjb21tYW5kOiB8CiAgICAgICAgICAgIGVjaG8gJERPQ0tFUl9QV0QgfCBkb2NrZXIgbG9naW4gLXUgJERPQ0tFUl9MT0dJTiAtLXBhc3N3b3JkLXN0ZGluCiAgICAgICAgICAgIGRvY2tlciBwdXNoICRET0NLRVJfTE9HSU4vJElNQUdFX05BTUUKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OwoKJmx0O3AmZ3Q7V2hlbiB0aGUgc2NhbiBjb21wbGV0ZXMsIFNueWsgd2lsbCBmYWlsIHRoZSBzdGFnZSBiZWNhdXNlIG9mIGhpZ2ggc2V2ZXJpdHkgdnVsbmVyYWJpbGl0aWVzLiBMaWtlIHdpdGggU255ayBPcGVuIFNvdXJjZSwgaXQgaXMgcG9zc2libGUgdG8gY3VzdG9taXplIHRoaXMgYmVoYXZpb3IgYnkgcGFzc2luZyBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgdG8gdGhlIG9yYi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWZhaWxlZC1jb250YWluZXItc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDt3PTIwMDAmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZxdW90OyBhbHQ9JnF1b3Q7RmFpbGVkIENvbnRhaW5lciBTY2FuJnF1b3Q7IHNyY3NldD0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWZhaWxlZC1jb250YWluZXItc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktZmFpbGVkLWNvbnRhaW5lci1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz04OTggODk4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1mYWlsZWQtY29udGFpbmVyLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTEzNDcgMTM0N3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktZmFpbGVkLWNvbnRhaW5lci1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1mYWlsZWQtY29udGFpbmVyLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE0NDAgMTQ0MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktZmFpbGVkLWNvbnRhaW5lci1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWZhaWxlZC1jb250YWluZXItc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktZmFpbGVkLWNvbnRhaW5lci1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWZhaWxlZC1jb250YWluZXItc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjE2MCAyMTYwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1mYWlsZWQtY29udGFpbmVyLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWZhaWxlZC1jb250YWluZXItc2Nhbi5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTU1OCAxNTU4dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1mYWlsZWQtY29udGFpbmVyLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIzMzcgMjMzN3csCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktZmFpbGVkLWNvbnRhaW5lci1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1mYWlsZWQtY29udGFpbmVyLXNjYW4ucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1MDAgMTUwMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktZmFpbGVkLWNvbnRhaW5lci1zY2FuLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMjUwIDIyNTB3JnF1b3Q7IHNpemVzPSZxdW90OyhtaW4td2lkdGg6IDEyMDBweCkgNzUwcHgsCihtaW4td2lkdGg6IDk5MnB4KSA3NzlweCwKKG1pbi13aWR0aDogNzY4cHgpIDcyMHB4LAoobWluLXdpZHRoOiA0ODBweCkgNzIwcHgsCihtaW4td2lkdGg6IDBweCkgNDQ5cHgmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtVc2luZyBTbnlrIHRvIGJyZWFrIHRoZSBidWlsZCBhZnRlciBhIGNvbnRhaW5lciBzY2FuLCBsaWtlIGluIHRoaXMgZXhhbXBsZSwgaXMgb25lIHdheSB0byBwcmV2ZW50IGFuIGltYWdlIHdpdGggdnVsbmVyYWJpbGl0aWVzIGZyb20gYmVpbmcgcHVzaGVkIHRvIHRoZSBjb250YWluZXIgcmVnaXN0cnkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VmlzaXQgdGhlIFNueWsgZG9jdW1lbnRhdGlvbiB0byBsZWFybiBob3cgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9lbi11cy9hcnRpY2xlcy8zNjAwMDM5NDY5MzctVW5kZXJzdGFuZGluZy1TbnlrLUNvbnRhaW5lci1DTEktcmVzdWx0cyZxdW90OyZndDt1bmRlcnN0YW5kIFNueWsgQ29udGFpbmVyIENMSSByZXN1bHRzJmx0Oy9hJmd0OywgYW5kIGJlIHN1cmUgdG8gZXhwbG9yZSB0aGUgc2VjdGlvbiBvbiBiYXNlIGltYWdlIHJlbWVkaWF0aW9uLiZsdDsvcCZndDsKCiZsdDtoMyZndDtVc2UgU255ayBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIHRvIGZpeCBUZXJyYWZvcm0gbWlzY29uZmlndXJhdGlvbnMmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7QXMgd2UgZGlzY3Vzc2VkIGFib3ZlLCBtb2Rlcm4gYXBwbGljYXRpb25zIGFyZSBtb3JlIHRoYW4gY29kZSBhbmQgb3BlbiBzb3VyY2UgY29tcG9uZW50czsgaW4gdGhlIGNsb3VkIGVyYSwgaW5mcmFzdHJ1Y3R1cmUgaXMgcGFydCBvZiB0aGUgYXBwbGljYXRpb24uIFdoaWxlIGNsb3VkIHByb3ZpZGVycyBvZmZlciB0b29scyB0byBtYW5hZ2UgY2xvdWQgY29uZmlndXJhdGlvbiwgbWlzY29uZmlndXJhdGlvbiBvZiBjbG91ZCByZXNvdXJjZXMgcmVtYWlucyB0aGUgbW9zdCBwcmV2YWxlbnQgY2xvdWQgdnVsbmVyYWJpbGl0eSBhbmQgY2FuIGJlIGV4cGxvaXRlZCB0byBhY2Nlc3MgY2xvdWQgZGF0YSBhbmQgc2VydmljZXMuIFRoYXQgaXMgd2hlcmUgU255ayBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIGNvbWVzIGluLCBwcm92aWRpbmcgY3VyYXRlZCBzZWN1cml0eSBpbmZvcm1hdGlvbiB0aGF0IGdpdmVzIGRldmVsb3BlcnMgd2hhdCB0aGV5IG5lZWQgdG8gZmluZCBhbmQgZml4IGNvbmZpZ3VyYXRpb24gaXNzdWVzIHF1aWNrbHkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QXMgb2Ygb3JiIHZlcnNpb24gJmx0O2NvZGUmZ3Q7MS4wLjAmbHQ7L2NvZGUmZ3Q7LCBTbnlrIEluZnJhc3RydWN0dXJlIGFzIENvZGUgaXMgYXZhaWxhYmxlIGFzIGEgJmx0O2NvZGUmZ3Q7am9iJmx0Oy9jb2RlJmd0OyB0aGF0IGNhbiBiZSBhZGRlZCBkaXJlY3RseSBpbnRvIHRoZSAmbHQ7Y29kZSZndDt3b3JrZmxvdyZsdDsvY29kZSZndDsuIEZvciB0aGlzIGV4YW1wbGUsIGFkZCB0aGUgJmx0O2NvZGUmZ3Q7c255ay9zY2FuLWlhYyZsdDsvY29kZSZndDsgam9iIGJlZm9yZSB0aGUgJmx0O2NvZGUmZ3Q7Z2tlLWNyZWF0ZS1jbHVzdGVyJmx0Oy9jb2RlJmd0OyBqb2IgdG8gY2hlY2sgdGhhdCBUZXJyYWZvcm0gZmlsZXMgYXJlIGNvcnJlY3RseSBjb25maWd1cmVkIGJlZm9yZSBjcmVhdGluZyB0aGUgY2xvdWQgaW5mcmFzdHJ1Y3R1cmUuIFRoZSAmbHQ7Y29kZSZndDthcmdzJmx0Oy9jb2RlJmd0OyBwYXJhbWV0ZXIgcG9pbnRzIHRvIHdoaWNoIGZpbGVzIHRvIGNoZWNrIGZvciBtaXNjb25maWd1cmF0aW9ucyBhbmQgY2FuIGFsc28gYmUgdXNlZCB0byBwYXNzIG90aGVyICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9zdXBwb3J0LnNueWsuaW8vaGMvZW4tdXMvYXJ0aWNsZXMvMzYwMDE4NzI4NjE4LVRlc3QteW91ci1jb25maWd1cmF0aW9uLWZpbGVzJnF1b3Q7Jmd0O1NueWsgQ0xJIGFyZ3VtZW50cyZsdDsvYSZndDs6Jmx0Oy9wJmd0OwoKJmx0O3ByZSZndDsmbHQ7Y29kZSZndDt3b3JrZmxvd3M6CiAgYnVpbGRfdGVzdDoKICAgIGpvYnM6CiAgICAgIC0gcnVuX3Rlc3RzCiAgICAgIC0gYnVpbGRfZG9ja2VyX2ltYWdlCiAgICAgIC0gc255ay9zY2FuLWlhYzoKICAgICAgICAgIGFyZ3M6IHBhcnQwMy9pYWNfZ2tlX2NsdXN0ZXIvCiAgICAgIC0gZ2tlX2NyZWF0ZV9jbHVzdGVyOgogICAgICAgICAgcmVxdWlyZXM6CiAgICAgICAgICAgIC0gcnVuX3Rlc3RzCiAgICAgICAgICAgIC0gYnVpbGRfZG9ja2VyX2ltYWdlCiAgICAgICAgICAgIC0gc255ay9zY2FuLWlhYwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7CgombHQ7cCZndDtMaWtlIHdpdGggYWxsIG90aGVyIFNueWsgc2NhbnMsIHRoZSBkZWZhdWx0IGJlaGF2aW9yIGlzIHRvIGJyZWFrIHRoZSBidWlsZCBpbiBjYXNlIG9mIGFueSBtaXNjb25maWd1cmF0aW9ucy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDtodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWlhYy1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7dz0yMDAwJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmcXVvdDsgYWx0PSZxdW90O0lBQyBJc3N1ZXMmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaWFjLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaWFjLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaWFjLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pYWMtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pYWMtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWlhYy1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaWFjLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaWFjLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pYWMtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWlhYy1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWlhYy1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaWFjLWlzc3Vlcy5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pYWMtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pYWMtaXNzdWVzLnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWlhYy1pc3N1ZXMucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1Zpc2l0IHRoZSBTbnlrIEFjYWRlbXkgdG8gbGVhcm4gd2F5cyB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vc29sdXRpb25zLnNueWsuaW8vcGFydG5lci13b3Jrc2hvcHMvY2lyY2xlY2kvc2Nhbi10ZXJyYWZvcm0td2l0aC10aGUtc255ay1vcmIvYWRqdXN0aW5nLXNueWstaWFjLXNjYW4tcGFyYW1ldGVycyZxdW90OyZndDtjdXN0b21pemUgdGhlIElhQyBzY2FuIHBhcmFtZXRlcnMmbHQ7L2EmZ3Q7IGluIHRoaXMgd29ya2Zsb3cuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0F1Z21lbnQgdGhlIGRldmVsb3BlciBleHBlcmllbmNlJmx0Oy9oMyZndDsKCiZsdDtwJmd0O0lmIHlvdSBtYWRlIGl0IHRoaXMgZmFyLCBjb25ncmF0dWxhdGlvbnMhIFlvdXIgZGVsaXZlcnkgcGlwZWxpbmUgbm93IGhhcyBzZWN1cml0eSB0ZXN0aW5nIGZvciBpc3N1ZXMgaW50cm9kdWNlZCBieSB5b3VyIGFwcGxpY2F0aW9u4oCZcyBvcGVuIHNvdXJjZSBkZXBlbmRlbmNpZXMsIGNvbnRhaW5lciBiYXNlIGltYWdlLCBhbmQgdGhlIFRlcnJhZm9ybSBmaWxlcyB0aGF0IGRlcGxveSBpdCBpbnRvIGEgcHJvZHVjdGlvbiBHS0UgZW52aXJvbm1lbnQuIFdlIGNhbiBtYWtlIHRoaXMgaW5mb3JtYXRpb24gbW9yZSBhY2Nlc3NpYmxlIGFuZCBhY3Rpb25hYmxlIGZvciBkZXZlbG9wZXJzIGJ5IGFsc28gaW50ZWdyYXRpbmcgU255ayB3aGVyZSB0aGV5IHdvcmssIHRoZSBJREUgYW5kIHRoZWlyIHNvdXJjZSBjb250cm9sIHJlcG9zaXRvcnkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gdXNlIFNueWsgaW4gYW4gSURFLCBkb3dubG9hZCBhbnkgb2YgdGhlIGF2YWlsYWJsZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vc255ay5pby9pZGUtcGx1Z2lucy8mcXVvdDsmZ3Q7SURFIHBsdWdpbnMmbHQ7L2EmZ3Q7IG9yIHVzZSB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9lbi11cy9hcnRpY2xlcy8zNjAwMDM4MTI1NzgtQ0xJLXJlZmVyZW5jZSZxdW90OyZndDtTbnlrIENMSSZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gaW50ZWdyYXRlIFNueWsgaW50byBzb3VyY2UgY29udHJvbCBtYW5hZ2VtZW50IChTQ00pLCBpbXBvcnQgeW91ciBmb3JrIG9mIHRoZSBMZWFybiBJbmZyYXN0cnVjdHVyZSBhcyBDb2RlIHJlcG8gdG8gU255ayB1c2luZyB0aGUgU0NNIGludGVncmF0aW9uLiBWaXNpdCB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9lbi11cy9hcnRpY2xlcy8zNjAwMDQwMzIxMTctR2l0SHViLWludGVncmF0aW9uJnF1b3Q7Jmd0O1NueWsgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIEdpdEh1YiBpbnRlZ3JhdGlvbiZsdDsvYSZndDsgdG8gbGVhcm4gaG93LiBPbmNlIHRoZSBmb3JrIGlzIGltcG9ydGVkLCB5b3Ugd2lsbCBzZWUgdGhlIGZpbGVzIHdlIHRlc3RlZCBpbiB0aGlzIHR1dG9yaWFsLCBhbmQgdGhlaXIgcmlza3MsIGluIHRoZSBTbnlrIFVJLiBUaGlzIGVuaGFuY2VzIGRldmVsb3BlciBwcm9kdWN0aXZpdHkgd2l0aCBmZWF0dXJlcyBsaWtlIEZpeCBQdWxsIFJlcXVlc3RzLiBWaXNpdCB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9lbi11cy9hcnRpY2xlcy8zNjAwMTgwMTA1OTctU255ay1TQ00taW50ZWdyYXRpb24tZ29vZC1wcmFjdGljZXMmcXVvdDsmZ3Q7U0NNIGludGVncmF0aW9uIGJlc3QgcHJhY3RpY2VzJmx0Oy9hJmd0OyBwYWdlIHRvIGxlYXJuIG1vcmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7aHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pbXBvcnRlZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO3c9MjAwMCZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJnF1b3Q7IGFsdD0mcXVvdDtSZXBvIEltcG9ydGVkIHRvIFNueWsmcXVvdDsgc3Jjc2V0PSZxdW90O2h0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaW1wb3J0ZWQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NDQ5IDQ0OXcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaW1wb3J0ZWQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9ODk4IDg5OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaW1wb3J0ZWQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTM0NyAxMzQ3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pbXBvcnRlZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03MjAgNzIwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pbXBvcnRlZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNDQwIDE0NDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWltcG9ydGVkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIxNjAgMjE2MHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaW1wb3J0ZWQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9NzIwIDcyMHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaW1wb3J0ZWQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MTQ0MCAxNDQwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pbXBvcnRlZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0yMTYwIDIxNjB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWltcG9ydGVkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTc3OSA3Nzl3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWltcG9ydGVkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTE1NTggMTU1OHcsCmh0dHBzOi8vcHJvZHVjdGlvbi1jY2ktY29tLmltZ2l4Lm5ldC9ibG9nL21lZGlhLzIwMjEtMDctMjktaW1wb3J0ZWQtcHJvamVjdC5wbmc/aXhsaWI9cmItMy4yLjEmYW1wO2FtcDthdXRvPWZvcm1hdCZhbXA7YW1wO2ZpdD1tYXgmYW1wO2FtcDtxPTYwJmFtcDthbXA7Y2g9RFBSJTJDV2lkdGglMkNWaWV3cG9ydC1XaWR0aCUyQ1NhdmUtRGF0YSZhbXA7YW1wO3c9MjMzNyAyMzM3dywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pbXBvcnRlZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz03NTAgNzUwdywKaHR0cHM6Ly9wcm9kdWN0aW9uLWNjaS1jb20uaW1naXgubmV0L2Jsb2cvbWVkaWEvMjAyMS0wNy0yOS1pbXBvcnRlZC1wcm9qZWN0LnBuZz9peGxpYj1yYi0zLjIuMSZhbXA7YW1wO2F1dG89Zm9ybWF0JmFtcDthbXA7Zml0PW1heCZhbXA7YW1wO3E9NjAmYW1wO2FtcDtjaD1EUFIlMkNXaWR0aCUyQ1ZpZXdwb3J0LVdpZHRoJTJDU2F2ZS1EYXRhJmFtcDthbXA7dz0xNTAwIDE1MDB3LApodHRwczovL3Byb2R1Y3Rpb24tY2NpLWNvbS5pbWdpeC5uZXQvYmxvZy9tZWRpYS8yMDIxLTA3LTI5LWltcG9ydGVkLXByb2plY3QucG5nP2l4bGliPXJiLTMuMi4xJmFtcDthbXA7YXV0bz1mb3JtYXQmYW1wO2FtcDtmaXQ9bWF4JmFtcDthbXA7cT02MCZhbXA7YW1wO2NoPURQUiUyQ1dpZHRoJTJDVmlld3BvcnQtV2lkdGglMkNTYXZlLURhdGEmYW1wO2FtcDt3PTIyNTAgMjI1MHcmcXVvdDsgc2l6ZXM9JnF1b3Q7KG1pbi13aWR0aDogMTIwMHB4KSA3NTBweCwKKG1pbi13aWR0aDogOTkycHgpIDc3OXB4LAoobWluLXdpZHRoOiA3NjhweCkgNzIwcHgsCihtaW4td2lkdGg6IDQ4MHB4KSA3MjBweCwKKG1pbi13aWR0aDogMHB4KSA0NDlweCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25jbHVzaW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0J5IGNvbXBsZXRpbmcgdGhpcyB0dXRvcmlhbCB5b3UgYXJlIG1vcmUgYXdhcmUgb2YgdGhlIHNlY3VyaXR5IHJpc2tzIGludHJvZHVjZWQgYnkgeW91ciBkZXZlbG9wZXJz4oCZIGNob2ljZSBvZiBvcGVuIHNvdXJjZSwgY29udGFpbmVyLCBhbmQgaW5mcmFzdHJ1Y3R1cmUgY29uZmlndXJhdGlvbi4gVGhpcyBhd2FyZW5lc3MgaXMgYW4gZXNzZW50aWFsIGZpcnN0IHN0ZXAgdG93YXJkIGJ1aWxkaW5nIGEgY3VsdHVyZSBvZiBjb2xsYWJvcmF0aW9uIGJldHdlZW4gc2VjdXJpdHkgdGVhbXMgcmVzcG9uc2libGUgZm9yIHByZXZlbnRpbmcgcHJvZHVjdGlvbiBpc3N1ZXMsIG9wZXJhdGlvbnMgdGVhbXMgcmVzcG9uc2libGUgZm9yIGtlZXBpbmcgcGlwZWxpbmVzIHJ1bm5pbmcsIGFuZCBkZXZlbG9wZXJzIGluIGNoYXJnZSBvZiBmaXhpbmcgaXNzdWVzLiZsdDsvcCZndDsKCiZsdDtwJmd0O1dhbnQgdG8gbGVhcm4gbW9yZT8gVmlzaXQgdGhlIFNueWsgRG9jdW1lbnRhdGlvbiB0byByZWFkIHNvbWUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N1cHBvcnQuc255ay5pby9oYy9lbi11cy9hcnRpY2xlcy8zNjAwMTgyNDUzOTgtU255ay1DSS1DRC1JbnRlZ3JhdGlvbi1nb29kLXByYWN0aWNlcy0mcXVvdDsmZ3Q7YmVzdCBwcmFjdGljZXMgZm9yIGludGVncmF0aW5nIFNueWsgaW50byBDSS9DRCBwaXBlbGluZXMmbHQ7L2EmZ3Q7LiZsdDsvcCZndDsKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgPC9jaGFubmVsPgo8L3Jzcz4K
  recorded_at: Wed, 01 Sep 2021 13:02:27 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Wed, 01 Sep 2021 13:02:27 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - https://medium.com/feed/@macsiri
      Cf-Ray:
      - 687eb170ae3118a1-EWR
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Medium-Fulfilled-By:
      - edgy/4, valencia/main-20210830-201022-425c0ef81a
      X-Content-Type-Options:
      - nosniff
      X-Envoy-Upstream-Service-Time:
      - '1'
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: UTF-8
      string: "<a href=\"https://medium.com/feed/@macsiri\">Moved Permanently</a>.\n\n"
  recorded_at: Wed, 01 Sep 2021 13:02:27 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Cookie:
      - __cfruid=f52d8ea88fe78ee670f28f79669a7e008e9c348b-1630501347
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Sep 2021 13:02:28 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 687eb171094018f2-EWR
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 01 Sep 2021 13:17:28 GMT
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://accounts.google.com https://getpocket.com
        https://medium.com https://*.medium.com https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://lightstep.medium.systems https://*.branch.io ''self''; font-src data:
        https://*.amazonaws.com https://*.medium.com https://glyph.medium.com https://medium.com
        https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Medium-Fulfilled-By:
      - edgy/4, valencia/main-20210830-201022-425c0ef81a
      Pragma:
      - private
      X-Content-Type-Options:
      - nosniff
      X-Envoy-Upstream-Service-Time:
      - '62'
      X-Frame-Options:
      - sameorigin
      X-Obvious-Info:
      - 20210901-0024-root,b8e32991
      X-Obvious-Tid:
      - 1630501348038:c15f5168ad06
      X-Opentracing:
      - '{"ot-tracer-spanid":"37d87524035680b8","ot-tracer-traceid":"45400f40108579e4","ot-tracer-sampled":"true"}'
      X-Powered-By:
      - Medium
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+V2VkLCAwMSBTZXAgMjAyMSAxMzowMjoyMiBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vQG1hY3NpcmkvZmVlZCIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE5LTA2LTE5VDIxOjM4OjA3LjU0OVo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7ZGlzcGxheV9uYW1lPVlvdVR1YmUmYW1wO3VybD1odHRwcyUzQSUyRiUyRnd3dy55b3V0dWJlLmNvbSUyRndhdGNoJTNGdiUzRFFPQ2FhY084d3VzJmFtcDtpbWFnZT1odHRwcyUzQSUyRiUyRmkueXRpbWcuY29tJTJGdmklMkZRT0NhYWNPOHd1cyUyRmhxZGVmYXVsdC5qcGcmYW1wO2tleT1hMTlmY2MxODRiOTcxMWUxYjQ3NjQwNDBkM2RjNWMwNyZhbXA7dHlwZT10ZXh0JTJGaHRtbCZhbXA7c2NoZW1hPXlvdXR1YmUiIHdpZHRoPSI4NTQiIGhlaWdodD0iNDgwIiBmcmFtZWJvcmRlcj0iMCIgc2Nyb2xsaW5nPSJubyI+PGEgaHJlZj0iaHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzdkYTc0YmIzMGY4YTJhODJiMGFjYjg5YjIxM2EwMThiL2hyZWYiPmh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmPC9hPjwvaWZyYW1lPjxwPnR3ZWV0IGhlcmU8L3A+PHN0eWxlPmJvZHlbZGF0YS10d3R0ci1yZW5kZXJlZD0idHJ1ZSJdIHtiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDt9LnR3aXR0ZXItdHdlZXQge21hcmdpbjogYXV0byAhaW1wb3J0YW50O308L3N0eWxlPjxibG9ja3F1b3RlIGNsYXNzPSJ0d2l0dGVyLXR3ZWV0IiBkYXRhLWNvbnZlcnNhdGlvbj0ibm9uZSIgZGF0YS1hbGlnbj0iY2VudGVyIiBkYXRhLWRudD0idHJ1ZSI+PHA+JiN4MjAwYTsmbWRhc2g7JiN4MjAwYTs8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2JlbmRoYWxwZXJuL3N0YXR1cy85NDgyNTYwODMzNTI3MzU3NDQiPkBiZW5kaGFscGVybjwvYT48L3A+PC9ibG9ja3F1b3RlPjxzY3JpcHQgc3JjPSIvL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMuanMiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD48c2NyaXB0PmZ1bmN0aW9uIG5vdGlmeVJlc2l6ZShoZWlnaHQpIHtoZWlnaHQgPSBoZWlnaHQgPyBoZWlnaHQgOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0OyB2YXIgcmVzaXplZCA9IGZhbHNlOyBpZiAod2luZG93LmRvbmtleSAmJiBkb25rZXkucmVzaXplKSB7ZG9ua2V5LnJlc2l6ZShoZWlnaHQpO3Jlc2l6ZWQgPSB0cnVlO31pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG9iaiA9IHtpZnJhbWU6IHdpbmRvdy5mcmFtZUVsZW1lbnQsIGhlaWdodDogaGVpZ2h0fTsgcGFyZW50Ll9yZXNpemVJZnJhbWUob2JqKTsgcmVzaXplZCA9IHRydWU7fWlmICh3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggPT09ICIjYW1wPTEiICYmIHdpbmRvdy5wYXJlbnQgJiYgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSkge3dpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe3NlbnRpbmVsOiAiYW1wIiwgdHlwZTogImVtYmVkLXNpemUiLCBoZWlnaHQ6IGhlaWdodH0sICIqIik7fWlmICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZSkge3dpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZS5wb3N0TWVzc2FnZShoZWlnaHQpOyByZXNpemVkID0gdHJ1ZTt9cmV0dXJuIHJlc2l6ZWQ7fXR3dHRyLmV2ZW50cy5iaW5kKCdyZW5kZXJlZCcsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOyB0d3R0ci5ldmVudHMuYmluZCgncmVzaXplJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7PC9zY3JpcHQ+PHNjcmlwdD5pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG1heFdpZHRoID0gcGFyc2VJbnQod2luZG93LmZyYW1lRWxlbWVudC5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOyBpZiAoIDUwMCAgPCBtYXhXaWR0aCkge3dpbmRvdy5mcmFtZUVsZW1lbnQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1MDAiKTt9fTwvc2NyaXB0PjxwPkdpdGh1YiBnaXN0wqBoZXJlPC9wPjxpZnJhbWUgc3JjPSIiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIj48YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZiI+aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWY8L2E+PC9pZnJhbWU+PHA+Y29kZSBibG9jazwvcD48cHJlPnRlc3RzZXRzZXRzZXRzZXRzZXRzZXQgbGV0cyBpbnRyb2R1Y2Ugc29tZSB7eyBjaGFvcyB9fTwvcHJlPjxwcmU+SGVyZSYjMzk7cyBtb3JlIHt7IHdoYXQgfX08L3ByZT48cD5zb21lIG1vcmUgY29kZSBhbmQge3sgVkFSSUFCTEUgfX0gYW5kIDxzdHJvbmc+PGVtPnt7IEhUTUzCoH19PC9lbT48L3N0cm9uZz48L3A+PGgzPnt7IGhvdyBhYm91dCB0aGlzwqB9fTwvaDM+PGltZyBzcmM9Imh0dHBzOi8vbWVkaXVtLmNvbS9fL3N0YXQ/ZXZlbnQ9cG9zdC5jbGllbnRWaWV3ZWQmcmVmZXJyZXJTb3VyY2U9ZnVsbF9yc3MmcG9zdElkPTZhZjA0YjdlNTdlMSIgd2lkdGg9IjEiIGhlaWdodD0iMSIgYWx0PSIiPl1dPjwvY29udGVudDplbmNvZGVkPgogICAgICAgIDwvaXRlbT4KICAgIDwvY2hhbm5lbD4KPC9yc3M+
  recorded_at: Wed, 01 Sep 2021 13:02:28 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Sep 2021 13:02:28 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 687eb172494518c4-EWR
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 01 Sep 2021 13:17:28 GMT
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://accounts.google.com https://getpocket.com
        https://medium.com https://*.medium.com https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://lightstep.medium.systems https://*.branch.io ''self''; font-src data:
        https://*.amazonaws.com https://*.medium.com https://glyph.medium.com https://medium.com
        https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Medium-Fulfilled-By:
      - edgy/4, valencia/main-20210830-201022-425c0ef81a
      Pragma:
      - private
      X-Content-Type-Options:
      - nosniff
      X-Envoy-Upstream-Service-Time:
      - '498'
      X-Frame-Options:
      - sameorigin
      X-Obvious-Info:
      - 20210901-0024-root,b8e32991
      X-Obvious-Tid:
      - 1630501348321:a101908d4278
      X-Opentracing:
      - '{"ot-tracer-spanid":"3fdaebf569f9f81c","ot-tracer-traceid":"1f391e38fa5922d8","ot-tracer-sampled":"true"}'
      X-Powered-By:
      - Medium
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 Sep 2021 13:02:28 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Sep 2021 13:02:29 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 687eb175fbf1190e-EWR
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 01 Sep 2021 13:17:28 GMT
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://accounts.google.com https://getpocket.com
        https://medium.com https://*.medium.com https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://lightstep.medium.systems https://*.branch.io ''self''; font-src data:
        https://*.amazonaws.com https://*.medium.com https://glyph.medium.com https://medium.com
        https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Medium-Fulfilled-By:
      - edgy/4, valencia/main-20210830-201022-425c0ef81a
      Pragma:
      - private
      X-Content-Type-Options:
      - nosniff
      X-Envoy-Upstream-Service-Time:
      - '214'
      X-Frame-Options:
      - sameorigin
      X-Obvious-Info:
      - 20210901-0024-root,b8e32991
      X-Obvious-Tid:
      - 1630501348831:fd86f8aa9e1d
      X-Opentracing:
      - '{"ot-tracer-spanid":"078358c137033a3e","ot-tracer-traceid":"1983fa64976b42ca","ot-tracer-sampled":"true"}'
      X-Powered-By:
      - Medium
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 Sep 2021 13:02:29 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 Sep 2021 13:02:30 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 687eb1760e1215af-EWR
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 01 Sep 2021 13:17:29 GMT
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://accounts.google.com https://getpocket.com
        https://medium.com https://*.medium.com https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://lightstep.medium.systems https://*.branch.io ''self''; font-src data:
        https://*.amazonaws.com https://*.medium.com https://glyph.medium.com https://medium.com
        https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Medium-Fulfilled-By:
      - edgy/4, valencia/main-20210830-201022-425c0ef81a
      Pragma:
      - private
      X-Content-Type-Options:
      - nosniff
      X-Envoy-Upstream-Service-Time:
      - '1195'
      X-Frame-Options:
      - sameorigin
      X-Obvious-Info:
      - 20210901-0024-root,b8e32991
      X-Obvious-Tid:
      - 1630501348890:344ab7ce8a82
      X-Opentracing:
      - '{"ot-tracer-spanid":"009d619b111d08d9","ot-tracer-traceid":"3fa752bf7d29b500","ot-tracer-sampled":"true"}'
      X-Powered-By:
      - Medium
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 Sep 2021 13:02:30 GMT
recorded_with: VCR 6.0.0
