---
http_interactions:
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 19 May 2020 12:02:00 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"59c3d2453665e7ad","ot-tracer-traceid":"4476ea1046b2dd8d","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1589889720222:ac29e0d573a1
      X-Obvious-Info:
      - 41053-1bc14bc,1bc14bcede9
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Tue, 19 May 2020 12:17:00 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 595daa9d087ad608-MXP
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-25=":443"; ma=86400, h3-24=":443"; ma=86400, h3-23=":443";
        ma=86400
      Cf-Request-Id:
      - 02ce68f6240000d608561dc200000001
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 19 May 2020 12:02:00 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Tue, 19 May 2020 12:02:01 GMT
      Etag:
      - '"d148e5f0c8f6530989f97099948abd37"'
      Last-Modified:
      - Tue, 19 May 2020 02:33:22 GMT
      Server:
      - nginx
      Strict-Transport-Security:
      - max-age=15724800
      X-Amz-Id-2:
      - xpmfTPbXgE2tMjg8pnV1CacxCxbdhelHYQ0AB1UFwIpCTSF8IAVnYhHRXZoq3Tl26WCFvXa1VSs=
      X-Amz-Request-Id:
      - 3E8826C1B256ADC6
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '183502'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 19 May 2020 12:02:01 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 19 May 2020 12:02:01 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"1eddb88712bdc5ee","ot-tracer-traceid":"40f6ec9216651ff6","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1589889721670:1734c55ffe02
      X-Obvious-Info:
      - 41053-1bc14bc,1bc14bcede9
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Tue, 19 May 2020 12:17:01 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 595daaa7ea69f923-MXP
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-25=":443"; ma=86400, h3-24=":443"; ma=86400, h3-23=":443";
        ma=86400
      Cf-Request-Id:
      - 02ce68fcf50000f9235bbd9200000001
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+VHVlLCAxOSBNYXkgMjAyMCAxMTo1MzoxMyBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE5LTA2LTE5VDIxOjM4OjA3LjU0OVo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPkkmIzM5O20gYSBmdWxsLXN0YWNrIGRldmVsb3BlcjwvcD48cD4mI3gyMDBhOyZtZGFzaDsmI3gyMDBhOzxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYmVuZGhhbHBlcm4vc3RhdHVzLzk0ODI1NjA4MzM1MjczNTc0NCI+QGJlbmRoYWxwZXJuPC9hPjwvcD48L2Jsb2NrcXVvdGU+PHNjcmlwdCBzcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PjxzY3JpcHQ+ZnVuY3Rpb24gbm90aWZ5UmVzaXplKGhlaWdodCkge2hlaWdodCA9IGhlaWdodCA/IGhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQ7IHZhciByZXNpemVkID0gZmFsc2U7IGlmICh3aW5kb3cuZG9ua2V5ICYmIGRvbmtleS5yZXNpemUpIHtkb25rZXkucmVzaXplKGhlaWdodCk7cmVzaXplZCA9IHRydWU7fWlmIChwYXJlbnQgJiYgcGFyZW50Ll9yZXNpemVJZnJhbWUpIHt2YXIgb2JqID0ge2lmcmFtZTogd2luZG93LmZyYW1lRWxlbWVudCwgaGVpZ2h0OiBoZWlnaHR9OyBwYXJlbnQuX3Jlc2l6ZUlmcmFtZShvYmopOyByZXNpemVkID0gdHJ1ZTt9aWYgKHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaCA9PT0gIiNhbXA9MSIgJiYgd2luZG93LnBhcmVudCAmJiB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKSB7d2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSh7c2VudGluZWw6ICJhbXAiLCB0eXBlOiAiZW1iZWQtc2l6ZSIsIGhlaWdodDogaGVpZ2h0fSwgIioiKTt9aWYgKHdpbmRvdy53ZWJraXQgJiYgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMgJiYgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMucmVzaXplKSB7d2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMucmVzaXplLnBvc3RNZXNzYWdlKGhlaWdodCk7IHJlc2l6ZWQgPSB0cnVlO31yZXR1cm4gcmVzaXplZDt9dHd0dHIuZXZlbnRzLmJpbmQoJ3JlbmRlcmVkJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7IHR3dHRyLmV2ZW50cy5iaW5kKCdyZXNpemUnLCBmdW5jdGlvbiAoZXZlbnQpIHtub3RpZnlSZXNpemUoKTt9KTs8L3NjcmlwdD48c2NyaXB0PmlmIChwYXJlbnQgJiYgcGFyZW50Ll9yZXNpemVJZnJhbWUpIHt2YXIgbWF4V2lkdGggPSBwYXJzZUludCh3aW5kb3cuZnJhbWVFbGVtZW50LmdldEF0dHJpYnV0ZSgid2lkdGgiKSk7IGlmICggNTAwICA8IG1heFdpZHRoKSB7d2luZG93LmZyYW1lRWxlbWVudC5zZXRBdHRyaWJ1dGUoIndpZHRoIiwgIjUwMCIpO319PC9zY3JpcHQ+PHA+R2l0aHViIGdpc3TCoGhlcmU8L3A+PGlmcmFtZSBzcmM9IiIgd2lkdGg9IjAiIGhlaWdodD0iMCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83NzdhZThiN2Q4OTE2ZTU2NWI4NGI3MDRjMDg4Y2YwYy9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZjwvYT48L2lmcmFtZT48cD5jb2RlIGJsb2NrPC9wPjxwcmU+dGVzdHNldHNldHNldHNldHNldHNldCBsZXRzIGludHJvZHVjZSBzb21lIHt7IGNoYW9zIH19PC9wcmU+PHByZT5IZXJlJiMzOTtzIG1vcmUge3sgd2hhdCB9fTwvcHJlPjxwPnNvbWUgbW9yZSBjb2RlIGFuZCB7eyBWQVJJQUJMRSB9fSBhbmQgPHN0cm9uZz48ZW0+e3sgSFRNTMKgfX08L2VtPjwvc3Ryb25nPjwvcD48aDM+e3sgaG93IGFib3V0IHRoaXPCoH19PC9oMz48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NmFmMDRiN2U1N2UxIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICA8L2NoYW5uZWw+CjwvcnNzPg==
    http_version: null
  recorded_at: Tue, 19 May 2020 12:02:01 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 19 May 2020 12:02:02 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"53fca17e44e44c95","ot-tracer-traceid":"301715fa6564066b","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1589889721857:6aa1b0192044
      X-Obvious-Info:
      - 41053-1bc14bc,1bc14bcede9
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Tue, 19 May 2020 12:17:01 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 595daaa92aed0e06-MXP
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-25=":443"; ma=86400, h3-24=":443"; ma=86400, h3-23=":443";
        ma=86400
      Cf-Request-Id:
      - 02ce68fdb800000e062b320200000001
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 19 May 2020 12:02:02 GMT
recorded_with: VCR 5.1.0
