---
http_interactions:
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 02 Jan 2019 20:58:15 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://getpocket.com
        https://medium.com:443 https://*.medium.com:443 https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://*.lightstep.com https://*.branch.io https://app.zencoder.com ''self'';
        font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://use.typekit.net https://cdn-static-1.medium.com ''self''; frame-src
        chromenull: https: webviewprogressproxy: medium: ''self''; img-src blob: data:
        https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1546462695791:b45b80bb909
      X-Obvious-Info:
      - 36148-2e9ccc3,2e9ccc3d8ef
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 02 Jan 2019 21:13:15 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 493024884a4b6f12-FCO
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBWYWlkZWhpIEpvc2hpIG9uIE1lZGl1bV1dPjwvdGl0bGU+CiAgICAgICAgPGRlc2NyaXB0aW9uPjwhW0NEQVRBW1N0b3JpZXMgYnkgVmFpZGVoaSBKb3NoaSBvbiBNZWRpdW1dXT48L2Rlc2NyaXB0aW9uPgogICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AdmFpZGVoaWpvc2hpP3NvdXJjZT1yc3MtOGY1NTk5M2M5NzNlLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzEqUU9RdVdBcVFkNTY2b0lUajlydENLdy5qcGVnPC91cmw+CiAgICAgICAgICAgIDx0aXRsZT5TdG9yaWVzIGJ5IFZhaWRlaGkgSm9zaGkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0B2YWlkZWhpam9zaGk/c291cmNlPXJzcy04ZjU1OTkzYzk3M2UtLS0tLS0yPC9saW5rPgogICAgICAgIDwvaW1hZ2U+CiAgICAgICAgPGdlbmVyYXRvcj5NZWRpdW08L2dlbmVyYXRvcj4KICAgICAgICA8bGFzdEJ1aWxkRGF0ZT5XZWQsIDAyIEphbiAyMDE5IDIwOjU1OjIwIEdNVDwvbGFzdEJ1aWxkRGF0ZT4KICAgICAgICA8YXRvbTpsaW5rIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9mZWVkL0B2YWlkZWhpam9zaGkiIHJlbD0ic2VsZiIgdHlwZT0iYXBwbGljYXRpb24vcnNzK3htbCIvPgogICAgICAgIDx3ZWJNYXN0ZXI+PCFbQ0RBVEFbeW91cmZyaWVuZHNAbWVkaXVtLmNvbV1dPjwvd2ViTWFzdGVyPgogICAgICAgIDxhdG9tOmxpbmsgaHJlZj0iaHR0cDovL21lZGl1bS5zdXBlcmZlZWRyLmNvbSIgcmVsPSJodWIiLz4KICAgICAgICA8aXRlbT4KICAgICAgICAgICAgPHRpdGxlPjwhW0NEQVRBW01hbnkgTm9kZXMsIE9uZSBEaXN0cmlidXRlZCBTeXN0ZW1dXT48L3RpdGxlPgogICAgICAgICAgICA8bGluaz5odHRwczovL21lZGl1bS5jb20vYmFzZWRzL21hbnktbm9kZXMtb25lLWRpc3RyaWJ1dGVkLXN5c3RlbS05OTIxZjg1MjA1YzQ/c291cmNlPXJzcy04ZjU1OTkzYzk3M2UtLS0tLS0yPC9saW5rPgogICAgICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHBzOi8vbWVkaXVtLmNvbS9wLzk5MjFmODUyMDVjNDwvZ3VpZD4KICAgICAgICAgICAgPGNhdGVnb3J5PjwhW0NEQVRBW3NvZnR3YXJlXV0+PC9jYXRlZ29yeT4KICAgICAgICAgICAgPGNhdGVnb3J5PjwhW0NEQVRBW2Rpc3RyaWJ1dGVkLXN5c3RlbXNdXT48L2NhdGVnb3J5PgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbY29tcHV0ZXItc2NpZW5jZV1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxjYXRlZ29yeT48IVtDREFUQVtjb2RlXV0+PC9jYXRlZ29yeT4KICAgICAgICAgICAgPGNhdGVnb3J5PjwhW0NEQVRBW3RlY2hdXT48L2NhdGVnb3J5PgogICAgICAgICAgICA8ZGM6Y3JlYXRvcj48IVtDREFUQVtWYWlkZWhpIEpvc2hpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5XZWQsIDAyIEphbiAyMDE5IDE0OjQ2OjQzIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE5LTAxLTAyVDE4OjQ5OjEzLjkxN1o8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8ZmlndXJlPjxpbWcgYWx0PSIiIHNyYz0iaHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9tYXgvMTAyNC8xKm5pY0ZucG9kRnEwVW9ENXVIQXQxU0EuanBlZyIgLz48ZmlnY2FwdGlvbj5NYW55IG5vZGVzLCBvbmUgZGlzdHJpYnV0ZWQgc3lzdGVtLjwvZmlnY2FwdGlvbj48L2ZpZ3VyZT48cD5UaGV5IHNheSB0aGF0IG5vIG1hbiAob3Igd29tYW4sIG9yIHBlcnNvbiwgcmVhbGx5KSBpcyBhbiBpc2xhbmQ7IHRoZXNlIGRheXMsIHdlIGNvdWxkIHJlYWxseSBqdXN0IGFkZCDigJxjb21wdXRlcuKAnSB0byB0aGUgbGlzdC4gV2UgYXJlIHN1cnJvdW5kZWQgYnkgbWFjaGluZXMsIGNvbXB1dGVycywgYW5kIGRhdGFiYXNlcyB0aGF0IGFyZSBhcmUgdGFsa2luZyB0byBvbmUgYW5vdGhlci4gSW4gZmFjdCwgbW9zdCBvZiB0aGUgYXBwbGljYXRpb25zIGFuZCBzZXJ2aWNlcyB0aGF0IHdlIGludGVyYWN0IHdpdGggKGFuZCBidWlsZCEpIGV2ZXJ5IGRheSBhcmUgYWN0dWFsbHkgYSB3aG9sZSBidW5jaCBvZiBjb21wdXRpbmcgZWxlbWVudHMgdGhhdCBhcmUgdGFsa2luZyB0byBvbmUgYW5vdGhlciwgZXZlbiBpZiB3ZSBtaWdodCBub3Qga25vd8KgaXQuPC9wPjxwPlRoZSBzdHVkeSBvZiB0aGVzZSBzeXN0ZW1zIGFuZCBob3cgdGhleSB3b3JrIGFyZSBwYXJ0IG9mIHRoZSB3b3JsZCBvZiA8c3Ryb25nPjxlbT5kaXN0cmlidXRlZCBjb21wdXRpbmc8L2VtPjwvc3Ryb25nPiwgd2hpY2ggY2VudGVycyBhcm91bmQgdGhlIHN0dWR5IG9mIGRpc3RyaWJ1dGVkIHN5c3RlbXMuIEluIHNvbWUgd2F5cywgZGlzdHJpYnV0ZWQgc3lzdGVtcyBhcmUgYSBjb250aW51YXRpb24gb2Ygb3IgZXh0ZW5zaW9uIGZyb20gdGhlIHJlYWxtIG9mIGNvbXB1dGVyIHNjaWVuY2XigIrigJTigIppdCBvZnRlbiBpbnZvbHZlcyBwcm9ibGVtLXNvbHZpbmcsIGRpdmlkaW5nIHRoaW5ncyBpbnRvIGRpc2NyZXRlIHRhc2tzLCBhbmQgZmlndXJpbmcgb3V0IGhvdyB0byBoYW5kbGUsIHN0b3JlLCBhbmQgcHJvY2Vzc8KgZGF0YS48L3A+PHA+QnV0IGluIG90aGVyIHdheXMsIGRpc3RyaWJ1dGVkIHN5c3RlbXMgYXJlIG5vdGhpbmcgbGlrZSBjb21wdXRlciBzY2llbmNlIGF0IGFsbC4gRGlzdHJpYnV0ZWQgY29tcHV0aW5nIGFsbW9zdCByZXF1aXJlcyB1cyB0byB0aHJvdyBvdXIgYXNzdW1wdGlvbnMgb2YgaG93IG1hY2hpbmVzIHdvcmsgb3V0IHRoZSB3aW5kb3cuIFdoZW4gZGVhbGluZyB3aXRoIGEgc2luZ2xlIGNvbXB1dGVyLCB3ZSBtaWdodCBldmVuIGZpbmQgdGhpbmdzIHRvIGJlIGtpbmQgb2Ygc2ltcGxlLiBCdXQgd2hhdCBhYm91dCB3aGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBjb21wdXRlcnMgaW52b2x2ZWQ/PC9wPjxwPldlbGwsIHRoYXTigJlzIGEgZGlmZmVyZW50IHN0b3J5IGVudGlyZWx5LjwvcD48aDQ+QmVmb3JlIHRoZXJlIHdlcmUgbWFueSwgdGhlcmUgd2FzwqBvbmU8L2g0PjxwPkluIG9yZGVyIHRvIHVuZGVyc3RhbmQgd2hhdCBleGFjdGx5IGNvbnN0aXR1dGVzIGEgPGVtPmRpc3RyaWJ1dGVkPC9lbT4gc3lzdGVtLCB3ZSBtdXN0IGZpcnN0IHVuZGVyc3RhbmQgd2hhdCBpcyBub3QgYSBkaXN0cmlidXRlZCBzeXN0ZW0uIFRvIGJlIGNsZWFyLCB0aGVyZSBpcyBjZXJ0YWlubHkgc29tZSBkaXNwdXRlIHdoZW4gaXQgY29tZXMgdG8gZGVmaW5pbmcgd2hhdCBleGFjdGx5IGlzIOKAnDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vamVzc2l0cm9uL3N0YXR1cy83MDE0MzUyMjg4NDY0MzIyNTYiPnRoZSBvcHBvc2l0ZTwvYT7igJ0gb2YgYSBkaXN0cmlidXRlZCBzeXN0ZW0uIEluIHRoZW9yeSwgd2UgY291bGQgZGVmaW5lIHRoZSBvcHBvc2l0ZSBvZiBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBpbiBkaWZmZXJlbnQgd2F5cywgYmVjYXVzZSB0aGUgZGVmaW5pdGlvbiBvZiBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBzb21ld2hhdCBkZXBlbmRzIG9uIHdoYXQgdGhlIDxlbT5jb21wb25lbnRzPC9lbT4gb2YgdGhlIHN5c3RlbSByZWFsbHkgYXJlLiBCdXQgbW9yZSBvbiB0aGF0IGluIGHCoGJpdC48L3A+PHA+V2UgY2FuIHRoaW5rIG9mIGEgbm9uLWRpc3RyaWJ1dGVkIHN5c3RlbSBhcyBhIOKAnHNpbmdsZeKAnSBzeXN0ZW0uIEEgPHN0cm9uZz48ZW0+c2luZ2xlIHN5c3RlbSA8L2VtPjwvc3Ryb25nPmlzIG9uZSB0aGF0IGRvZXMgPGVtPm5vdDwvZW0+IGNvbW11bmljYXRlIHdpdGggb3RoZXJzIGFuZCBmdW5jdGlvbnMgb24gaXRzIG93biBpcyA8ZW0+bm90PC9lbT4gYSBkaXN0cmlidXRlZCBzeXN0ZW0uPC9wPjxmaWd1cmU+PGltZyBhbHQ9IiIgc3JjPSJodHRwczovL2Nkbi1pbWFnZXMtMS5tZWRpdW0uY29tL21heC8xMDI0LzEqeGpqUFF5Y29ZWXBhZ3U5WW9hR1dDUS5qcGVnIiAvPjxmaWdjYXB0aW9uPldoYXQgaXMgTk9UIGEgZGlzdHJpYnV0ZWQgc3lzdGVtPzwvZmlnY2FwdGlvbj48L2ZpZ3VyZT48cD5BIHNpbmdsZSBwcm9jZXNzIG9uIG91ciBjb21wdXRlciBpcyBhIHNpbmdsZSBzeXN0ZW0sIHdoaWNoIG9wZXJhdGVzIG9uIGl0cyBvd24uIElmIGEgcHJvY2VzcyBkb2VzIG5vdCBjb21tdW5pY2F0ZSB3aXRoIDxlbT5vdGhlcjwvZW0+IHByb2Nlc3NlcywgdGhlbiBpdCBpbmhlcmVudGx5IGlzbuKAmXQgcGFydCBvZiBhIGxhcmdlciBzeXN0ZW0uIFdlIGNvdWxkIGFsc28gdGhpbmsgb2Ygb3VyIG1hY2hpbmUgb24gaXRzIG93biwgZGlzY29ubmVjdGVkIGZyb20gdGhlIGludGVybmV0LCBhcyBhIOKAnHNpbmdsZeKAnSBzeXN0ZW3igIrigJTigIphbHRob3VnaCB0aGVyZSBoYXMgYmVlbiByZXNlYXJjaCB3aGljaCBjbGFpbXMgb3RoZXJ3aXNlIChsaWtlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnVzZW5peC5vcmcvbGVnYWN5L2V2ZW50cy9ob3RvczA5L3RlY2gvZnVsbF9wYXBlcnMvYmF1bWFubi9iYXVtYW5uLnBkZiI+dGhpcyAyMDA5wqBwYXBlcjwvYT4pLjwvcD48cD5UaGUgd29yZCA8c3Ryb25nPjxlbT5kaXN0cmlidXRlPC9lbT48L3N0cm9uZz4gbWVhbnMgdG8gZGlzcGVyc2UsIHNjYXR0ZXIsIG9yIHNwcmVhZCBzb21ldGhpbmcgYWNyb3NzIGEgc3BhY2UuIElmIHdlIGNvbnNpZGVyIHRoZSBkZWZpbml0aW9uIG9mIHRoaXMgd29yZCBhbmQgPGVtPmhvdzwvZW0+IGEgc2luZ2xlIHN5c3RlbSB3b3JrcywgdGhlbiBpdCBiZWNvbWVzIHByZXR0eSBldmlkZW50IHRoYXQgYSBzaW5nbGUgc3lzdGVtIG9uIGl0cyBvd24gaXMgbm90IGEgZGlzdHJpYnV0ZWQgc3lzdGVtLiBUaGVyZSBpcyBvbmx5IDxlbT5vbmU8L2VtPiBtYWNoaW5lIHdvcmtpbmcgb24gaXRzIG93biwgc28gb2J2aW91c2x5IHRoaXMgc2luZ2xlIG1hY2hpbmUgY2Fu4oCZdCBiZSBzY2F0dGVyZWQgYWJvdXQhPC9wPjxwPlNvIGluIHRoYXQgY2FzZSwgd2hhdCBhY3R1YWxseSA8ZW0+aXM8L2VtPiBhIGRpc3RyaWJ1dGVkIHN5c3RlbT8gV2VsbCwgaWYgd2UgdGhpbmsgYWJvdXQgaG93IG1hY2hpbmVzIGluIHRoZSByZWFsIHdvcmxkIHJlYWxseSBpbnRlcmFjdCB3ZSBiZWdpbiB0byByZWFsaXplIHRoYXQsIGFjdHVhbGx5LCA8ZW0+bW9zdCA8L2VtPmNvbXB1dGVycyBleGlzdCB3aXRoaW4gYSBkaXN0cmlidXRlZCBzeXN0ZW0uIENvbXB1dGVycyBhcmUgcmFyZWx5IHVzZWQgaW4gdGhlIGNvbnRleHQgb2YganVzdCB0aGVtc2VsdmVzOyB3ZeKAmXJlIGFsbW9zdCBhbHdheXMgdXNpbmcgdGhlbSB0byBpbnRlcmFjdCB3aXRoIHNvbWUgc29ydCBvZiBhcHBsaWNhdGlvbiBvcsKgc2VydmljZS48L3A+PGJsb2NrcXVvdGU+SWYgeW914oCZdmUgZXZlciBwbGF5ZWQgYSBtdWx0aXBsYXllciBnYW1lIG9ubGluZSwgYm9va2VkIGEgZmxpZ2h0LCB0d2VldGVkIGEgY2F0IGdpZiwgc3RyZWFtZWQgYSBOZXRmbGl4IHNob3csIG9yIGJvdWdodCBhIG9uZXNpZSBvbiBBbWF6b27igIrigJTigIp5b3UgcmVsaWVkIG9uIGEgZGlzdHJpYnV0ZWQgc3lzdGVtIHRvIGRvwqBpdC48L2Jsb2NrcXVvdGU+PHA+SW5kZWVkLCB5b3UgcHJvYmFibHkgaW50ZXJhY3Qgd2l0aCB0aGUgbGFyZ2VzdCBkaXN0cmlidXRlZCBzeXN0ZW0gb24gYSBkYWlseSBiYXNpczogdGhlIEludGVybmV0ISBCdXQgZGlzdHJpYnV0ZWQgc3lzdGVtcyBhcmVu4oCZdCBhbGwgbGFyZ2Utc2NhbGUuIEluIGZhY3QsIHRoZSBsYXJnZW5lc3Mgb2YgdGhlbSBpc27igJl0IGV2ZW4gd2hhdCBtYWtlcyB0aGVtIGRpc3RyaWJ1dGVkLjwvcD48ZmlndXJlPjxpbWcgYWx0PSIiIHNyYz0iaHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9tYXgvMTAyNC8xKjNuR0hpVnlYQzczXzVST1dnMmxPZlEuanBlZyIgLz48ZmlnY2FwdGlvbj5EaXN0cmlidXRlZCBzeXN0ZW06IGEgZGVmaW5pdGlvbi48L2ZpZ2NhcHRpb24+PC9maWd1cmU+PHA+QSA8c3Ryb25nPjxlbT5kaXN0cmlidXRlZCBzeXN0ZW08L2VtPjwvc3Ryb25nPiBpcyBub3RoaW5nIG1vcmUgdGhhbiBtdWx0aXBsZSBlbnRpdGllcyB0aGF0IHRhbGsgdG8gb25lIGFub3RoZXIgaW4gc29tZSB3YXksIHdoaWxlIGFsc28gcGVyZm9ybWluZyB0aGVpciBvd24gb3BlcmF0aW9ucy4gU3VjaCBhIHN5c3RlbSBjb3VsZCBiZSBzb21ldGhpbmcgYXMgc2ltcGxlIGFzIHNtYXJ0IHNlbnNvciBvciBhIHdpcmVsZXNzIHBsdWcgaW4geW91ciBob3VzZSB0aGF0IGNhcHR1cmVzIGFuZCBzZW5kcyBkYXRhIHRocm91Z2ggYSB3aWZpIG5ldHdvcmssIG9yIGV2ZW4ganVzdCBhIHdpcmVsZXNzIGtleWJvYXJkIG9yIG1vdXNlIHRoYXQgY2FuIGNvbm5lY3QgdG8geW91csKgbGFwdG9wLjwvcD48cD5KdXN0IGFzIGxvbmcgYXMgYWxsIHRoZSBwcm9jZXNzZXMgaW4gYSBzeXN0ZW0gYXJlIGJvdGggPHN0cm9uZz48ZW0+YXV0b25vbW91czwvZW0+PC9zdHJvbmc+LCBvciBjYXBhYmxlIG9mIGRvaW5nIHBlcmZvcm1pbmcgb3duIG9wZXJhdGlvbnMsIHdoaWxlIGFsc28gYWJsZSB0byBjb21tdW5pY2F0ZSB3aXRoIG90aGVyIHByb2Nlc3NlcyBpbiB0aGUgc3lzdGVtLCB3ZSBjYW4gY2xhc3NpZnkgdGhlIHN5c3RlbSBhcyBiZWluZyA8ZW0+ZGlzdHJpYnV0ZWQ8L2VtPi48L3A+PGg0Pk5vZGVzIHRoYXQgc3RpY2vCoHRvZ2V0aGVyPC9oND48cD5Ob3cgdGhhdCB3ZeKAmXJlIGEgYml0IG1vcmUgZmFtaWxpYXIgd2l0aCB3aGF0IGEgZGlzdHJpYnV0ZWQgc3lzdGVtIGlzLCBsZXTigJlzIHRha2UgYSBjbG9zZXIgbG9vayBhdCBpdOKAmXMgbWFpbiBjaGFyYWN0ZXJz4oCK4oCU4oCKbmFtZWx5LCB0aGUg4oCcZW50aXRpZXPigJ0gd2l0aGluIHRoZcKgc3lzdGVtITwvcD48cD5Zb3UgbWF5IGhhdmUgbm90aWNlZCB0aGF0IEnigJl2ZSByZWZlcnJlZCB0byB0aGUgY29tcG9uZW50cyBvZiBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBhcyBhIOKAnGNvbXB1dGVy4oCdLCDigJxwcm9jZXNz4oCdLCBhbmQgZXZlbiBqdXN0IGFzIGEg4oCcbWFjaGluZeKAnS4gVGhlIGV4YWN0IHRlcm0gdGhhdCB3ZSB1c2UgdG8gZGVzY3JpYmUgdGhlIHBpZWNlcyBvZiBhIGRpc3RyaWJ1dGVkIHN5c3RlbSB0cnVseSBkZXBlbmQgdXBvbiB3aGF0IHRoZSBzeXN0ZW0gaXRzZWxmIGxvb2tzIGxpa2UsIGFuZCB3aGF0IGtpbmQgb2Ygc3lzdGVtIGl0IGlzLiBJZiB0aGUgc3lzdGVtIGlzIGEgYnVuY2ggb2YgZGlzdHJpYnV0ZWQgc2VydmVycywgdGhlbiBtYXliZSB0aGUgY29tcG9uZW50cyBjb3VsZCBiZSByZWZlcnJlZCB0byBhcyDigJxzZXJ2ZXJz4oCdOyBpZiB0aGUgc3lzdGVtIGludm9sdmVzIHByb2Nlc3NlcyB0YWxraW5nIHRvIG9uZSBhbm90aGVyLCB0aGVuIHBlcmhhcHMgdGhlIGVudGl0aWVzIGFyZSBqdXN0IOKAnHByb2Nlc3Nlc+KAnS48L3A+PHA+VG8gaGVscCBjb21iYXQgdGhlIGRpc2NyZXBhbmN5IGluIHRlcm1pbm9sb2d5IGhlcmUsIHdlIGFjdHVhbGx5IGNhbiB1c2UgYSBkaWZmZXJlbnQsIG1vcmUgZ2VuZXJhbCB0ZXJtIGFsdG9nZXRoZXIuIFdlIGNhbiByZWZlciB0byB0aGUgaW5kaXZpZHVhbCBlbnRpdGllcyBpbiBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBhcyB0aGUgPHN0cm9uZz48ZW0+bm9kZXM8L2VtPjwvc3Ryb25nPiBvZiB0aGXCoHN5c3RlbS48L3A+PGZpZ3VyZT48aW1nIGFsdD0iIiBzcmM9Imh0dHBzOi8vY2RuLWltYWdlcy0xLm1lZGl1bS5jb20vbWF4LzEwMjQvMSpidDNnYzR6Sm93MHp0ek11dS1uMU9BLmpwZWciIC8+PGZpZ2NhcHRpb24+Tm9kZXMgaW4gYSBkaXN0cmlidXRlZCBzeXN0ZW06IGEgZGVmaW5pdGlvbi48L2ZpZ2NhcHRpb24+PC9maWd1cmU+PHA+SWYgdGhlIHRlcm0g4oCcbm9kZeKAnSBmZWVscyBmYW1pbGlhciAoYW5kIHJlbWluZHMgeW91IG9mIDxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9iYXNlY3MvYS1nZW50bGUtaW50cm9kdWN0aW9uLXRvLWdyYXBoLXRoZW9yeS03Nzk2OTgyOWVhZDgiPmdyYXBoIHRoZW9yeTwvYT4pLCB0aGVuIHlvdXIgaW5zdGluY3QgaXMgY29ycmVjdOKAiuKAlOKAinRoZXJlIGlzIGluZGVlZCBhIGNvbm5lY3Rpb24gaGVyZSEgQW5kIGlmIHdlIHRoaW5rIGFib3V0IGEgZGlzdHJpYnV0ZWQgc3lzdGVtIGJlaW5nIGEgbmV0d29yayBvZiBjb21wdXRpbmcgZWxlbWVudHMgKHdoaWNoIGlzIGV4YWN0bHkgd2hhdCB0aGV5IGFyZSksIHRoZW4gd2UgY2FuIHZpc3VhbGl6ZSB0aGF0IG5ldHdvcmsgYXMgYSBncmFwaCBtYWRlIHVwIG9mIGludGVyY29ubmVjdGVkIG5vZGVzLjwvcD48cD5TaW5jZSB3ZSBrbm93IHRoYXQgYSBkaXN0cmlidXRlZCBzeXN0ZW0gY2FuIGZ1bmN0aW9uIG9uIGEgbGFyZ2Ugb3Igc21hbGwgc2NhbGUsIHdlIGFsc28gY2FuIGRlZHVjZSB0aGF0IHRoZSBhY3R1YWwgbm9kZXMgdGhlbXNlbHZlcyBjYW4gdmFyeSBpbiBuYXR1cmUuIEEgbm9kZSBjb3VsZCBiZSBhIGhhcmR3YXJlIGRldmljZSAobGlrZSBhIHNlbnNvciksIG9yIGl0IGNvdWxkIGl0IGNvdWxkIGJlIGEgc29mdHdhcmUgcHJvY2VzcyAoYSBjbGllbnQgb3IgYSBzZXJ2ZXIpLiBUaGUgbm9kZXMgdGhlbXNlbHZlcyBhbHNvIG5lZWQgbm90IGJlIGluIHRoZSBzYW1lIHBsYWNl4oCK4oCU4oCKaGVuY2UgdGhlIOKAnGRpc3RyaWJ1dGlvbuKAnSBvZiB0aGUgc3lzdGVt4oCK4oCU4oCKYW5kIGNvdWxkIHZlcnkgd2VsbCBiZSBwaHlzaWNhbGx5IHNlcGFyYXRlZCBieSBncmVhdCBkaXN0YW5jZXMuPC9wPjxoND5BIG5ldyB3YXkgdG8ga25vd8Kgbm9kZXM8L2g0PjxwPkV2ZW4gdGhvdWdoIHRoZSBub2RlcyBpbiBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBjb3JyZXNwb25kIHNvIHNpbWlsYXJseSB0byB0aGUgbm9kZXMgaW4gYSBncmFwaCwgdGhlcmUgYXJlIHNvbWUgYXNwZWN0cyB0byB0aGUgbm9kZXMgaW4gYSBkaXN0cmlidXRlZCBzeXN0ZW0gdGhhdCBtYWtlIHRoaW5ncyBhIGxpdHRsZSB0cmlja3kuIFRoZXJlIGFyZSBzb21lIGFzc3VtcHRpb25zIHdlIG1ha2Ugd2hlbiBkZWFsaW5nIHdpdGggYSBzaW5nbGUgc3lzdGVtIHRoYXQgcHJvdmUgdG8gYmUgaW5jb3JyZWN0IHdoZW4gaXQgY29tZXMgdG8gYSBkaXN0cmlidXRlZCBzeXN0ZW0uIEFuZCB3aGVuIGl0IGNvbWVzIHRvIGRpc3RyaWJ1dGVkIGNvbXB1dGluZywgYWxtb3N0IGFsbCBvZiB0aGUgb2JzdGFjbGVzIHRoYXQgd2lsbCBjb21lIGluIG91ciBwYXRoIGhhdmUgdG8gZG8gd2l0aCBvbmUgdGhpbmc6IDxzdHJvbmc+PGVtPmNvbW11bmljYXRpb24gYmV0d2VlbsKgbm9kZXM8L2VtPjwvc3Ryb25nPi48L3A+PGZpZ3VyZT48aW1nIGFsdD0iIiBzcmM9Imh0dHBzOi8vY2RuLWltYWdlcy0xLm1lZGl1bS5jb20vbWF4LzEwMjQvMSoxdllxbDNaUTBOVjBWejFlMVN0RUV3LmpwZWciIC8+PGZpZ2NhcHRpb24+T3BlcmF0aW9ucyBpbiBhIG5vZGUgdnMuIGNvbW11bmljYXRpb24gYmV0d2VlbsKgbm9kZXMuPC9maWdjYXB0aW9uPjwvZmlndXJlPjxwPkJlY2F1c2UgdGhlIG5vZGVzIGluIGEgZGlzdHJpYnV0ZWQgc3lzdGVtIGFyZSBieSBkZWZpbml0aW9uIGF1dG9ub21vdXMsIHRoZXkgYXJlIGNhcGFibGUgb2YgcnVubmluZyB0aGVpciBvd24gb3BlcmF0aW9ucy4gVGhlIG9wZXJhdGlvbnMgdGhhdCB0YWtlIHBsYWNlIDxlbT53aXRoaW4gYSBub2RlPC9lbT4gKGFyZSBydW4gYnkgdGhlIG5vZGUgaXRzZWxmKSBuZWVkIG5vdCByZWx5IG9uIGV4dGVybmFsIGluZm9ybWF0aW9uLiBJbiBvdGhlciB3b3JkcywgYSBub2RlIGNhbiBydW4gaXRzIG93biBvcGVyYXRpb25zIHdpdGhvdXQgbmVlZGluZyB0byBjb21tdW5pY2F0ZSB3aXRoIG90aGVyIG5vZGVzIHRoYXQgZXhpc3Qgd2l0aGluIHRoZSBkaXN0cmlidXRlZCBzeXN0ZW0uIFRoaXMgbWVhbnMgdGhhdCB0aGUgbm9kZSBjYW4gcnVuIGl0cyBvd24gb3BlcmF0aW9ucywgd2l0aG91dCBhbnlvbmXigJlzIGhlbHAsIGFuZCBjYW4gcnVuIHRoZW3CoHF1aWNrbHkuPC9wPjxibG9ja3F1b3RlPk9wZXJhdGlvbnMgd2l0aGluIGEgbm9kZSBhcmUgZmFzdDsgaG93ZXZlciwgdGhlIHNhbWUgY2Fubm90IGJlIHNhaWQgZm9yIGNvbW11bmljYXRpb24gYmV0d2VlbsKgbm9kZXMuPC9ibG9ja3F1b3RlPjxwPkFzIHdlIG5vdyBrbm93LCB0aGUgbm9kZXMgb2YgYSBzeXN0ZW0gY291bGQgYmUgbG9jYXRlZCBpbiBkaWZmZXJlbnQgcGxhY2VzIGFuZCBhcmUgcmVsaWFudCB1cG9uIHRoZSBkaXN0cmlidXRlZCBzeXN0ZW0gYW5kIGl0cyBuZXR3b3JrIHRvIGRvIGFsbCB0aGVpciBjaGF0dGluZyBiYWNrIGFuZCBmb3J0aCwgY29tbXVuaWNhdGlvbiBpcyBhbiBlbnRpcmVseSBkaWZmZXJlbnQgc3RvcnkuIFdoaWxlIHBlcmZvcm1pbmcgdGFza3Mgd2l0aGluIGEgbm9kZSBtaWdodCBiZSBmYXN0LCBjb21tdW5pY2F0aW5nIGJldHdlZW4gdHdvIG5vZGVzIGlzIG5vdCBndWFyYW50ZWVkIHRvIGJlIHNvLiBJbiBmYWN0LCBjb21tdW5pY2F0aW9uIGJldHdlZW4gdHdvIG5vZGVzIGlzIG9mdGVuIHByZXR0eSBzbG93IChub3QgdG8gbWVudGlvbiB1bnJlbGlhYmxlISksIHdoaWNoIGhhcHBlbnMgdG8gYmUgb25lIG9mIHRoZSBiaWdnZXN0IHByb2JsZW1zIGluIGRpc3RyaWJ1dGVkIGNvbXB1dGluZy48L3A+PGZpZ3VyZT48aW1nIGFsdD0iIiBzcmM9Imh0dHBzOi8vY2RuLWltYWdlcy0xLm1lZGl1bS5jb20vbWF4LzEwMjQvMSowcVd6VDNabHF0cFktcTRVOTBtZEFBLmpwZWciIC8+PGZpZ2NhcHRpb24+QSBub2Rl4oCZcyBvcGVyYXRpb25zIG9jY3VyIGluwqBvcmRlci48L2ZpZ2NhcHRpb24+PC9maWd1cmU+PHA+Tm90IG9ubHkgZG8gb3BlcmF0aW9ucyB3aXRoaW4gYSBzaW5nbGUgbm9kZSBvY2N1ciBxdWlja2x54oCK4oCU4oCKdGhleSBhbHNvIGhhcHBlbiBpbiBvcmRlci4gVGhpcyBtaWdodCBzZWVtIGFzIGFuIG9idmlvdXMgZmFjdCB0byB1cyBhdCBmaXJzdCBiZWNhdXNlIDxlbT5vZiBjb3Vyc2U8L2VtPiBldmVudHMgaGFwcGVuIGluIHRoZSBvcmRlciwgcmlnaHQ/IFdlbGwsIHdoZW4gaXQgY29tZXMgdG8gZGlzdHJpYnV0ZWQgc3lzdGVtcywgdGhlIGFuc3dlciBpc+KApm5vdMKgYWx3YXlzLjwvcD48cD5FdmVuIHRob3VnaCB0aGUgb3BlcmF0aW9ucyB3aXRoaW4gYSBub2RlIG9jY3VyIGluIG9yZGVyLCB0aGUgbW9tZW50IHRoYXQgbXVsdGlwbGUgbm9kZXMgaGF2ZSB0byB3b3JrIHRvZ2V0aGVyIGluIGEgZGlzdHJpYnV0ZWQgc3lzdGVtLCB0aGluZ3MgY2FuIGdldCBhIGxpdHRsZSBtZXNzaWVyLiBPbmNlIHdlIG1vdmUgZnJvbSBhIHNpbmdsZSBzeXN0ZW0vYSBzaW5nbGUgbm9kZSB0byBhIGRpc3RyaWJ1dGVkIHN5c3RlbS9tdWx0aXBsZSBub2RlcywgdGhlbiBpdHMgcG9zc2libGUgZm9yIHRoZSBvcGVyYXRpb25zIGFjcm9zcyBhIGdyb3VwIG9mIG5vZGVzIHRvIHJlbmRlciBpbiBhbiBpbmNvcnJlY3Qgb3JkZXIuPC9wPjxwPlBhcnQgb2YgdGhlIHJlYXNvbiBmb3IgdGhlIG9yZGVybGluZXNzIG9mIG9wZXJhdGlvbnMgd2l0aGluIGEgbm9kZSBpcyBkdWUgdG8gdGhlIGZhY3QgdGhhdCBlYWNoIG5vZGUgd2l0aGluIGEgc3lzdGVtIG9wZXJhdGVzIGFjY29yZGluZyB0byBpdHMgb3duwqBjbG9jay48L3A+PGZpZ3VyZT48aW1nIGFsdD0iIiBzcmM9Imh0dHBzOi8vY2RuLWltYWdlcy0xLm1lZGl1bS5jb20vbWF4LzEwMjQvMSpUWE0zZHBxZlNBc2hwOXlJN0NxNHd3LmpwZWciIC8+PGZpZ2NhcHRpb24+Tm9kZXMgb3BlcmF0ZSBhY2NvcmRpbmcgdG8gdGhlaXIgb3duwqBjbG9ja3MuPC9maWdjYXB0aW9uPjwvZmlndXJlPjxwPklmIHdlIHRoaW5rIGFib3V0IG9mIHRoZSBkaWZmZXJlbnQgdGhpbmdzIHRoYXQgY291bGQgYmUgYSBub2RlIHdpdGhpbiBhIGRpc3RyaWJ1dGVkIHN5c3RlbeKAiuKAlOKAimEgc2Vuc29yLCBwcm9jZXNzLCBzZXJ2ZXIgb3IgZGF0YWJhc2XigIrigJTigIp0aGlzIGZhY3QgYmVjb21lcyBhcHBhcmVudC4gQnV0IGFnYWluLCB3ZSBtaWdodCBiZSBhYmxlIHRvIGd1ZXNzIGhvdyB0aGlzIGNvdWxkIHBvdGVudGlhbGx5IGJlIHByb2JsZW1hdGljIGluIGEgZGlzdHJpYnV0ZWQgc3lzdGVtOiB3aGF0IGlmIHRoZSBjbG9ja3MgaW4gdHdvIHNlcGFyYXRlIG5vZGVzIGluIGEgc3lzdGVtIGRvbuKAmXQgcXVpdGUgbWF0Y2ggdXAgZXhhY3RseT8gVGhpcyBpcyBhbm90aGVyIGRpZmZpY3VsdCBwcm9ibGVtICh3aGljaCB3ZeKAmWxsIGRpc2N1c3Mgb24gaW4gdGhpcyBzZXJpZXMhKSB3aGVuIGl0IGNvbWVzIHRvIGRpc3RyaWJ1dGVkIGNvbXB1dGluZy48L3A+PHA+QWxsIG9mIHRoZSB0aGluZ3Mgd2Uga25vdyBhbmQgbG92ZSB3aGVuIGl0IGNvbWVzIHRvIGRlYWxpbmcgd2l0aCBpbmRpdmlkdWFsIG5vZGVzIHN0YXJ0IHNlZW0gdW5mYW1pbGlhciBhbmQgZmFyIGxlc3MgbG92YWJsZSBvbmNlIHdlIHRocm93IG1hbnkgbm9kZXMgaW50byB0aGUgbWl4LiBCdXQgdGhhdOKAmXMgdGhlIGZ1biBvZiBsZWFybmluZyBzb21ldGhpbmcgbmV34oCK4oCU4oCKbGlrZSBkaXN0cmlidXRlZCBzeXN0ZW1zISBXZeKAmXJlIGdvaW5nIHRvIGhhdmUgdG8gY2hhbmdlIG91ciBwZXJzcGVjdGl2ZSBhbmQgdGhlIHdheSB0aGF0IHdlIHRoaW5rIGFib3V0IHN5c3RlbXMsIGhvdyB0aGV5IHdvcmsgdG9nZXRoZXIgYXMgYSB3aG9sZSwgYW5kIHRoZSBkaWZmZXJlbnQgcGllY2VzIHRoYXQgYWxsb3cgdGhlbSB0byBkbyB0aGVpciBqb2IgZWZmZWN0aXZlbHkuPC9wPjxwPlNlZW1zIGxpa2UgYSBncmVhdCB3YXkgdG8gc3RhcnQgYSBicmFuZCBuZXcgc2VyaWVzLCBpZiB5b3UgYXNrIG1lLsKg8J+YijwvcD48aDQ+UmVzb3VyY2VzPC9oND48cD5UaGVyZSBpcyBzbyBtdWNoIHRvIGxlYXJuIGFib3V0IGRpc3RyaWJ1dGVkIHN5c3RlbXMsIGFuZCBtYW55IHBsYWNlcyB0byBzdGFydCEgSGVyZSBhcmUgc29tZSBpbnRyb2R1Y3RvcnkgcmVzb3VyY2VzIHRvIGhlbHAgY2VtZW50IHlvdXIgdW5kZXJzdGFuZGluZyBvZiB3aGF0IG1ha2VzIGEgZGlzdHJpYnV0ZWQgc3lzdGVtIGFuZCB0aGUgZW50aXRpZXMgdGhhdCBjb21wcmlzZcKgaXQuPC9wPjxvbD48bGk+PGEgaHJlZj0iaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGczAwNjA3LTAxNi0wNTA4LTcucGRmIj5BIGJyaWVmIGludHJvZHVjdGlvbiB0byBkaXN0cmlidXRlZCBzeXN0ZW1zPC9hPiwgTWFhcnRlbiB2YW4gU3RlZW4gJmFtcDsgQW5kcmV3IFMuIFRhbmVuYmF1bTwvbGk+PGxpPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9jb2lubW9ua3MvZnJvbS1sYXltYW4tdG8tc3VwZXJtYW4tZGlzdHJpYnV0ZWQtc3lzdGVtcy1hbi1pbnRyb2R1Y3Rpb24tZWY5NzJjZWRhYWJhIj5Gcm9tIGxheW1hbiB0byBzdXBlcm1hbjogZGlzdHJpYnV0ZWQgc3lzdGVtcyBhbiBpbnRyb2R1Y3Rpb248L2E+LCBNZWRpYW4gUmF3YXNoZGVoPC9saT48bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudWlvLm5vL3N0dWRpZXIvZW1uZXIvbWF0bmF0L2lmaS9JTkY1MDQwL2gxMS9sZWN0dXJlcy9JbnRyb0RTLTEucGRmIj5JbnRyb2R1Y3Rpb24gdG8gRGlzdHJpYnV0ZWQgU3lzdGVtcyAoRFMpPC9hPiwgUHJvZmVzc29yIEZyYW5rwqBFbGlhc3NlbjwvbGk+PC9vbD48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9OTkyMWY4NTIwNWM0IiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj48aHI+PHA+PGEgaHJlZj0iaHR0cHM6Ly9tZWRpdW0uY29tL2Jhc2Vkcy9tYW55LW5vZGVzLW9uZS1kaXN0cmlidXRlZC1zeXN0ZW0tOTkyMWY4NTIwNWM0Ij5NYW55IE5vZGVzLCBPbmUgRGlzdHJpYnV0ZWQgU3lzdGVtPC9hPiB3YXMgb3JpZ2luYWxseSBwdWJsaXNoZWQgaW4gPGEgaHJlZj0iaHR0cHM6Ly9tZWRpdW0uY29tL2Jhc2VkcyI+YmFzZWRzPC9hPiBvbiBNZWRpdW0sIHdoZXJlIHBlb3BsZSBhcmUgY29udGludWluZyB0aGUgY29udmVyc2F0aW9uIGJ5IGhpZ2hsaWdodGluZyBhbmQgcmVzcG9uZGluZyB0byB0aGlzIHN0b3J5LjwvcD5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICAgICAgPGl0ZW0+CiAgICAgICAgICAgIDx0aXRsZT48IVtDREFUQVtGaXhlZCEgVGhhbmtzIGZvciBjYXRjaGluZyB0aGF0IDopXV0+PC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0B2YWlkZWhpam9zaGkvZml4ZWQtdGhhbmtzLWZvci1jYXRjaGluZy10aGF0LTcxZGYyNGU2ODQ3MD9zb3VyY2U9cnNzLThmNTU5OTNjOTczZS0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNzFkZjI0ZTY4NDcwPC9ndWlkPgogICAgICAgICAgICA8ZGM6Y3JlYXRvcj48IVtDREFUQVtWYWlkZWhpIEpvc2hpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UaHUsIDE5IEp1bCAyMDE4IDE4OjAzOjU0IEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA3LTE5VDE4OjAzOjU0LjA3NFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5GaXhlZCEgVGhhbmtzIGZvciBjYXRjaGluZyB0aGF0wqA6KTwvcD48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NzFkZjI0ZTY4NDcwIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICAgICAgPGl0ZW0+CiAgICAgICAgICAgIDx0aXRsZT48IVtDREFUQVtUaGFua3MgZm9yIHBvaW50aW5nIGl0IG91dCwgb3RoZXIgZm9sa3MgaGF2ZSBhcyB3ZWxsLl1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AdmFpZGVoaWpvc2hpL3RoYW5rcy1mb3ItcG9pbnRpbmctaXQtb3V0LW90aGVyLWZvbGtzLWhhdmUtYXMtd2VsbC1iNzA5NDZjNGMzYjI/c291cmNlPXJzcy04ZjU1OTkzYzk3M2UtLS0tLS0yPC9saW5rPgogICAgICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHBzOi8vbWVkaXVtLmNvbS9wL2I3MDk0NmM0YzNiMjwvZ3VpZD4KICAgICAgICAgICAgPGRjOmNyZWF0b3I+PCFbQ0RBVEFbVmFpZGVoaSBKb3NoaV1dPjwvZGM6Y3JlYXRvcj4KICAgICAgICAgICAgPHB1YkRhdGU+VGh1LCAxOSBKdWwgMjAxOCAxODowMTo0NiBHTVQ8L3B1YkRhdGU+CiAgICAgICAgICAgIDxhdG9tOnVwZGF0ZWQ+MjAxOC0wNy0xOVQxODowMTo0Ni43ODhaPC9hdG9tOnVwZGF0ZWQ+CiAgICAgICAgICAgIDxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbPHA+VGhhbmtzIGZvciBwb2ludGluZyBpdCBvdXQsIG90aGVyIGZvbGtzIGhhdmUgYXMgd2VsbC4gVGhlIGNhcHRpb24gZm9yIHRoZSBkcmF3aW5nIGhhcyBiZWVuIHVwZGF0ZWQgdG8gY2xhcmlmecKgdGhpcy48L3A+PGltZyBzcmM9Imh0dHBzOi8vbWVkaXVtLmNvbS9fL3N0YXQ/ZXZlbnQ9cG9zdC5jbGllbnRWaWV3ZWQmcmVmZXJyZXJTb3VyY2U9ZnVsbF9yc3MmcG9zdElkPWI3MDk0NmM0YzNiMiIgd2lkdGg9IjEiIGhlaWdodD0iMSI+XV0+PC9jb250ZW50OmVuY29kZWQ+CiAgICAgICAgPC9pdGVtPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbSGkgSmVyZW15LF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AdmFpZGVoaWpvc2hpL2hpLWplcmVteS1lYTFhOTljZjVkOTc/c291cmNlPXJzcy04ZjU1OTkzYzk3M2UtLS0tLS0yPC9saW5rPgogICAgICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHBzOi8vbWVkaXVtLmNvbS9wL2VhMWE5OWNmNWQ5NzwvZ3VpZD4KICAgICAgICAgICAgPGRjOmNyZWF0b3I+PCFbQ0RBVEFbVmFpZGVoaSBKb3NoaV1dPjwvZGM6Y3JlYXRvcj4KICAgICAgICAgICAgPHB1YkRhdGU+VGh1LCAxOSBKdWwgMjAxOCAxODowMDozNyBHTVQ8L3B1YkRhdGU+CiAgICAgICAgICAgIDxhdG9tOnVwZGF0ZWQ+MjAxOC0wNy0xOVQxODowMDozNy4yMTdaPC9hdG9tOnVwZGF0ZWQ+CiAgICAgICAgICAgIDxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbPHA+SGkgSmVyZW15LDwvcD48cD5Zb3XigJlyZSB0b3RhbGx5IHJpZ2h0LCB0aGlzIHdhcyBhIG1pc3Rha2UgaW4gdGhlIGRyYXdpbmcuIEnigJltIGp1c3QgY2F0Y2hpbmcgdXAgbm93IGFuZCBzYXcgdGhpcyBlcnJvciwgdG9vLiBJIGhhdmUgZml4ZWQgaXQgZm9yIG5vdyBieSB1cGRhdGluZyB0aGUgY2FwdGlvbiBmb3IgdGhlIGRyYXdpbmfCoDopPC9wPjxpbWcgc3JjPSJodHRwczovL21lZGl1bS5jb20vXy9zdGF0P2V2ZW50PXBvc3QuY2xpZW50Vmlld2VkJnJlZmVycmVyU291cmNlPWZ1bGxfcnNzJnBvc3RJZD1lYTFhOTljZjVkOTciIHdpZHRoPSIxIiBoZWlnaHQ9IjEiPl1dPjwvY29udGVudDplbmNvZGVkPgogICAgICAgIDwvaXRlbT4KICAgICAgICA8aXRlbT4KICAgICAgICAgICAgPHRpdGxlPjwhW0NEQVRBW0hpIEFsYmVydG8hXV0+PC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0B2YWlkZWhpam9zaGkvaGktYWxiZXJ0by02ZTc4ZjQ2ZTRmZWY/c291cmNlPXJzcy04ZjU1OTkzYzk3M2UtLS0tLS0yPC9saW5rPgogICAgICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0iZmFsc2UiPmh0dHBzOi8vbWVkaXVtLmNvbS9wLzZlNzhmNDZlNGZlZjwvZ3VpZD4KICAgICAgICAgICAgPGRjOmNyZWF0b3I+PCFbQ0RBVEFbVmFpZGVoaSBKb3NoaV1dPjwvZGM6Y3JlYXRvcj4KICAgICAgICAgICAgPHB1YkRhdGU+VGh1LCAxOSBKdWwgMjAxOCAxNzo1OTozNiBHTVQ8L3B1YkRhdGU+CiAgICAgICAgICAgIDxhdG9tOnVwZGF0ZWQ+MjAxOC0wNy0xOVQxNzo1OTozNi40OTJaPC9hdG9tOnVwZGF0ZWQ+CiAgICAgICAgICAgIDxjb250ZW50OmVuY29kZWQ+PCFbQ0RBVEFbPHA+SGkgQWxiZXJ0byEgWW914oCZcmUgdG90YWxseSBjb3JyZWN0LCB0aGlzIHdhcyBhIG1pc3Rha2Ugb24gbXkgcGFydCBpbiB0aGUgZHJhd2luZy4gSeKAmXZlIHVwZGF0ZWQgdGhlIGNhcHRpb24gdG8gZXhwbGFpbiB0aGUgY29ycmVjdCB0cmF2ZXJzYWwgcGF0aCB0byBoZWxwIG91dCBmdXR1cmUgcmVhZGVyc8KgOik8L3A+PGltZyBzcmM9Imh0dHBzOi8vbWVkaXVtLmNvbS9fL3N0YXQ/ZXZlbnQ9cG9zdC5jbGllbnRWaWV3ZWQmcmVmZXJyZXJTb3VyY2U9ZnVsbF9yc3MmcG9zdElkPTZlNzhmNDZlNGZlZiIgd2lkdGg9IjEiIGhlaWdodD0iMSI+XV0+PC9jb250ZW50OmVuY29kZWQ+CiAgICAgICAgPC9pdGVtPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbSGkgRGlub3MhIFRoYW5rcyBmb3IgcG9pbnRpbmcgdGhpcyBvdXQsIGxvb2tzIGxpa2UgdGhlIGRyYXdpbmcgd2FzIHN1cGVyIGNvbmZ1c2luZyBhbmQgbWlzbGVhZGluZ+KApl1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AdmFpZGVoaWpvc2hpL2hpLWRpbm9zLXRoYW5rcy1mb3ItcG9pbnRpbmctdGhpcy1vdXQtbG9va3MtbGlrZS10aGUtZHJhd2luZy13YXMtc3VwZXItY29uZnVzaW5nLWFuZC1taXNsZWFkaW5nLTNhMzhlMDdhM2UxYj9zb3VyY2U9cnNzLThmNTU5OTNjOTczZS0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvM2EzOGUwN2EzZTFiPC9ndWlkPgogICAgICAgICAgICA8ZGM6Y3JlYXRvcj48IVtDREFUQVtWYWlkZWhpIEpvc2hpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UaHUsIDE5IEp1bCAyMDE4IDE3OjU4OjM2IEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA3LTE5VDE3OjU4OjM2LjM1OFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5IaSBEaW5vcyEgVGhhbmtzIGZvciBwb2ludGluZyB0aGlzIG91dCwgbG9va3MgbGlrZSB0aGUgZHJhd2luZyB3YXMgc3VwZXIgY29uZnVzaW5nIGFuZCBtaXNsZWFkaW5nIHdpdGggdGhhdCBtaXN0YWtlLiBJ4oCZdmUgZ29uZSBhaGVhZCBhbmQgdXBkYXRlZCB0aGUgY2FwdGlvbiBmb3IgaXQgKGlmIEkgY2FuIGZpbmQgdGltZSBpbiB0aGUgZnV0dXJlLCBJ4oCZbGwgdHJ5IHRvIHVwZGF0ZSB0aGUgZHJhd2luZyBpdHNlbGYpLiBIb3BlZnVsbHkgdGhpcyBoZWxwc8KgOik8L3A+PHA+VGhhbmtzIGZvciByZWFkaW5nISE8L3A+PGltZyBzcmM9Imh0dHBzOi8vbWVkaXVtLmNvbS9fL3N0YXQ/ZXZlbnQ9cG9zdC5jbGllbnRWaWV3ZWQmcmVmZXJyZXJTb3VyY2U9ZnVsbF9yc3MmcG9zdElkPTNhMzhlMDdhM2UxYiIgd2lkdGg9IjEiIGhlaWdodD0iMSI+XV0+PC9jb250ZW50OmVuY29kZWQ+CiAgICAgICAgPC9pdGVtPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbSGkgTWF0dCEgSnVzdCByZXZpZXdpbmcgc29tZSBvbGQgcG9zdHMgbm93IGFuZCBjYXRjaGluZyB1cC5dXT48L3RpdGxlPgogICAgICAgICAgICA8bGluaz5odHRwczovL21lZGl1bS5jb20vQHZhaWRlaGlqb3NoaS9oaS1tYXR0LWp1c3QtcmV2aWV3aW5nLXNvbWUtb2xkLXBvc3RzLW5vdy1hbmQtY2F0Y2hpbmctdXAtOGY2N2EzMTRkZDVlP3NvdXJjZT1yc3MtOGY1NTk5M2M5NzNlLS0tLS0tMjwvbGluaz4KICAgICAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL21lZGl1bS5jb20vcC84ZjY3YTMxNGRkNWU8L2d1aWQ+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW1ZhaWRlaGkgSm9zaGldXT48L2RjOmNyZWF0b3I+CiAgICAgICAgICAgIDxwdWJEYXRlPlRodSwgMTkgSnVsIDIwMTggMTc6NTc6MTIgR01UPC9wdWJEYXRlPgogICAgICAgICAgICA8YXRvbTp1cGRhdGVkPjIwMTgtMDctMTlUMTc6NTc6MTIuNTMwWjwvYXRvbTp1cGRhdGVkPgogICAgICAgICAgICA8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPkhpIE1hdHQhIEp1c3QgcmV2aWV3aW5nIHNvbWUgb2xkIHBvc3RzIG5vdyBhbmQgY2F0Y2hpbmcgdXAuIFlvdeKAmXJlIHRvdGFsbHkgcmlnaHQsIGFuZCB0aGlzIHdhcyBhIG1pc3Rha2Ugb24gbXkgcGFydC4gSSBwcm9iYWJseSBzaG91bGQgaGF2ZSBjaG9zZW4gYW4gZWFzaWVyIGV4YW1wbGUg8J+Ygi4gSW4gYW55IGNhc2UsIEnigJl2ZSB1cGRhdGVkIHRoZSBkcmF3aW5nIGNhcHRpb24gdG8gcG9pbnQgb3V0IHRoaXMgbWlzdGFrZSBhbmQgY2xhcmlmeSB0aGUgY29ycmVjdCB0cmF2ZXJzYWwgcGF0aC48L3A+PHA+VGhhbmsgeW91IGZvciB0YWtpbmcgdGhlIHRpbWUgdG8gcG9pbnQgdGhpcyBvdXQgaW4gYSB2ZXJ5IGtpbmQgd2F5LiBJIGFwcHJlY2lhdGUgaXQhIFRoYW5rcyBmb3IgcmVhZGluZ8KgOik8L3A+PGltZyBzcmM9Imh0dHBzOi8vbWVkaXVtLmNvbS9fL3N0YXQ/ZXZlbnQ9cG9zdC5jbGllbnRWaWV3ZWQmcmVmZXJyZXJTb3VyY2U9ZnVsbF9yc3MmcG9zdElkPThmNjdhMzE0ZGQ1ZSIgd2lkdGg9IjEiIGhlaWdodD0iMSI+XV0+PC9jb250ZW50OmVuY29kZWQ+CiAgICAgICAgPC9pdGVtPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbWW914oCZcmUgY29ycmVjdCwgZ29vZCBjYXRjaCEgSSBoYXZlIGZpeGVkIHRoaXMgdHlwbyA6KV1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AdmFpZGVoaWpvc2hpL3lvdXJlLWNvcnJlY3QtZ29vZC1jYXRjaC1pLWhhdmUtZml4ZWQtdGhpcy10eXBvLTFiOWJhYWFiN2MyYz9zb3VyY2U9cnNzLThmNTU5OTNjOTczZS0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvMWI5YmFhYWI3YzJjPC9ndWlkPgogICAgICAgICAgICA8ZGM6Y3JlYXRvcj48IVtDREFUQVtWYWlkZWhpIEpvc2hpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UaHUsIDE5IEp1bCAyMDE4IDE3OjQzOjA5IEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA3LTE5VDE3OjQzOjA5LjM2MVo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5Zb3XigJlyZSBjb3JyZWN0LCBnb29kIGNhdGNoISBJIGhhdmUgZml4ZWQgdGhpcyB0eXBvwqA6KTwvcD48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9MWI5YmFhYWI3YzJjIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICAgICAgPGl0ZW0+CiAgICAgICAgICAgIDx0aXRsZT48IVtDREFUQVtZb3XigJlyZSBjb3JyZWN0LCBnb29kIGNhdGNoISBJIGhhdmUgZml4ZWQgdGhpcyB0eXBvIDopXV0+PC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0B2YWlkZWhpam9zaGkveW91cmUtY29ycmVjdC1nb29kLWNhdGNoLWktaGF2ZS1maXhlZC10aGlzLXR5cG8tODlmMzVlNTdhNTA5P3NvdXJjZT1yc3MtOGY1NTk5M2M5NzNlLS0tLS0tMjwvbGluaz4KICAgICAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9ImZhbHNlIj5odHRwczovL21lZGl1bS5jb20vcC84OWYzNWU1N2E1MDk8L2d1aWQ+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW1ZhaWRlaGkgSm9zaGldXT48L2RjOmNyZWF0b3I+CiAgICAgICAgICAgIDxwdWJEYXRlPlRodSwgMTkgSnVsIDIwMTggMTc6NDI6MTMgR01UPC9wdWJEYXRlPgogICAgICAgICAgICA8YXRvbTp1cGRhdGVkPjIwMTgtMDctMTlUMTc6NDI6MTMuODg2WjwvYXRvbTp1cGRhdGVkPgogICAgICAgICAgICA8Y29udGVudDplbmNvZGVkPjwhW0NEQVRBWzxwPllvdeKAmXJlIGNvcnJlY3QsIGdvb2QgY2F0Y2ghIEkgaGF2ZSBmaXhlZCB0aGlzIHR5cG/CoDopPC9wPjxpbWcgc3JjPSJodHRwczovL21lZGl1bS5jb20vXy9zdGF0P2V2ZW50PXBvc3QuY2xpZW50Vmlld2VkJnJlZmVycmVyU291cmNlPWZ1bGxfcnNzJnBvc3RJZD04OWYzNWU1N2E1MDkiIHdpZHRoPSIxIiBoZWlnaHQ9IjEiPl1dPjwvY29udGVudDplbmNvZGVkPgogICAgICAgIDwvaXRlbT4KICAgICAgICA8aXRlbT4KICAgICAgICAgICAgPHRpdGxlPjwhW0NEQVRBW0kgd291bGQgbG92ZSB0bywgYnV0IEkgcHJvYmFibHkgd291bGRu4oCZdCBoYXZlIGVub3VnaCB0aW1lIHRvIHdyaXRlIGNvZGUgaWYgSSBkaWQgdGhhdCEg4pi677iPXV0+PC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0B2YWlkZWhpam9zaGkvaS13b3VsZC1sb3ZlLXRvLWJ1dC1pLXByb2JhYmx5LXdvdWxkbnQtaGF2ZS1lbm91Z2gtdGltZS10by13cml0ZS1jb2RlLWlmLWktZGlkLXRoYXQtJUVGJUI4JThGLTk4NTkwZGI1NTlhMT9zb3VyY2U9cnNzLThmNTU5OTNjOTczZS0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvOTg1OTBkYjU1OWExPC9ndWlkPgogICAgICAgICAgICA8ZGM6Y3JlYXRvcj48IVtDREFUQVtWYWlkZWhpIEpvc2hpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5XZWQsIDAzIEphbiAyMDE4IDE3OjEyOjM5IEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTAxLTAzVDE3OjEyOjM5LjUxMlo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD5JIHdvdWxkIGxvdmUgdG8sIGJ1dCBJIHByb2JhYmx5IHdvdWxkbuKAmXQgaGF2ZSBlbm91Z2ggdGltZSB0byB3cml0ZSBjb2RlIGlmIEkgZGlkIHRoYXQhwqDimLrvuI88L3A+PGltZyBzcmM9Imh0dHBzOi8vbWVkaXVtLmNvbS9fL3N0YXQ/ZXZlbnQ9cG9zdC5jbGllbnRWaWV3ZWQmcmVmZXJyZXJTb3VyY2U9ZnVsbF9yc3MmcG9zdElkPTk4NTkwZGI1NTlhMSIgd2lkdGg9IjEiIGhlaWdodD0iMSI+XV0+PC9jb250ZW50OmVuY29kZWQ+CiAgICAgICAgPC9pdGVtPgogICAgPC9jaGFubmVsPgo8L3Jzcz4=
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:16 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Wed, 02 Jan 2019 20:58:17 GMT
      Etag:
      - '"7142924e7d667ae88e4f995de5cfc1e5"'
      Last-Modified:
      - Sat, 22 Dec 2018 00:42:16 GMT
      Server:
      - nginx
      Strict-Transport-Security:
      - max-age=15724800
      X-Amz-Id-2:
      - ndfLTE4+Y0suYoz7MOlujip0DPHIIrShsjvuaBkA2Xrib3sm+lxSfbXqkTi3U5JvJ3wQc6b0OwU=
      X-Amz-Request-Id:
      - 5F0CF0206F8FC8E4
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '15222'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:17 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 02 Jan 2019 20:58:17 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://getpocket.com
        https://medium.com:443 https://*.medium.com:443 https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://*.lightstep.com https://*.branch.io https://app.zencoder.com ''self'';
        font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://use.typekit.net https://cdn-static-1.medium.com ''self''; frame-src
        chromenull: https: webviewprogressproxy: medium: ''self''; img-src blob: data:
        https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1546462697896:ccb3ea46ad8d
      X-Obvious-Info:
      - 36150-71bc633,71bc633369f
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 02 Jan 2019 21:13:17 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 493024956b35be20-MXP
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+V2VkLCAwMiBKYW4gMjAxOSAyMDo0MzoxOSBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA1LTA3VDE4OjIwOjMxLjU1MFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPkkmIzM5O20gYSBmdWxsLXN0YWNrIGRldmVsb3BlcjwvcD48cD4mI3gyMDBhOyZtZGFzaDsmI3gyMDBhOzxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYmVuZGhhbHBlcm4vc3RhdHVzLzk0ODI1NjA4MzM1MjczNTc0NCI+QGJlbmRoYWxwZXJuPC9hPjwvcD48L2Jsb2NrcXVvdGU+PHNjcmlwdCBzcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PjxzY3JpcHQ+ZnVuY3Rpb24gbm90aWZ5UmVzaXplKGhlaWdodCkge2hlaWdodCA9IGhlaWdodCA/IGhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQ7IHZhciByZXNpemVkID0gZmFsc2U7IGlmICh3aW5kb3cuZG9ua2V5ICYmIGRvbmtleS5yZXNpemUpIHtkb25rZXkucmVzaXplKGhlaWdodCk7IHJlc2l6ZWQgPSB0cnVlO31pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG9iaiA9IHtpZnJhbWU6IHdpbmRvdy5mcmFtZUVsZW1lbnQsIGhlaWdodDogaGVpZ2h0fTsgcGFyZW50Ll9yZXNpemVJZnJhbWUob2JqKTsgcmVzaXplZCA9IHRydWU7fWlmICh3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggPT09ICIjYW1wPTEiICYmIHdpbmRvdy5wYXJlbnQgJiYgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSkge3dpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe3NlbnRpbmVsOiAiYW1wIiwgdHlwZTogImVtYmVkLXNpemUiLCBoZWlnaHQ6IGhlaWdodH0sICIqIik7fWlmICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZSkge3dpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZS5wb3N0TWVzc2FnZShoZWlnaHQpOyByZXNpemVkID0gdHJ1ZTt9cmV0dXJuIHJlc2l6ZWQ7fXR3dHRyLmV2ZW50cy5iaW5kKCdyZW5kZXJlZCcsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOyB0d3R0ci5ldmVudHMuYmluZCgncmVzaXplJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7PC9zY3JpcHQ+PHNjcmlwdD5pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG1heFdpZHRoID0gcGFyc2VJbnQod2luZG93LmZyYW1lRWxlbWVudC5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOyBpZiAoIDUwMCAgPCBtYXhXaWR0aCkge3dpbmRvdy5mcmFtZUVsZW1lbnQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1MDAiKTt9fTwvc2NyaXB0PjxwPkdpdGh1YiBnaXN0wqBoZXJlPC9wPjxpZnJhbWUgc3JjPSIiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIj48YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZiI+aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWY8L2E+PC9pZnJhbWU+PHA+Y29kZSBibG9jazwvcD48cHJlPnRlc3RzZXRzZXRzZXRzZXRzZXRzZXQ8L3ByZT48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NmFmMDRiN2U1N2UxIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICA8L2NoYW5uZWw+CjwvcnNzPg==
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:17 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 02 Jan 2019 20:58:18 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://getpocket.com
        https://medium.com:443 https://*.medium.com:443 https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://*.lightstep.com https://*.branch.io https://app.zencoder.com ''self'';
        font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://use.typekit.net https://cdn-static-1.medium.com ''self''; frame-src
        chromenull: https: webviewprogressproxy: medium: ''self''; img-src blob: data:
        https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1546462698314:380317aa805
      X-Obvious-Info:
      - 36148-2e9ccc3,2e9ccc3d8ef
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 02 Jan 2019 21:13:18 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 49302497fea54316-MXP
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:18 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Wed, 02 Jan 2019 20:58:19 GMT
      Etag:
      - '"7142924e7d667ae88e4f995de5cfc1e5"'
      Last-Modified:
      - Sat, 22 Dec 2018 00:42:16 GMT
      Server:
      - nginx
      Strict-Transport-Security:
      - max-age=15724800
      X-Amz-Id-2:
      - 0uO16htUwQJHj+fHnxtACTk41jQUzwlREPhsqRczMvFYa6AkeQ8hXxYajERBA6rMJP2EeYIWXv0=
      X-Amz-Request-Id:
      - 9D6E0B9D0FB7B1FC
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '15222'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:19 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 02 Jan 2019 20:58:21 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://getpocket.com
        https://medium.com:443 https://*.medium.com:443 https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://*.lightstep.com https://*.branch.io https://app.zencoder.com ''self'';
        font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://use.typekit.net https://cdn-static-1.medium.com ''self''; frame-src
        chromenull: https: webviewprogressproxy: medium: ''self''; img-src blob: data:
        https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1546462701194:4a850ee8f971
      X-Obvious-Info:
      - 36150-71bc633,71bc633369f
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 02 Jan 2019 21:13:21 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 493024a9eeac3da7-MXP
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+V2VkLCAwMiBKYW4gMjAxOSAyMDo1ODoyMSBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA1LTA3VDE4OjIwOjMxLjU1MFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPkkmIzM5O20gYSBmdWxsLXN0YWNrIGRldmVsb3BlcjwvcD48cD4mI3gyMDBhOyZtZGFzaDsmI3gyMDBhOzxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYmVuZGhhbHBlcm4vc3RhdHVzLzk0ODI1NjA4MzM1MjczNTc0NCI+QGJlbmRoYWxwZXJuPC9hPjwvcD48L2Jsb2NrcXVvdGU+PHNjcmlwdCBzcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PjxzY3JpcHQ+ZnVuY3Rpb24gbm90aWZ5UmVzaXplKGhlaWdodCkge2hlaWdodCA9IGhlaWdodCA/IGhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQ7IHZhciByZXNpemVkID0gZmFsc2U7IGlmICh3aW5kb3cuZG9ua2V5ICYmIGRvbmtleS5yZXNpemUpIHtkb25rZXkucmVzaXplKGhlaWdodCk7IHJlc2l6ZWQgPSB0cnVlO31pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG9iaiA9IHtpZnJhbWU6IHdpbmRvdy5mcmFtZUVsZW1lbnQsIGhlaWdodDogaGVpZ2h0fTsgcGFyZW50Ll9yZXNpemVJZnJhbWUob2JqKTsgcmVzaXplZCA9IHRydWU7fWlmICh3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggPT09ICIjYW1wPTEiICYmIHdpbmRvdy5wYXJlbnQgJiYgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSkge3dpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe3NlbnRpbmVsOiAiYW1wIiwgdHlwZTogImVtYmVkLXNpemUiLCBoZWlnaHQ6IGhlaWdodH0sICIqIik7fWlmICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZSkge3dpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZS5wb3N0TWVzc2FnZShoZWlnaHQpOyByZXNpemVkID0gdHJ1ZTt9cmV0dXJuIHJlc2l6ZWQ7fXR3dHRyLmV2ZW50cy5iaW5kKCdyZW5kZXJlZCcsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOyB0d3R0ci5ldmVudHMuYmluZCgncmVzaXplJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7PC9zY3JpcHQ+PHNjcmlwdD5pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG1heFdpZHRoID0gcGFyc2VJbnQod2luZG93LmZyYW1lRWxlbWVudC5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOyBpZiAoIDUwMCAgPCBtYXhXaWR0aCkge3dpbmRvdy5mcmFtZUVsZW1lbnQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1MDAiKTt9fTwvc2NyaXB0PjxwPkdpdGh1YiBnaXN0wqBoZXJlPC9wPjxpZnJhbWUgc3JjPSIiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIj48YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZiI+aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWY8L2E+PC9pZnJhbWU+PHA+Y29kZSBibG9jazwvcD48cHJlPnRlc3RzZXRzZXRzZXRzZXRzZXRzZXQ8L3ByZT48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NmFmMDRiN2U1N2UxIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICA8L2NoYW5uZWw+CjwvcnNzPg==
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:21 GMT
- request:
    method: head
    uri: https://medium.com/media/7da74bb30f8a2a82b0acb89b213a018b/href
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 302
      message: Found
    headers:
      Date:
      - Wed, 02 Jan 2019 20:58:21 GMT
      Content-Type:
      - application/octet-stream
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://getpocket.com
        https://medium.com:443 https://*.medium.com:443 https://*.medium.com https://medium.com
        https://*.medium.com https://*.algolia.net https://cdn-static-1.medium.com
        https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com
        https://*.lightstep.com https://*.branch.io https://app.zencoder.com ''self'';
        font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://use.typekit.net https://cdn-static-1.medium.com ''self''; frame-src
        chromenull: https: webviewprogressproxy: medium: ''self''; img-src blob: data:
        https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1546462701492:15107fa3455f
      X-Obvious-Info:
      - 36148-2e9ccc3,2e9ccc3d8ef
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Expires:
      - Thu, 09 Sep 1999 09:09:09 GMT
      Pragma:
      - no-cache
      Tk:
      - T
      Location:
      - https://www.youtube.com/watch?v=QOCaacO8wus
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 493024abfde142fe-MXP
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:21 GMT
- request:
    method: head
    uri: https://www.youtube.com/watch?v=QOCaacO8wus
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Cookie:
      - __cfduid=dc2c954a9734dc2623aae1d716da3f36d1546462701; uid=lo_SYPmxTHQyzCn;
        sid=1:iPxO5VMFmlWlvw2IDlTmBwW2+urDiUX/Miuxgstn0sm39+qwHd55GVCC8HFevVLv
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Cache-Control:
      - no-cache
      Expires:
      - Tue, 27 Apr 1971 19:44:06 EST
      P3p:
      - CP="This is not a P3P policy! See http://support.google.com/accounts/answer/151657?hl=it
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block; report=https://www.google.com/appserve/security-bugs/log/youtube
      X-Frame-Options:
      - SAMEORIGIN
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Wed, 02 Jan 2019 20:58:22 GMT
      Server:
      - YouTube Frontend Proxy
      Transfer-Encoding:
      - chunked
      Alt-Svc:
      - quic=":443"; ma=2592000; v="44,43,39,35"
      Accept-Ranges:
      - none
      Vary:
      - Accept-Encoding
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:22 GMT
- request:
    method: get
    uri: https://api.twitter.com/1.1/statuses/show/948256083352735744.json?tweet_mode=extended
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - TwitterRubyGem/6.2.0
      Connection:
      - close
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate, pre-check=0, post-check=0
      Connection:
      - close
      Content-Disposition:
      - attachment; filename=json.json
      Content-Length:
      - '3861'
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Wed, 02 Jan 2019 20:58:22 GMT
      Expires:
      - Tue, 31 Mar 1981 05:00:00 GMT
      Last-Modified:
      - Wed, 02 Jan 2019 20:58:22 GMT
      Pragma:
      - no-cache
      Server:
      - tsa_f
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=631138519
      X-Access-Level:
      - read-write
      X-Connection-Hash:
      - 9569244130fc2f3371a2859ad3c17afb
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Rate-Limit-Limit:
      - '900'
      X-Rate-Limit-Remaining:
      - '899'
      X-Rate-Limit-Reset:
      - '1546463602'
      X-Response-Time:
      - '155'
      X-Transaction:
      - 0042d88f00152232
      X-Twitter-Response-Tags:
      - BouncerCompliant
      X-Xss-Protection:
      - 1; mode=block; report=https://twitter.com/i/xss_report
    body:
      encoding: UTF-8
      string: '{"created_at":"Tue Jan 02 18:14:02 +0000 2018","id":948256083352735744,"id_str":"948256083352735744","full_text":"I''m
        a full-stack developer https:\/\/t.co\/wvFikfWJ7f","truncated":false,"display_text_range":[0,26],"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[],"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/iphone\" rel=\"nofollow\"\u003eTwitter
        for iPhone\u003c\/a\u003e","in_reply_to_status_id":948243620846620673,"in_reply_to_status_id_str":"948243620846620673","in_reply_to_user_id":161419043,"in_reply_to_user_id_str":"161419043","in_reply_to_screen_name":"bendhalpern","user":{"id":161419043,"id_str":"161419043","name":"Ben
        Halpern \ud83e\udd17","screen_name":"bendhalpern","location":"Brooklyn, NY","description":"Creator\/founder\/webmaster
        of https:\/\/t.co\/xHvFQQ9jeO (@ThePracticalDev). Coder, buddhist, feminist,
        Batman.","url":"https:\/\/t.co\/qqIzCffhit","entities":{"url":{"urls":[{"url":"https:\/\/t.co\/qqIzCffhit","expanded_url":"http:\/\/dev.to\/ben","display_url":"dev.to\/ben","indices":[0,23]}]},"description":{"urls":[{"url":"https:\/\/t.co\/xHvFQQ9jeO","expanded_url":"https:\/\/dev.to","display_url":"dev.to","indices":[29,52]}]}},"protected":false,"followers_count":21251,"friends_count":1981,"listed_count":507,"created_at":"Wed
        Jun 30 20:15:57 +0000 2010","favourites_count":25552,"utc_offset":null,"time_zone":null,"geo_enabled":true,"verified":true,"statuses_count":10899,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"EDECE9","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_banner_url":"https:\/\/pbs.twimg.com\/profile_banners\/161419043\/1492834234","profile_link_color":"3A1E75","profile_sidebar_border_color":"FFFFFF","profile_sidebar_fill_color":"E3E2DE","profile_text_color":"634047","profile_use_background_image":true,"has_extended_profile":true,"default_profile":false,"default_profile_image":false,"following":false,"follow_request_sent":false,"notifications":false,"translator_type":"none"},"geo":null,"coordinates":null,"place":null,"contributors":null,"is_quote_status":false,"retweet_count":68,"favorite_count":526,"favorited":false,"retweeted":false,"possibly_sensitive":false,"possibly_sensitive_appealable":false,"lang":"en"}'
    http_version: 
  recorded_at: Wed, 02 Jan 2019 20:58:22 GMT
recorded_with: VCR 4.0.0
