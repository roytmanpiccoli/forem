---
http_interactions:
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Jul 2020 18:52:25 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"0cec106d39e0d21d","ot-tracer-traceid":"65b62d7f777b5f88","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1594234345745:ee44cf020fbe
      X-Obvious-Info:
      - 41556-795040d,795040d42b4
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 08 Jul 2020 19:07:25 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 03d15eb0d90000e2168a2a3200000001
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 5afc00948fdee216-ORD
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 Jul 2020 18:52:25 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Wed, 08 Jul 2020 18:52:26 GMT
      Etag:
      - '"f3b0105087275b919858ee55eba04991"'
      Last-Modified:
      - Tue, 07 Jul 2020 22:30:54 GMT
      Server:
      - nginx
      Strict-Transport-Security:
      - max-age=15724800
      X-Amz-Id-2:
      - GGkOJIv19rZ3M84PJVojdUjryW9b9tMPW7oMTo4xH1XPI3vs4AoSQ0YwGKk8fn4riq+6yNnewvw=
      X-Amz-Request-Id:
      - 7E1E021C22AD3210
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '294647'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 Jul 2020 18:52:26 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Jul 2020 18:52:26 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"794728044e864fb5","ot-tracer-traceid":"3039d8744a794768","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1594234346484:49e38e128ba6
      X-Obvious-Info:
      - 41556-795040d,795040d42b4
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 08 Jul 2020 19:07:26 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 03d15eb3d60000c560c9995200000001
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 5afc0099583fc560-ORD
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+V2VkLCAwOCBKdWwgMjAyMCAxODo1MjoyNiBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE5LTA2LTE5VDIxOjM4OjA3LjU0OVo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPiYjeDIwMGE7Jm1kYXNoOyYjeDIwMGE7PGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9iZW5kaGFscGVybi9zdGF0dXMvOTQ4MjU2MDgzMzUyNzM1NzQ0Ij5AYmVuZGhhbHBlcm48L2E+PC9wPjwvYmxvY2txdW90ZT48c2NyaXB0IHNyYz0iLy9wbGF0Zm9ybS50d2l0dGVyLmNvbS93aWRnZXRzLmpzIiBjaGFyc2V0PSJ1dGYtOCI+PC9zY3JpcHQ+PHNjcmlwdD5mdW5jdGlvbiBub3RpZnlSZXNpemUoaGVpZ2h0KSB7aGVpZ2h0ID0gaGVpZ2h0ID8gaGVpZ2h0IDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm9mZnNldEhlaWdodDsgdmFyIHJlc2l6ZWQgPSBmYWxzZTsgaWYgKHdpbmRvdy5kb25rZXkgJiYgZG9ua2V5LnJlc2l6ZSkge2RvbmtleS5yZXNpemUoaGVpZ2h0KTtyZXNpemVkID0gdHJ1ZTt9aWYgKHBhcmVudCAmJiBwYXJlbnQuX3Jlc2l6ZUlmcmFtZSkge3ZhciBvYmogPSB7aWZyYW1lOiB3aW5kb3cuZnJhbWVFbGVtZW50LCBoZWlnaHQ6IGhlaWdodH07IHBhcmVudC5fcmVzaXplSWZyYW1lKG9iaik7IHJlc2l6ZWQgPSB0cnVlO31pZiAod2luZG93LmxvY2F0aW9uICYmIHdpbmRvdy5sb2NhdGlvbi5oYXNoID09PSAiI2FtcD0xIiAmJiB3aW5kb3cucGFyZW50ICYmIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UpIHt3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKHtzZW50aW5lbDogImFtcCIsIHR5cGU6ICJlbWJlZC1zaXplIiwgaGVpZ2h0OiBoZWlnaHR9LCAiKiIpO31pZiAod2luZG93LndlYmtpdCAmJiB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycyAmJiB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5yZXNpemUpIHt3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5yZXNpemUucG9zdE1lc3NhZ2UoaGVpZ2h0KTsgcmVzaXplZCA9IHRydWU7fXJldHVybiByZXNpemVkO310d3R0ci5ldmVudHMuYmluZCgncmVuZGVyZWQnLCBmdW5jdGlvbiAoZXZlbnQpIHtub3RpZnlSZXNpemUoKTt9KTsgdHd0dHIuZXZlbnRzLmJpbmQoJ3Jlc2l6ZScsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOzwvc2NyaXB0PjxzY3JpcHQ+aWYgKHBhcmVudCAmJiBwYXJlbnQuX3Jlc2l6ZUlmcmFtZSkge3ZhciBtYXhXaWR0aCA9IHBhcnNlSW50KHdpbmRvdy5mcmFtZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCJ3aWR0aCIpKTsgaWYgKCA1MDAgIDwgbWF4V2lkdGgpIHt3aW5kb3cuZnJhbWVFbGVtZW50LnNldEF0dHJpYnV0ZSgid2lkdGgiLCAiNTAwIik7fX08L3NjcmlwdD48cD5HaXRodWIgZ2lzdMKgaGVyZTwvcD48aWZyYW1lIHNyYz0iIiB3aWR0aD0iMCIgaGVpZ2h0PSIwIiBmcmFtZWJvcmRlcj0iMCIgc2Nyb2xsaW5nPSJubyI+PGEgaHJlZj0iaHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWYiPmh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83NzdhZThiN2Q4OTE2ZTU2NWI4NGI3MDRjMDg4Y2YwYy9ocmVmPC9hPjwvaWZyYW1lPjxwPmNvZGUgYmxvY2s8L3A+PHByZT50ZXN0c2V0c2V0c2V0c2V0c2V0c2V0IGxldHMgaW50cm9kdWNlIHNvbWUge3sgY2hhb3MgfX08L3ByZT48cHJlPkhlcmUmIzM5O3MgbW9yZSB7eyB3aGF0IH19PC9wcmU+PHA+c29tZSBtb3JlIGNvZGUgYW5kIHt7IFZBUklBQkxFIH19IGFuZCA8c3Ryb25nPjxlbT57eyBIVE1MwqB9fTwvZW0+PC9zdHJvbmc+PC9wPjxoMz57eyBob3cgYWJvdXQgdGhpc8KgfX08L2gzPjxpbWcgc3JjPSJodHRwczovL21lZGl1bS5jb20vXy9zdGF0P2V2ZW50PXBvc3QuY2xpZW50Vmlld2VkJnJlZmVycmVyU291cmNlPWZ1bGxfcnNzJnBvc3RJZD02YWYwNGI3ZTU3ZTEiIHdpZHRoPSIxIiBoZWlnaHQ9IjEiPl1dPjwvY29udGVudDplbmNvZGVkPgogICAgICAgIDwvaXRlbT4KICAgIDwvY2hhbm5lbD4KPC9yc3M+
  recorded_at: Wed, 08 Jul 2020 18:52:26 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Jul 2020 18:52:26 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"6d302f7348a57ff6","ot-tracer-traceid":"612513166d3247b1","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1594234346678:945672980037
      X-Obvious-Info:
      - 41556-795040d,795040d42b4
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 08 Jul 2020 19:07:26 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 03d15eb49c0000c57058bb3200000001
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 5afc009a9e6dc570-ORD
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 Jul 2020 18:52:26 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Wed, 08 Jul 2020 18:52:26 GMT
      Etag:
      - '"f3b0105087275b919858ee55eba04991"'
      Last-Modified:
      - Tue, 07 Jul 2020 22:30:54 GMT
      Server:
      - nginx
      Strict-Transport-Security:
      - max-age=15724800
      X-Amz-Id-2:
      - BOvO3OzYkLptvSUf+hUq7rDJm5gmAALwd4xx1E00rAJctVIuxMbLvYA/pBcghUP1PnjK4FLd4Hw=
      X-Amz-Request-Id:
      - 88AA208C2A28DE9B
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '294647'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJzcyB2ZXJzaW9uPSIyLjAiCiAgeG1sOmJhc2U9Imh0dHBzOi8vY2lyY2xlY2kuY29tLyIKICB4bWxuczphdG9tPSJodHRwOi8vd3d3LnczLm9yZy8yMDA1L0F0b20iCiAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIj4KICA8Y2hhbm5lbD4KICAgIDx0aXRsZT5UaGUgQ2lyY2xlQ0kgQmxvZyBGZWVkIC0gQ2lyY2xlQ0k8L3RpdGxlPgogICAgPGRlc2NyaXB0aW9uPlN0YXkgdXAgdG8gZGF0ZSB3aXRoIHRoZSBsYXRlc3QgbmV3cywgdXBkYXRlcywgYW5kIGhhY2tzIGZyb20gQ2lyY2xlQ0kuPC9kZXNjcmlwdGlvbj4KICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvPC9saW5rPgogICAgPGF0b206bGluayBocmVmPSJodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2ZlZWQueG1sIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIC8+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5Db250aW51b3VzIGRlcGxveW1lbnQgZm9yIElvbmljIGFwcGxpY2F0aW9uczwvdGl0bGU+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9jZC1mb3ItaW9uaWMtYXBwcy88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+VGh1LCAwMiBKdWwgMjAyMCAwOTowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9jZC1mb3ItaW9uaWMtYXBwcy88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5GaWtheW8gQWRlcG9qdTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDtUaGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2lvbmljZnJhbWV3b3JrLmNvbS8mcXVvdDsmZ3Q7SW9uaWMgZnJhbWV3b3JrJmx0Oy9hJmd0OyBjb250aW51ZXMgdG8gcmVtYWluIGEgdG9wIGNob2ljZSB3aGVuIGl0IGNvbWVzIHRvIG1vYmlsZSBhcHBsaWNhdGlvbiBkZXZlbG9wbWVudCwgYW5kIG92ZXIgdGhlIHllYXJzIGl0IGhhcyBncm93biB0byBhIGZ1bGwtZmVhdHVyZWQgYXBwbGljYXRpb24gZnJhbWV3b3JrIGZvciBkZXZlbG9waW5nIG1vYmlsZSwgZGVza3RvcCwgYW5kICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93ZWIuZGV2L3Byb2dyZXNzaXZlLXdlYi1hcHBzLyZxdW90OyZndDtwcm9ncmVzc2l2ZSB3ZWIgYXBwbGljYXRpb25zJmx0Oy9hJmd0Oy4gUGFydCBvZiBpdHMgcG9wdWxhcml0eSBpcyBkdWUgdG8gaXQgYmVpbmcgZnJhbWV3b3JrLWFnbm9zdGljLiBJdCBhbGxvd3MgZGV2ZWxvcGVycyB0byB1c2UgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2FuZ3VsYXIuaW8vJnF1b3Q7Jmd0O0FuZ3VsYXImbHQ7L2EmZ3Q7LCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vcmVhY3Rqcy5vcmcvJnF1b3Q7Jmd0O1JlYWN0Jmx0Oy9hJmd0Oywgb3IgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3Z1ZWpzLm9yZy8mcXVvdDsmZ3Q7VnVlJmx0Oy9hJmd0OyBmb3IgZGV2ZWxvcG1lbnQuIEluIHRoaXMgdHV0b3JpYWwsIHdlIHdpbGwgYmUgZGVtb25zdHJhdGluZyBob3cgdG8gZGVwbG95IGFuIElvbmljIG1vYmlsZSBhcHBsaWNhdGlvbiB0byB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2ZpcmViYXNlLmdvb2dsZS5jb20vJnF1b3Q7Jmd0O0ZpcmViYXNlJmx0Oy9hJmd0OyBob3N0aW5nIHBsYXRmb3JtLiZsdDsvcCZndDsKCiZsdDtoMiZndDtQcmVyZXF1aXNpdGVzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGZvbGxvdyB0aGlzIHBvc3QsIGEgZmV3IHRoaW5ncyBhcmUgcmVxdWlyZWQ6Jmx0Oy9wJmd0OwoKJmx0O29sJmd0OwogICZsdDtsaSZndDtCYXNpYyBrbm93bGVkZ2Ugb2YgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3JlYWN0anMub3JnLyZxdW90OyZndDtSZWFjdC5qcyZsdDsvYSZndDsmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vbm9kZWpzLm9yZyZxdW90OyZndDtOb2RlLmpzJmx0Oy9hJmd0OyBpbnN0YWxsZWQgb24geW91ciBzeXN0ZW0mbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vaW9uaWNmcmFtZXdvcmsuY29tL2RvY3MvY2xpJnF1b3Q7Jmd0O0lvbmljIENMSSZsdDsvYSZndDsgaW5zdGFsbGVkIG9uIHlvdXIgc3lzdGVtJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL3NpZ251cCZxdW90OyZndDtDaXJjbGVDSSZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2ZpcmViYXNlLmdvb2dsZS5jb20vJnF1b3Q7Jmd0O0ZpcmViYXNlJmx0Oy9hJmd0OyBhY2NvdW50ICh3aXRoIGEgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL21haWwuZ29vZ2xlLmNvbSZxdW90OyZndDtHbWFpbCZsdDsvYSZndDsgYWNjb3VudCkmbHQ7L2xpJmd0OwombHQ7L29sJmd0OwoKJmx0O2gyJmd0O0J1aWxkaW5nIGEgc2ltcGxlIElvbmljIGFwcGxpY2F0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGJlZ2luLCBsZXTigJlzIHNjYWZmb2xkIGEgbmV3IElvbmljIGFwcGxpY2F0aW9uIGJ5IHJ1bm5pbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7aW9uaWMgc3RhcnQgaW9uaWMtY2QgdGFicyAtLXR5cGU9cmVhY3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIGltbWVkaWF0ZWx5IHRyaWdnZXIgdGhlIElvbmljIENMSSB0byBzY2FmZm9sZCBhIG5ldyBwcm9qZWN0IGZvciB1cyB1c2luZyB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGFicyZsdDsvY29kZSZndDsgdGVtcGxhdGUgaW5zaWRlIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2lvbmljLWNkJmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O05vdGUmbHQ7L3N0cm9uZyZndDs6ICZsdDtpJmd0O0lmIHlvdSBhcmUgcHJvbXB0ZWQgdG8gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Q3JlYXRlIGEgZnJlZSBJb25pYyBhY2NvdW50PyZsdDsvY29kZSZndDsuIEhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtuJmx0Oy9jb2RlJmd0OyB0byBkZWNsaW5lLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBjcmVhdGluZyBhbiBJb25pYyBhY2NvdW50IGhlYWQgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2lvbmljZnJhbWV3b3JrLmNvbS9hcHBmbG93JnF1b3Q7Jmd0O3RoaXMgcGFnZSZsdDsvYSZndDsuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O09uY2UgdGhpcyBpcyBkb25lLCBnbyBpbnRvIHRoZSByb290IG9mIHRoZSBhcHBsaWNhdGlvbiAoJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y2QgaW9uaWMtY2QmbHQ7L2NvZGUmZ3Q7KSBhbmQgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCB0byBzZXJ2ZSB0aGUgYXBwbGljYXRpb24gaW4geW91ciB3ZWIgYnJvd3NlcjombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2lvbmljIHNlcnZlCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O09uY2UgdGhpcyBjb21tYW5kIGhhcyBjb21wbGV0ZXMgaW5pdGlhbGl6YXRpb24sIHlvdSB3aWxsIHNlZSBhbiBhcHBsaWNhdGlvbiB2aWV3IHNpbWlsYXIgdG8gdGhlIG9uZSBiZWxvdy4gVGhlIENMSSBvcGVucyBhIHRhYiBpbiB5b3VyIGRlZmF1bHQgYnJvd3NlciBhdXRvbWF0aWNhbGx5LiZsdDsvcCZndDsKCiZsdDtkaXYgc3R5bGU9JnF1b3Q7dGV4dC1hbGlnbjpjZW50ZXImcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMi1zY2FmZm9sZC1wcmV2aWV3LnBuZyZxdW90OyAvJmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Jmx0O3N0cm9uZyZndDtOb3RlJmx0Oy9zdHJvbmcmZ3Q7OiAmbHQ7aSZndDtJIGFtIHVzaW5nIGEgbW9iaWxlIHByZXZpZXcgYWN0aXZhdGVkIGluIENocm9tZeKAmXMgZGV2ZWxvcG1lbnQgdG9vbHMuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O05leHQsIGxldOKAmXMgYmVnaW4gYnVpbGRpbmcgdGhlIG1haW4gYXBwbGljYXRpb24uIEdvIGludG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NyYy9wYWdlcyZsdDsvY29kZSZndDsgZm9sZGVyIG9mIHlvdXIgYXBwbGljYXRpb24gYW5kIG9wZW4gdGhlIGZpbGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7VGFiMS50c3gmbHQ7L2NvZGUmZ3Q7LCB0aGlzIGlzIHRoZSBkZWZhdWx0IGhvbWUgcGFnZSBmb3IgdGhlIG5ld2x5IHNjYWZmb2xkZWQgYXBwbGljYXRpb24uIFJlbW92ZSBldmVyeXRoaW5nIGluIHRoaXMgZmlsZSBhbmQgcmVwbGFjZSBpdCB3aXRoIHRoZSBmb2xsb3dpbmcgY29kZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJnF1b3Q7cmVhY3QmcXVvdDs7CmltcG9ydCB7CiAgSW9uQ29udGVudCwKICBJb25IZWFkZXIsCiAgSW9uUGFnZSwKICBJb25UaXRsZSwKICBJb25Ub29sYmFyLAogIElvbkxpc3QsCiAgSW9uSXRlbVNsaWRpbmcsCiAgSW9uSXRlbSwKICBJb25MYWJlbCwKICBJb25JdGVtT3B0aW9ucywKICBJb25JdGVtT3B0aW9uLAogIElvbkZhYiwKICBJb25GYWJCdXR0b24sCiAgSW9uSWNvbiwKICBJb25Nb2RhbCwKICBJb25CdXR0b24sCiAgSW9uQ2FyZCwKICBJb25DYXJkQ29udGVudCwKICBJb25JbnB1dAp9IGZyb20gJnF1b3Q7QGlvbmljL3JlYWN0JnF1b3Q7OwoKaW1wb3J0IHsgYWRkIH0gZnJvbSAmcXVvdDtpb25pY29ucy9pY29ucyZxdW90OzsKCmltcG9ydCAmcXVvdDsuL1RhYjEuY3NzJnF1b3Q7OwoKaW50ZXJmYWNlIFRhc2sgewogIGlkOiBudW1iZXI7CiAgbmFtZTogc3RyaW5nOwp9Cgpjb25zdCBUYWIxOiBSZWFjdC5GQyA9ICgpID0mYW1wO2d0OyB7CiAgY29uc3QgW3Rhc2tzLCBzZXRUYXNrc10gPSB1c2VTdGF0ZSZhbXA7bHQ7VGFza1tdJmFtcDtndDsoW10pOwogIGNvbnN0IFtzaG93TW9kYWwsIHNldFNob3dNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7CiAgY29uc3QgW3Rhc2tOYW1lID0gJnF1b3Q7JnF1b3Q7LCBzZXRUYXNrTmFtZV0gPSB1c2VTdGF0ZSZhbXA7bHQ7c3RyaW5nJmFtcDtndDsoKTsKCiAgZnVuY3Rpb24gYWRkTmV3VGFzaygpIHsKICAgIGNvbnN0IG5ld19pZCA9IHRhc2tzLmxlbmd0aCArIDE7CgogICAgY29uc3QgbmV3VGFzayA9IHsKICAgICAgaWQ6IG5ld19pZCwKICAgICAgbmFtZTogdGFza05hbWUKICAgIH07CgogICAgdGFza3MucHVzaChuZXdUYXNrKTsKCiAgICBzZXRUYXNrcyh0YXNrcyk7CgogICAgc2V0VGFza05hbWUoJnF1b3Q7JnF1b3Q7KTsKCiAgICBzZXRTaG93TW9kYWwoZmFsc2UpOwogIH0KCiAgcmV0dXJuICgKICAgICZhbXA7bHQ7SW9uUGFnZSZhbXA7Z3Q7CiAgICAgICZhbXA7bHQ7SW9uSGVhZGVyJmFtcDtndDsKICAgICAgICAmYW1wO2x0O0lvblRvb2xiYXImYW1wO2d0OwogICAgICAgICAgJmFtcDtsdDtJb25UaXRsZSBjb2xvcj0mcXVvdDtwcmltYXJ5JnF1b3Q7JmFtcDtndDtUYXNrIE1hbmFnZXImYW1wO2x0Oy9Jb25UaXRsZSZhbXA7Z3Q7CiAgICAgICAgJmFtcDtsdDsvSW9uVG9vbGJhciZhbXA7Z3Q7CiAgICAgICZhbXA7bHQ7L0lvbkhlYWRlciZhbXA7Z3Q7CiAgICAgICZhbXA7bHQ7SW9uQ29udGVudCZhbXA7Z3Q7CiAgICAgICAgJmFtcDtsdDtJb25MaXN0JmFtcDtndDsKICAgICAgICAgIHt0YXNrcy5sZW5ndGggJmFtcDtndDsgMCA/ICgKICAgICAgICAgICAgdGFza3MubWFwKChpdGVtOiBUYXNrKSA9JmFtcDtndDsgewogICAgICAgICAgICAgIHJldHVybiAoCiAgICAgICAgICAgICAgICAmYW1wO2x0O0lvbkl0ZW1TbGlkaW5nIGtleT17aXRlbS5pZH0mYW1wO2d0OwogICAgICAgICAgICAgICAgICAmYW1wO2x0O0lvbkl0ZW0gY2xhc3NOYW1lPSZxdW90O3RvZG8taXRlbSZxdW90OyZhbXA7Z3Q7CiAgICAgICAgICAgICAgICAgICAgJmFtcDtsdDtJb25MYWJlbCZhbXA7Z3Q7e2l0ZW0ubmFtZX0mYW1wO2x0Oy9Jb25MYWJlbCZhbXA7Z3Q7CiAgICAgICAgICAgICAgICAgICZhbXA7bHQ7L0lvbkl0ZW0mYW1wO2d0OwogICAgICAgICAgICAgICAgICAmYW1wO2x0O0lvbkl0ZW1PcHRpb25zIHNpZGU9JnF1b3Q7ZW5kJnF1b3Q7JmFtcDtndDsKICAgICAgICAgICAgICAgICAgICAmYW1wO2x0O0lvbkl0ZW1PcHRpb24gb25DbGljaz17KCkgPSZhbXA7Z3Q7IHt9fSZhbXA7Z3Q7RG9uZSZhbXA7bHQ7L0lvbkl0ZW1PcHRpb24mYW1wO2d0OwogICAgICAgICAgICAgICAgICAmYW1wO2x0Oy9Jb25JdGVtT3B0aW9ucyZhbXA7Z3Q7CiAgICAgICAgICAgICAgICAmYW1wO2x0Oy9Jb25JdGVtU2xpZGluZyZhbXA7Z3Q7CiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfSkKICAgICAgICAgICkgOiAoCiAgICAgICAgICAgICZhbXA7bHQ7SW9uSXRlbSZhbXA7Z3Q7CiAgICAgICAgICAgICAgJmFtcDtsdDtJb25MYWJlbCBjb2xvcj0mcXVvdDtkYW5nZXImcXVvdDsmYW1wO2d0OwogICAgICAgICAgICAgICAgWW91IGhhdmUgbm90IHlldCBhZGRlZCB0YXNrcyBmb3IgdG9kYXkKICAgICAgICAgICAgICAmYW1wO2x0Oy9Jb25MYWJlbCZhbXA7Z3Q7CiAgICAgICAgICAgICZhbXA7bHQ7L0lvbkl0ZW0mYW1wO2d0OwogICAgICAgICAgKX0KICAgICAgICAmYW1wO2x0Oy9Jb25MaXN0JmFtcDtndDsKCiAgICAgICAgey8qIE1vZGFsKi99CiAgICAgICAgJmFtcDtsdDtJb25Nb2RhbCBpc09wZW49e3Nob3dNb2RhbH0mYW1wO2d0OwogICAgICAgICAgJmFtcDtsdDtJb25DYXJkJmFtcDtndDsKICAgICAgICAgICAgJmFtcDtsdDtJb25JdGVtJmFtcDtndDsKICAgICAgICAgICAgICAmYW1wO2x0O0lvbkxhYmVsIGNvbG9yPSZxdW90O3ByaW1hcnkmcXVvdDsmYW1wO2d0O0FkZCBOZXcgVGFzayZhbXA7bHQ7L0lvbkxhYmVsJmFtcDtndDsKICAgICAgICAgICAgJmFtcDtsdDsvSW9uSXRlbSZhbXA7Z3Q7CgogICAgICAgICAgICAmYW1wO2x0O0lvbkNhcmRDb250ZW50JmFtcDtndDsKICAgICAgICAgICAgICAmYW1wO2x0O0lvbkl0ZW0mYW1wO2d0OwogICAgICAgICAgICAgICAgJmFtcDtsdDtJb25JbnB1dAogICAgICAgICAgICAgICAgICB2YWx1ZT17dGFza05hbWV9CiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSZxdW90O0VudGVyIFRhc2sgTmFtZS4uLiZxdW90OwogICAgICAgICAgICAgICAgICBvbklvbkNoYW5nZT17KGUpID0mYW1wO2d0OyBzZXRUYXNrTmFtZShlLmRldGFpbC52YWx1ZSEpfQogICAgICAgICAgICAgICAgJmFtcDtndDsmYW1wO2x0Oy9Jb25JbnB1dCZhbXA7Z3Q7CiAgICAgICAgICAgICAgJmFtcDtsdDsvSW9uSXRlbSZhbXA7Z3Q7CgogICAgICAgICAgICAgICZhbXA7bHQ7SW9uQnV0dG9uCiAgICAgICAgICAgICAgICBleHBhbmQ9JnF1b3Q7ZnVsbCZxdW90OwogICAgICAgICAgICAgICAgY29sb3I9JnF1b3Q7c3VjY2VzcyZxdW90OwogICAgICAgICAgICAgICAgb25DbGljaz17KCkgPSZhbXA7Z3Q7IGFkZE5ld1Rhc2soKX0KICAgICAgICAgICAgICAmYW1wO2d0OwogICAgICAgICAgICAgICAgQWRkIFRhc2sKICAgICAgICAgICAgICAmYW1wO2x0Oy9Jb25CdXR0b24mYW1wO2d0OwogICAgICAgICAgICAmYW1wO2x0Oy9Jb25DYXJkQ29udGVudCZhbXA7Z3Q7CiAgICAgICAgICAmYW1wO2x0Oy9Jb25DYXJkJmFtcDtndDsKICAgICAgICAgICZhbXA7bHQ7SW9uQnV0dG9uIGNvbG9yPSZxdW90O3N1Y2Nlc3MmcXVvdDsgb25DbGljaz17KCkgPSZhbXA7Z3Q7IHNldFNob3dNb2RhbChmYWxzZSl9JmFtcDtndDsKICAgICAgICAgICAgQ2xvc2UgTW9kYWwKICAgICAgICAgICZhbXA7bHQ7L0lvbkJ1dHRvbiZhbXA7Z3Q7CiAgICAgICAgJmFtcDtsdDsvSW9uTW9kYWwmYW1wO2d0OwoKICAgICAgICB7LyogRkFCICovfQogICAgICAgICZhbXA7bHQ7SW9uRmFiIHZlcnRpY2FsPSZxdW90O2JvdHRvbSZxdW90OyBob3Jpem9udGFsPSZxdW90O2VuZCZxdW90OyBzbG90PSZxdW90O2ZpeGVkJnF1b3Q7JmFtcDtndDsKICAgICAgICAgICZhbXA7bHQ7SW9uRmFiQnV0dG9uIGNvbG9yPSZxdW90O3N1Y2Nlc3MmcXVvdDsgb25DbGljaz17KCkgPSZhbXA7Z3Q7IHNldFNob3dNb2RhbCh0cnVlKX0mYW1wO2d0OwogICAgICAgICAgICAmYW1wO2x0O0lvbkljb24gaWNvbj17YWRkfSAvJmFtcDtndDsKICAgICAgICAgICZhbXA7bHQ7L0lvbkZhYkJ1dHRvbiZhbXA7Z3Q7CiAgICAgICAgJmFtcDtsdDsvSW9uRmFiJmFtcDtndDsKICAgICAgJmFtcDtsdDsvSW9uQ29udGVudCZhbXA7Z3Q7CiAgICAmYW1wO2x0Oy9Jb25QYWdlJmFtcDtndDsKICApOwp9OwoKZXhwb3J0IGRlZmF1bHQgVGFiMTsKCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1doYXQgd2UgaGF2ZSBidWlsdCBoZXJlIGlzIGEgc2ltcGxlIHRhc2sgbGlzdCBhcHBsaWNhdGlvbiB3aGVyZSB3ZSBjYW4gYWRkIG91ciB0YXNrcyBmb3IgdGhlIGRheS4gTGV04oCZcyBnbyB0aHJvdWdoIHRoZSBjb2RlIHNuaXBwZXQgYWJvdmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2Ugc3RhcnQgYnkgaW1wb3J0aW5nIHRoZSBuZWNlc3NhcnkgZGVwZW5kZW5jaWVzIGluY2x1ZGluZyB0aGUgQ1NTIGZpbGUgZm9yIG91ciBwYWdlLiBXZSB0aGVuIGRlZmluZSBhbiBpbnRlcmZhY2UgdG8gZGVmaW5lIG91ciB0YXNrIG9iamVjdHMuJmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsuLi4KaW50ZXJmYWNlIFRhc2sgewogIGlkOiBudW1iZXI7CiAgbmFtZTogc3RyaW5nOwp9Ci4uLgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtOZXh0LCB3ZSBjcmVhdGUgb3VyIGNvbXBvbmVudCBhcyBhIFJlYWN0LmpzIGZ1bmN0aW9uIG9mIHRoZSB0eXBlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1JlYWN0LkZDJmx0Oy9jb2RlJmd0OyBhbmQgYmVnaW4gdGhlIGZ1bmN0aW9uIGJ5IGRlZmluaW5nIHRoZSBkYXRhIHdlIHdhbnQgdG8gaG9sZCBpbiBvdXIgc3RhdGUgdXNpbmcgaG9va3M6Jmx0Oy9wJmd0OwombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGFza3MmbHQ7L2NvZGUmZ3Q7IGFycmF5IG9mICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Rhc2smbHQ7L2NvZGUmZ3Q7cyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c2hvd01vZGFsJmx0Oy9jb2RlJmd0OyBib29sZWFuIHRvIGNvbnRyb2wgdGhlIG9wZW5pbmcgYW5kIGNsb3Npbmcgb2Ygb3VyIHRhc2sgY3JlYXRpb24gZm9ybSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGFza05hbWUmbHQ7L2NvZGUmZ3Q7IHdoaWNoIGhvbGRzIHRoZSB2YWx1ZSBvZiBhIG5ldyB0YXNrJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Li4uCmNvbnN0IFt0YXNrcywgc2V0VGFza3NdID0gdXNlU3RhdGUmYW1wO2x0O1Rhc2tbXSZhbXA7Z3Q7KFtdKTsKY29uc3QgW3Nob3dNb2RhbCwgc2V0U2hvd01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTsKY29uc3QgW3Rhc2tOYW1lID0gJnF1b3Q7JnF1b3Q7LCBzZXRUYXNrTmFtZV0gPSB1c2VTdGF0ZSZhbXA7bHQ7c3RyaW5nJmFtcDtndDsoKTsKLi4uCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0ZvbGxvd2luZyB0aGlzIGlzIHRoZSBmdW5jdGlvbiB0aGF0IHdlIGNhbGwgdG8gYWRkIGEgbmV3IHRhc2suIFRoaXMgZnVuY3Rpb24gY3JlYXRlcyBhIG5ldyB0YXNrIGJ5IHNldHRpbmcgaXRzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2lkJmx0Oy9jb2RlJmd0OyBiYXNlZCBvbiB0aGUgbGVuZ3RoIG9mIHRoZSBhcnJheSBhbmQgY2xlYXJzIHRoZSBmb3JtIGFmdGVyIGFkZGluZyB0aGUgbmV3IHRhc2sgdG8gb3VyIGV4aXN0aW5nIGxpc3Qgb2YgdGFza3MuJmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsuLi4KZnVuY3Rpb24gYWRkTmV3VGFzaygpIHsKICBjb25zdCBuZXdfaWQgPSB0YXNrcy5sZW5ndGggKyAxOwoKICBjb25zdCBuZXdUYXNrID0gewogICAgaWQ6IG5ld19pZCwKICAgIG5hbWU6IHRhc2tOYW1lCiAgfTsKCiAgdGFza3MucHVzaChuZXdUYXNrKTsKCiAgc2V0VGFza3ModGFza3MpOwoKICBzZXRUYXNrTmFtZSgmcXVvdDsmcXVvdDspOwoKICBzZXRTaG93TW9kYWwoZmFsc2UpOwp9Ci4uLgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtOZXh0LCB3ZSByZW5kZXIgb3VyIHRlbXBsYXRlIHRvIGRpc3BsYXkgb3VyIGxpc3Qgb2YgdGFza3MgYW5kIGEgaGVscGZ1bCBtZXNzYWdlIHRoYXQgcmVhZHMgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7WW91IGhhdmUgbm90IHlldCBhZGRlZCB0YXNrcyBmb3IgdG9kYXkmbHQ7L2NvZGUmZ3Q7IHdoZW4gdGhlIHRhc2sgbGlzdCBpcyBlbXB0eS4gRm9sbG93aW5nIHRoZSBsaXN0IGlzIGEgbW9kYWwgY29tcG9uZW50IHRoYXQgY29udGFpbnMgb3VyIHRhc2sgZm9ybSBmb3IgYWRkaW5nIGEgbmV3IHRhc2suIEJlbG93IHRoZSBjb21wb25lbnQgaXMgYSBmbG9hdGluZyBhY3Rpb24gYnV0dG9uIHRoYXQgdGhlIHVzZXIgY2xpY2tzIHRvIG9wZW4gdGhlIG1vZGFsLiZsdDsvcCZndDsKCiZsdDtwJmd0O0JlZm9yZSB3ZSBwcmV2aWV3IHRoaXMsIG9wZW4gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7VGFiMS5jc3MmbHQ7L2NvZGUmZ3Q7IGxvY2F0ZWQgaW4gdGhlIHNhbWUgZm9sZGVyIGFzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1RhYjEudHN4Jmx0Oy9jb2RlJmd0OyBhbmQgcmVwbGFjZSBpdHMgY29udGVudHMgd2l0aCB0aGUgZm9sbG93aW5nIGNvZGU6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsudG9kby1pdGVtIHsKICAtLW1pbi1oZWlnaHQ6IDcwcHg7CiAgZm9udC1zaXplOiAxLjJlbTsKfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGlzIGJ1bXBzIHVwIHRoZSBoZWlnaHQgb2YgdGhlIGxpc3QgaXRlbXMgYW5kIHRoZSBmb250IHNpemUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93IGdvIHRvIHlvdXIgYnJvd3NlciBhbmQgbG9hZCB0aGUgaG9tZXBhZ2Ugb2YgeW91ciBhcHBsaWNhdGlvbiAoVGFiMSkuJmx0Oy9wJmd0OwoKJmx0O2RpdiBzdHlsZT0mcXVvdDt0ZXh0LWFsaWduOmNlbnRlciZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTIyLWhvbWUtbm8tdGFza3MucG5nJnF1b3Q7IC8mZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtBcyBzZWVuIG9uIHRoZSBwYWdlLCBiZWNhdXNlIHdlIGhhdmVu4oCZdCBhZGRlZCBhbnkgdGFza3MgeWV0LCB3ZSBoYXZlIHRoZSBtZXNzYWdlICZsdDtzdHJvbmcmZ3Q7WW91IGhhdmUgbm90IHlldCBhZGRlZCB0YXNrcyBmb3IgdG9kYXkmbHQ7L3N0cm9uZyZndDsgZGlzcGxheWVkLiBXZSBhbHNvIGhhdmUgb3VyICZsdDtzdHJvbmcmZ3Q7QWRkIFRhc2smbHQ7L3N0cm9uZyZndDsgYnV0dG9uIGluIHRoZSBib3R0b20gcmlnaHQgY29ybmVyIHdpdGggdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3BsdXMmbHQ7L2NvZGUmZ3Q7IHN5bWJvbC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUbyBhZGQgYSBuZXcgdGFzaywgY2xpY2sgdGhlIGJvdHRvbS1yaWdodCwgZ3JlZW4gYnV0dG9uICh3aXRoIHRoZSBwbHVzIHN5bWJvbCkgYW5kIHR5cGUgaW4gYSB0YXNrLiZsdDsvcCZndDsKCiZsdDtkaXYgc3R5bGU9JnF1b3Q7dGV4dC1hbGlnbjpjZW50ZXImcXVvdDsmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMi1hZGQtdGFzay5wbmcmcXVvdDsgLyZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7QUREIFRBU0smbHQ7L3N0cm9uZyZndDssIHRoZW4gYWRkIHR3byBvciB0aHJlZSBtb3JlLiBOb3cgd2UgaGF2ZSBlbm91Z2ggdGFza3Mgb24gdGhlIHBhZ2UgZm9yIG91ciBhcHBsaWNhdGlvbiB0byBsb29rIGZ1bmN0aW9uYWwuJmx0Oy9wJmd0OwoKJmx0O2RpdiBzdHlsZT0mcXVvdDt0ZXh0LWFsaWduOmNlbnRlciZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTIyLXRhc2stbGlzdC5wbmcmcXVvdDsgLyZndDsmbHQ7L2RpdiZndDsKCiZsdDtoMiZndDtTZXR0aW5nIHVwIGZvciBkZXBsb3ltZW50IHRvIEZpcmViYXNlJmx0Oy9oMiZndDsKCiZsdDtwJmd0O05vdyB0aGF0IHdlIGhhdmUgYSB3b3JraW5nIElvbmljIGFwcGxpY2F0aW9uLCBsZXTigJlzIHByZXBhcmUgaXQgZm9yIGRlcGxveW1lbnQgdG8gRmlyZWJhc2UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gYmVnaW4sIHlvdSBuZWVkIHRvIGhhdmUgdGhlIEZpcmViYXNlIHRvb2xzIGluc3RhbGxlZC4gVG8gY2hlY2sgd2hldGhlciB5b3UgaGF2ZSBpdCBpbnN0YWxsZWQsIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtmaXJlYmFzZQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgb3V0cHV0IGEgbGlzdCBvZiBGaXJlYmFzZSBDTEkgY29tbWFuZHMvb3B0aW9ucyBpbiB5b3VyIHRlcm1pbmFsLiBJZiBpdCBkb2VzbuKAmXQsIHlvdSBuZWVkIHRvIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgdG8gaW5zdGFsbCB0aGUgQ0xJOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwgLWcgZmlyZWJhc2UtdG9vbHMKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7WW91IGFsc28gbmVlZCB0byBydW4gdGhpcyBjb21tYW5kIGlmIHRoZSB2ZXJzaW9uIG9mIHlvdXIgRmlyZWJhc2UgQ0xJIGlzIGxlc3MgdGhhbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDs4Jmx0Oy9jb2RlJmd0Oy4gVG8gY2hlY2sgeW91ciB2ZXJzaW9uLCBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ZmlyZWJhc2UgLS12ZXJzaW9uCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RvIHNldCB1cCBGaXJlYmFzZSBob3N0aW5nIGZvciBvdXIgcHJvamVjdCwgd2UgbmVlZCB0byBjcmVhdGUgYSBGaXJlYmFzZSBwcm9qZWN0LiBIZWFkIG92ZXIgdG8geW91ciAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY29uc29sZS5maXJlYmFzZS5nb29nbGUuY29tLyZxdW90OyZndDtGaXJlYmFzZSBjb25zb2xlJmx0Oy9hJmd0OyBhbmQgY3JlYXRlIGEgbmV3IHByb2plY3QuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtBZGQgUHJvamVjdCZsdDsvc3Ryb25nJmd0OyBhbmQgZW50ZXIgdGhlIG5hbWUgb2YgeW91ciBwcm9qZWN0IG9uIHRoZSBmaXJzdCBwYWdlIHRoYXQgcG9wcyB1cC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTIyLWZpcmViYXNlLXByb2plY3QtMS5wbmcmcXVvdDsgYWx0PSZxdW90O0NyZWF0ZSBGaXJlYmFzZSBQcm9qZWN0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O3N0cm9uZyZndDtDb250aW51ZSZsdDsvc3Ryb25nJmd0Oy4gT24gdGhlIG5leHQgcGFnZSAoYWJvdXQgYWRkaW5nICZsdDtlbSZndDtHb29nbGUgQW5hbHl0aWNzJmx0Oy9lbSZndDspLCB0dXJuIG9mZiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7RW5hYmxlIEdvb2dsZSBBbmFseXRpY3MgZm9yIHRoaXMgcHJvamVjdCZsdDsvY29kZSZndDsgdG9nZ2xlIGJ1dHRvbi4gVGhpcyBpcyBhIGRlbW8gcHJvamVjdCBhbmQgd2Ugd29u4oCZdCBuZWVkIGFuYWx5dGljcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3cgY2xpY2sgJmx0O3N0cm9uZyZndDtDcmVhdGUgUHJvamVjdCZsdDsvc3Ryb25nJmd0Oy4gV2FpdCBmb3IgRmlyZWJhc2UgdG8gY29tcGxldGUgdGhlIHNldHVwIGZvciB5b3VyIHByb2plY3QsIHRoZW4gY2xpY2sgJmx0O3N0cm9uZyZndDtDb250aW51ZSZsdDsvc3Ryb25nJmd0OyB0byBuYXZpZ2F0ZSB0byB5b3VyIHByb2plY3QgZGFzaGJvYXJkLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBuZXh0IHN0ZXAgaXMgdG8gc2V0IHVwIG91ciBJb25pYyBhcHBsaWNhdGlvbiB0byBiZSBob3N0ZWQgb24gRmlyZWJhc2UgdXNpbmcgdGhlIHByb2plY3Qgd2UganVzdCBjcmVhdGVkLiBTdGF5IGxvZ2dlZCBpbiB0byBGaXJlYmFzZSBvbiB5b3VyIGRlZmF1bHQgYnJvd3Nlci4gVGhlbiBnbyB0byB5b3VyIENMSSB0byBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ZmlyZWJhc2UgbG9naW46Y2kKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyBjb21tYW5kIHdpbGwgbG9nIHlvdSBpbnRvIEZpcmViYXNlIGJ5IHJlZGlyZWN0aW5nIHRvIHlvdXIgYnJvd3NlciB3aGVyZSB5b3XigJlyZSBjdXJyZW50bHkgbG9nZ2VkIGluLiBPbmNlIHRoZSBhdXRoZW50aWNhdGlvbiBwcm9jZXNzIGlzIGNvbXBsZXRlLCB5b3Ugd2lsbCBiZSBsb2dnZWQgaW4gdG8gRmlyZWJhc2Ugb24geW91ciBDTEkgYW5kIHlvdXIgRmlyZWJhc2UgdG9rZW4gd2lsbCBiZSBwcmludGVkIG9uIHRoZSBzY3JlZW4ganVzdCBiZWxvdyB0aGUgbGluZSB0aGF0IHJlYWRzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O+KclCBTdWNjZXNzISBVc2UgdGhpcyB0b2tlbiB0byBsb2dpbiBvbiBhIENJIHNlcnZlciZsdDsvY29kZSZndDsuIFBsZWFzZSBrZWVwIHRoaXMgdG9rZW4gc2VjdXJlIGFzIHlvdSB3aWxsIGJlIG5lZWRpbmcgaXQgbGF0ZXIgb24gaW4gdGhpcyB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOZXh0LCBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kIGF0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdCB0byBpbml0aWFsaXplIHRoZSBGaXJlYmFzZSBzZXQgdXA6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtmaXJlYmFzZSBpbml0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RoZSBmaXJzdCBwcm9tcHQgeW91IHdpbGwgZ2V0IGZyb20gdGhpcyBjb21tYW5kIGlzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oz8gV2hpY2ggRmlyZWJhc2UgQ0xJIGZlYXR1cmVzIGRvIHlvdSB3YW50IHRvIHNldCB1cCBmb3IgdGhpcyBmb2xkZXI/IFByZXNzIFNwYWNlIHRvIHNlbGVjdCBmZWF0dXJlcywgdGhlbiBFbnRlciB0byBjb25maXJtIHlvdXIgY2hvaWNlcy4mbHQ7L2NvZGUmZ3Q7LiBTZWxlY3QgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7SG9zdGluZyZsdDsvY29kZSZndDsgYW5kIGhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbnRlciZsdDsvY29kZSZndDsgdG8gZ28gdG8gdGhlIG5leHQgcHJvbXB0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItc2VsZWN0LWZlYXR1cmVzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U2VsZWN0IFByb2plY3QgRmVhdHVyZXMmcXVvdDsgLyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIG5leHQgcHJvbXB0IGlzIGFib3V0IGFzc29jaWF0aW5nIHlvdXIgbG9jYWwgcHJvamVjdCB3aXRoIGEgRmlyZWJhc2UgcHJvamVjdCBvbiB5b3VyIEZpcmViYXNlIGFjY291bnQuIEZyb20gaGVyZSwgeW91IGNhbiBjaG9vc2UgdG8gdXNlIGFuIGV4aXN0aW5nIHByb2plY3Qgb3IgY3JlYXRlIGEgbmV3IG9uZS4gU2VsZWN0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1VzZSBhbiBleGlzdGluZyBwcm9qZWN0Jmx0Oy9jb2RlJmd0OyBhbmQgaGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0VudGVyJmx0Oy9jb2RlJmd0OyB0byBtb3ZlIHRvIHRoZSBuZXh0IHByb21wdC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIHNlbGVjdGlvbiB3aWxsIHJlc3VsdCBpbiB0aGUgQ0xJIGxvYWRpbmcgeW91ciBGaXJlYmFzZSBwcm9qZWN0cyBmb3IgeW91IHRvIHNlbGVjdCBmcm9tIGluIHRoZSBuZXh0IHByb21wdC4gU2VsZWN0IHRoZSBwcm9qZWN0IHdlIGp1c3QgY3JlYXRlZCBvbiBvdXIgRmlyZWJhc2UgY29uc29sZSwgYW5kIGhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbnRlciZsdDsvY29kZSZndDsgdG8gY29uZmlybSB5b3VyIHNlbGVjdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTIyLXNlbGVjdC1wcm9qZWN0LnBuZyZxdW90OyBhbHQ9JnF1b3Q7U2VsZWN0IFByb2plY3QmcXVvdDsgLyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O3N0cm9uZyZndDtOb3RlJmx0Oy9zdHJvbmcmZ3Q7OiAmbHQ7aSZndDtJZiB5b3VyIHByb2plY3QgaXMgbm90IHZpc2libGUgaW4gdGhlIGxpc3QsIHN0b3AgdGhpcyBwcm9jZXNzICgmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdHJsICsgQyZsdDsvY29kZSZndDspLCB0aGVuIHJlcnVuIHRoZSBjb21tYW5kIHdpdGggdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy0tcHJvamVjdCZsdDsvY29kZSZndDsgb3B0aW9uOiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJlYmFzZSBpbml0IC0tcHJvamVjdCAmYW1wO2x0O3Byb2plY3RJZCZhbXA7Z3Q7Jmx0Oy9jb2RlJmd0OyByZXBsYWNpbmcgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cHJvamVjdElkJmx0Oy9jb2RlJmd0OyB3aXRoIHlvdXIgbmV3bHkgY3JlYXRlZCBGaXJlYmFzZSBwcm9qZWN0IElELiBTZWxlY3QgJmx0O3N0cm9uZyZndDtIb3N0aW5nJmx0Oy9zdHJvbmcmZ3Q7IGp1c3QgYXMgYmVmb3JlLiZsdDsvaSZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgbmV4dCBwcm9tcHQgYXNrcyBmb3IgdGhlIHByb2plY3QgZm9sZGVyIGFuZCBzdWdnZXN0cyB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cHVibGljJmx0Oy9jb2RlJmd0OyBmb2xkZXIuIElvbmljIGtlZXBzIGl0cyBwcm9kdWN0aW9uIGJ1aWxkIGluIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2J1aWxkJmx0Oy9jb2RlJmd0Oywgc28gZW50ZXIgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7YnVpbGQmbHQ7L2NvZGUmZ3Q7IGZvciB0aGlzIHByb21wdCBhbmQgaGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0VudGVyJmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgZm9sbG93aW5nIHByb21wdCByZWFkcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDs/IENvbmZpZ3VyZSBhcyBhIHNpbmdsZS1wYWdlIGFwcCAocmV3cml0ZSBhbGwgdXJscyB0byAvaW5kZXguaHRtbCk/Jmx0Oy9jb2RlJmd0Oy4gVHlwZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt5Jmx0Oy9jb2RlJmd0OywgYW5kIGhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbnRlciZsdDsvY29kZSZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIGNvbXBsZXRlIHRoZSBzZXR1cCBhbmQgeW91IHdpbGwgaGF2ZSB0d28gbmV3IGZpbGVzOiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuZmlyZWJhc2VyYyZsdDsvY29kZSZndDssIHdoaWNoIHNldHMgdGhlIHByb2plY3QgaWQgZm9yIHRoaXMgYXBwbGljYXRpb24gYW5kICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ZpcmViYXNlLmpzb24mbHQ7L2NvZGUmZ3Q7LCB3aGljaCBjb250YWlucyBkZXRhaWxzIGFib3V0IHRoZSBvcHRpb25zIHdlIHNlbGVjdGVkIGR1cmluZyB0aGUgc2V0dXAgcHJvY2VzcyBhbmQgc29tZSBvdGhlciBkZWZhdWx0IHNldHRpbmdzLiBXZSBjYW4gbm93IHByb2NlZWQgdG8gYnVpbGRpbmcgb3VyIGRlcGxveW1lbnQgcGlwZWxpbmUuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0J1aWxkaW5nIHRoZSBDRCBwaXBlbGluZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBzZXQgdXAgb3VyIGNvbnRpbnVvdXMgZGVwbG95bWVudCBwaXBlbGluZSwgd2UgbmVlZCB0byB0YWtlIHRoZSBmb2xsb3dpbmcgc3RlcHM6Jmx0Oy9wJmd0OwoKJmx0O29sJmd0OwogICZsdDtsaSZndDtQdXNoIG91ciBwcm9qZWN0IHRvIGEgcmVtb3RlIHJlcG9zaXRvcnkgKEdpdEh1YiwgaW4gdGhpcyBjYXNlKSBjb25uZWN0ZWQgdG8gb3VyIENpcmNsZUNJIGFjY291bnQmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBZGQgb3VyIGFwcGxpY2F0aW9uIGFzIGEgbmV3IHByb2plY3Qgb24gQ2lyY2xlQ0kmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBZGQgb3VyIEZpcmViYXNlIHRva2VuIGFzIGFuIGVudmlyb25tZW50IHZhcmlhYmxlIHRvIG91ciBDaXJjbGVDSSBwcm9qZWN0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7SW5zdGFsbCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJlYmFzZS10b29scyZsdDsvY29kZSZndDsgbG9jYWxseSBpbiB0aGUgcHJvamVjdCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0NyZWF0ZSBvdXIgcGlwZWxpbmUgY29uZmlndXJhdGlvbiBmaWxlJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7UHVzaCBwcm9qZWN0IGNoYW5nZXMgdG8gb3VyIHJlcG9zaXRvcnkgdG8gaW5pdGlhdGUgZGVwbG95bWVudCZsdDsvbGkmZ3Q7CiZsdDsvb2wmZ3Q7CgombHQ7cCZndDtMZXTigJlzIGJlZ2luLiZsdDsvcCZndDsKCiZsdDtwJmd0O0ZpcnN0LCBzY2FmZm9sZCBhIHF1aWNrICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3BhY2thZ2UuanNvbiZsdDsvY29kZSZndDsgZmlsZSBieSBydW5uaW5nIHRoZSBmb2xsb3dpbmcgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2xhbmd1YWdlLWJhc2ggaGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluaXQgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7LXkmbHQ7L3NwYW4mZ3Q7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0luaXRpYWxpemUgdGhlIHByb2plY3QgZm9sZGVyIGFzIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Z2l0Jmx0Oy9jb2RlJmd0OyByZXBvc2l0b3J5IChpZiBpdCBpc27igJl0IGFscmVhZHkpIGFuZCBwdXNoIHRvIHlvdXIgcmVtb3RlIHJlcG9zaXRvcnkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCBzdGVwIGlzIHRvIHNldCB1cCB0aGUgcmVwb3NpdG9yeSBmb3Igb3VyIHByb2plY3QgYXMgYSBDaXJjbGVDSSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0O09uIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vYXBwLmNpcmNsZWNpLmNvbS9wcm9qZWN0cyZxdW90OyZndDtDaXJjbGVDSSBjb25zb2xlJmx0Oy9hJmd0Oywgc2VsZWN0IHRoZSBhY2NvdW50IHRvIHZpZXcgeW91ciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9qZWN0cyZsdDsvY29kZSZndDsgcGFnZS4gSWYgdGhlIEdpdEh1YiByZXBvIGlzIG5vdCB2aXNpYmxlIGhlcmUgdGhlbiBjbGljayAmbHQ7c3Ryb25nJmd0O0FkZCBQcm9qZWN0cyZsdDsvc3Ryb25nJmd0OyBvbiB0aGUgc2lkZS1tZW51LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItYWRkLXByb2plY3QucG5nJnF1b3Q7IGFsdD0mcXVvdDtBZGQgUHJvamVjdCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMi1zdGFydC1idWlsZGluZzEucG5nJnF1b3Q7IGFsdD0mcXVvdDtTdGFydCBCdWlsZGluZyAtIENvbmZpZyBzYW1wbGUmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtPbiB0aGUgc2V0dXAgcGFnZSwgY2xpY2sgJmx0O3N0cm9uZyZndDtTdGFydCBCdWlsZGluZyZsdDsvc3Ryb25nJmd0Oy4gQmVmb3JlIHRoZSBidWlsZCBzdGFydHMsIHlvdSBnZXQgYSBwcm9tcHQgdG8gZWl0aGVyIGRvd25sb2FkIGFuZCB1c2UgdGhlIHByb3ZpZGVkIENpcmNsZUNJIGNvbmZpZ3VyYXRpb24gZmlsZSBhbmQgaGF2ZSBpdCBvbiBhIHNlcGFyYXRlIGJyYW5jaCBvciBzZXQgdXAgb25lIG1hbnVhbGx5LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItc3RhcnQtYnVpbGRpbmcyLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgQnVpbGRpbmcgLSBBZGQgbWFudWFsbHkmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtTZWxlY3QgJmx0O3N0cm9uZyZndDtBZGQgTWFudWFsbHkmbHQ7L3N0cm9uZyZndDsgdG8gcHJvY2VlZC4gVGhpcyB3aWxsIHByb21wdCBhbm90aGVyIGRpYWxvZyB0aGF0IGNoZWNrcyB0byBjb25maXJtIHRoYXQgeW91IGhhdmUgYSBjb25maWd1cmF0aW9uIGZpbGUgc2V0IHVwIHRvIGJlZ2luIGJ1aWxkaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItc3RhcnQtYnVpbGRpbmczLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgQnVpbGRpbmcgLSBDb25maXJtIGNvbmZpZ3VyYXRpb24mcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayAmbHQ7c3Ryb25nJmd0O1N0YXJ0IEJ1aWxkaW5nJmx0Oy9zdHJvbmcmZ3Q7IHRvIGNvbXBsZXRlIHRoZSBzZXR1cC4gVGhpcyB3aWxsIGltbWVkaWF0ZWx5IHRyaWdnZXIgdGhlIHBpcGVsaW5lLiBUaGUgYnVpbGQgd2lsbCBmYWlsIGJlY2F1c2Ugd2UgaGF2ZW7igJl0IGFkZGVkIG91ciBwaXBlbGluZSBjb25maWd1cmF0aW9uIGZpbGUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T3VyIG5leHQgc3RlcCBpcyB0byBhZGQgb3VyIEZpcmViYXNlIHRva2VuIGFzIGFuIGVudmlyb25tZW50IHZhcmlhYmxlIGluIHRoZSBDaXJjbGVDSSBwcm9qZWN0IHdlIGp1c3QgY3JlYXRlZC4gT24gdGhlICZsdDtzdHJvbmcmZ3Q7UGlwZWxpbmVzJmx0Oy9zdHJvbmcmZ3Q7IHBhZ2UsIHdpdGggb3VyIHByb2plY3Qgc2VsZWN0ZWQsIGNsaWNrICZsdDtzdHJvbmcmZ3Q7UHJvamVjdCBTZXR0aW5ncyZsdDsvc3Ryb25nJmd0OyAoYXQgdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHdlYnBhZ2UpLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItcHJvamVjdC1zZXR0aW5ncy5wbmcmcXVvdDsgYWx0PSZxdW90O1Byb2plY3QgU2V0dGluZ3MmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtPbiB0aGUgc2V0dGluZ3MgcGFnZSBzaWRlIG1lbnUsIGNsaWNrICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0Vudmlyb25tZW50IFZhcmlhYmxlcyZsdDsvY29kZSZndDsuIE9uIHRoZSB2YXJpYWJsZXMgc2V0dXAgcGFnZSwgY2xpY2sgJmx0O3N0cm9uZyZndDtBZGQgRW52aXJvbm1lbnQgVmFyaWFibGUmbHQ7L3N0cm9uZyZndDsuIEEgZGlhbG9nIGJveCB3aWxsIGFwcGVhci4gSW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O05hbWUmbHQ7L2NvZGUmZ3Q7IGZpZWxkLCBlbnRlciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtGSVJFQkFTRV9UT0tFTiZsdDsvY29kZSZndDsgYW5kIGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtWYWx1ZSZsdDsvY29kZSZndDsgZmllbGQsIHBhc3RlIGluIHRoZSBGaXJlYmFzZSB0b2tlbiB5b3UgZ290IGZyb20geW91ciBDTEkgZWFybGllci4gQ2xpY2sgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7U3VibWl0Jmx0Oy9jb2RlJmd0OyB0byBjb21wbGV0ZSB0aGUgcHJvY2Vzcy4gWW91IG5vdyBoYXZlIHRoZSB0b2tlbiB2YXJpYWJsZSByZWdpc3RlcmVkLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItZmlyZWJhc2UtdG9rZW4ucG5nJnF1b3Q7IGFsdD0mcXVvdDtQcm9qZWN0IFNldHRpbmdzJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7UmV0dXJuIHRvIHRoZSBwcm9qZWN0IG9uIHlvdXIgc3lzdGVtLiBSdW4gdGhlIGZvbGxvd2luZyBjb21tYW5kIHRvIGluc3RhbGwgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZmlyZWJhc2UtdG9vbHMmbHQ7L2NvZGUmZ3Q7IGF0IHRoZSByb290IG9mIHRoZSBhcHBsaWNhdGlvbiBzbyB5b3UgY2FuIGhhdmUgaXQgcmVnaXN0ZXJlZCBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7IGFzIGEgZGV2ZWxvcG1lbnQgZGVwZW5kZW5jeTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O25wbSBpbnN0YWxsIC1EIGZpcmViYXNlLXRvb2xzCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O09uY2UgdGhhdCBwcm9jZXNzIGlzIGNvbXBsZXRlLCBpdCBpcyB0aW1lIHRvIGNyZWF0ZSBvdXIgZGVwbG95bWVudCBjb25maWd1cmF0aW9uIGZpbGUuIEF0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdCwgY3JlYXRlIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy5jaXJjbGVjaSZsdDsvY29kZSZndDsgYW5kIGEgZmlsZSB3aXRoaW4gaXQgbmFtZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y29uZmlnLnltbCZsdDsvY29kZSZndDsuIEluc2lkZSB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y29uZmlnLnltbCZsdDsvY29kZSZndDsgZmlsZSwgZW50ZXIgdGhlIGZvbGxvd2luZyBjb2RlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7dmVyc2lvbjogMgpqb2JzOgogIGJ1aWxkOgogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaW1nL25vZGU6MTIuMTYKICAgIHdvcmtpbmdfZGlyZWN0b3J5OiB+L3JlcG8KICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgICMgRG93bmxvYWQgYW5kIGNhY2hlIGRlcGVuZGVuY2llcwogICAgICAtIHJlc3RvcmVfY2FjaGU6CiAgICAgICAgICBrZXlzOgogICAgICAgICAgICAtIHYxLWRlcGVuZGVuY2llcy17eyBjaGVja3N1bSAmcXVvdDtwYWNrYWdlLmpzb24mcXVvdDsgfX0KICAgICAgICAgICAgLSB2MS1kZXBlbmRlbmNpZXMtCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogSW5zdGFsbCBEZXBlbmRlbmNpZXMKICAgICAgICAgIGNvbW1hbmQ6IG5wbSBpbnN0YWxsCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogQnVpbGQgQXBwbGljYXRpb24KICAgICAgICAgIGNvbW1hbmQ6IG5wbSBydW4gYnVpbGQKICAgICAgLSBzYXZlX2NhY2hlOgogICAgICAgICAga2V5OiB2MS1ucG0tZGVwcy17eyBjaGVja3N1bSAmcXVvdDtwYWNrYWdlLWxvY2suanNvbiZxdW90OyB9fQogICAgICAgICAgcGF0aHM6CiAgICAgICAgICAgIC0gLi9ub2RlX21vZHVsZXMKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBEZXBsb3kgdG8gRmlyZWJhc2UKICAgICAgICAgIGNvbW1hbmQ6IC4vbm9kZV9tb2R1bGVzLy5iaW4vZmlyZWJhc2UgZGVwbG95IC0tdG9rZW4gJnF1b3Q7JEZJUkVCQVNFX1RPS0VOJnF1b3Q7IC0tb25seSBob3N0aW5nCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0luIHRoZSBkZXBsb3ltZW50IGZpbGUgYWJvdmUsIHdlIHN0YXJ0IGJ5IGNoZWNraW5nIG91dCB0aGUgcHJvamVjdCBmcm9tIG91ciByZW1vdGUgcmVwb3NpdG9yeS4gV2UgdGhlbiBpbnN0YWxsIG91ciBkZXBlbmRlbmNpZXMuIE5leHQsIHdlIHJ1biB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7YnVpbGQmbHQ7L2NvZGUmZ3Q7IHNjcmlwdCBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7IHRvIGNyZWF0ZSBhIHByb2R1Y3Rpb24gdmVyc2lvbiBvZiBvdXIgSW9uaWMgYXBwIGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtidWlsZCZsdDsvY29kZSZndDsgZm9sZGVyLCBhbmQgdGhlbiBjYWNoZSBvdXIgZGVwZW5kZW5jaWVzLiBGaW5hbGx5LCB3ZSBydW4gb3VyICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ZpcmViYXNlLXRvb2xzJmx0Oy9jb2RlJmd0OyBmcm9tIHRoZSBsb2NhbCBpbnN0YWxsYXRpb24gdG8gdXNlIG91ciBGaXJlYmFzZSB0b2tlbiB0byBkZXBsb3kgb3VyIGFwcGxpY2F0aW9uLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RpbWUgdG8gcHV0IG91ciBtb25leSB3aGVyZSBvdXIgbW91dGggaXMuIExldOKAmXMgY29tbWl0IG91ciBjaGFuZ2VzIGFuZCBwdXNoIHRoZW0gdG8gb3VyIHJlcG9zaXRvcnkgdG8gY2F1c2Ugb3VyIGRlcGxveW1lbnQgc2NyaXB0IHRvIGJlIHRyaWdnZXJlZCBhbmQgb3VyIGFwcGxpY2F0aW9uIGRlcGxveWVkIHRvIEZpcmViYXNlIGhvc3RpbmcuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMi1idWlsZC1zdWNjZXNzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7QnVpbGQgc3VjY2VzcyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrIGludG8gdGhlIGJ1aWxkIHRvIHNlZSB0aGUgYmVoaW5kLXRoZS1zY2VuZXMgb2YgdGhlIGRlcGxveW1lbnQgYXMgc2hvd24gYmVsb3cuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMi1idWlsZC1wcm9jZXNzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7QnVpbGQgUHJvY2VzcyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0Zyb20gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0RlcGxveSB0byBGaXJlYmFzZSZsdDsvY29kZSZndDsgc2VjdGlvbi4gWW91IGNhbiBzZWUgdGhlIFVSTCBvZiB0aGUgZGVwbG95ZWQgYXBwbGljYXRpb24uIEZvciB0aGlzIHR1dG9yaWFsIGl0IGlzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2h0dHBzOi8vbXktaW9uaWMtYXBwLWQyYTFkLndlYi5hcHAvJmx0Oy9jb2RlJmd0Oy4gTG9hZCB5b3VycyBpbiB5b3VyIGJyb3dzZXIgdG8gdGVzdCB5b3VyIGFwcGxpY2F0aW9uLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjItaW9uaWMtbGl2ZS5wbmcmcXVvdDsgYWx0PSZxdW90O0xpdmUgQXBwbGljYXRpb24mcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q29uY2x1c2lvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtJZiB5b3XigJlyZSBzdGlsbCBtYW51YWxseSBjb3B5aW5nIGZpbGVzIG92ZXIgdG8geW91ciBzZXJ2ZXIgZWFjaCB0aW1lIHlvdXIgYXBwbGljYXRpb24gaXMgdXBkYXRlZCwgdGhlbiB5b3UgbmVlZCB0byBzYXZlIHlvdXJzZWxmIGFsbCB0aGF0IHN0cmVzcyBieSBzZXR0aW5nIHVwIGFuIGF1dG9tYXRlZCBkZXBsb3ltZW50IHBpcGVsaW5lIHNvIHlvdXIgZGVwbG95bWVudHMgYXJlIGRvbmUgYW55dGltZSB5b3UgcHVzaCB1cGRhdGVzLiBXaXRoIHRoaXMsIHlvdSBvbmx5IG5lZWQgdG8gd29ycnkgYWJvdXQgYnVpbGRpbmcgeW91ciBhcHBsaWNhdGlvbiwgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS8mcXVvdDsmZ3Q7Q2lyY2xlQ0kmbHQ7L2EmZ3Q7IHRha2VzIGNhcmUgb2YgdGhlIGRlcGxveW1lbnRzIGZvciB5b3UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SGFwcHkgQ29kaW5nISZsdDsvcCZndDsKCiZsdDtociAvJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL2NvZGVyb25mbGVlaz9sYW5nPWVuJnF1b3Q7Jmd0O0Zpa2F5byZsdDsvYSZndDsgaXMgYSBmdWxsc3RhY2sgZGV2ZWxvcGVyIGFuZCBhdXRob3Igd2l0aCBvdmVyIGEgZGVjYWRlIG9mIGV4cGVyaWVuY2UgZGV2ZWxvcGluZyB3ZWIgYW5kIG1vYmlsZSBzb2x1dGlvbnMuIEhlIGlzIGN1cnJlbnRseSB0aGUgU29mdHdhcmUgTGVhZCBhdCBUZWNoIFNwZWNpYWxpc3QgQ29uc3VsdGluZyBhbmQgZGV2ZWxvcHMgY291cnNlcyBmb3IgUGFja3QgYW5kIFVkZW15LiBIZSBoYXMgYSBzdHJvbmcgcGFzc2lvbiBmb3IgdGVhY2hpbmcgYW5kIGhvcGVzIHRvIGJlY29tZSBhIGZ1bGwtdGltZSBhdXRob3IuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5Db250aW51b3VzIGludGVncmF0aW9uIGZvciBTeW1mb255IGFwcGxpY2F0aW9ucyB3aXRoIEJlaGF0PC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2NvbnRpbnVvdXMtaW50ZWdyYXRpb24tc3ltZm9ueS1iZWhhdC88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+V2VkLCAwMSBKdWwgMjAyMCAwOTowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9jb250aW51b3VzLWludGVncmF0aW9uLXN5bWZvbnktYmVoYXQvPC9ndWlkPgogICAgICAgIAogICAgICAgICAgPGRjOmNyZWF0b3I+T2x1c3VzaSBPbHV5ZW1pPC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9kb2NzLmJlaGF0Lm9yZyZxdW90OyZndDtCZWhhdCZsdDsvYSZndDsgaXMgYW4gb3Blbi1zb3VyY2UgdGVzdGluZyBmcmFtZXdvcmsgdGhhdCBzdXBwb3J0cyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0JlaGF2aW9yLWRyaXZlbl9kZXZlbG9wbWVudCZxdW90OyZndDtCZWhhdmlvci1Ecml2ZW4gRGV2ZWxvcG1lbnQmbHQ7L2EmZ3Q7LiBGb2N1c2VkIG9uIHJlcXVpcmVtZW50cyBjb21tdW5pY2F0aW9uLCBpdCBoYXMgYSByZXB1dGF0aW9uIGZvciBoZWxwaW5nIGVuZ2luZWVycyBidWlsZCB0b3dhcmRzIGdyZWF0IHN5c3RlbXMsIHZlcnN1cyBidWlsZGluZyBzeXN0ZW1zIGFuZCB0ZXN0aW5nIHRoZWlyIGdyZWF0bmVzcy4gU3ltZm9ueSByZW1haW5zIG9uZSBvZiB0aGUgdG9wIFBIUCBmcmFtZXdvcmtzLiBJdCBpcyBhZ25vc3RpYyBhbmQgYWxsb3dzIHlvdSB0byB3b3JrIHdpdGggYW55IHRlc3RpbmcgZnJhbWV3b3JrLiBJbiB0aGlzIHR1dG9yaWFsLCB3ZSB3aWxsIHNldCB1cCBhICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vY29udGludW91cy1pbnRlZ3JhdGlvbi8mcXVvdDsmZ3Q7Y29udGludW91cyBpbnRlZ3JhdGlvbiZsdDsvYSZndDsgcGlwZWxpbmUgZm9yIGEgU3ltZm9ueSBhcHBsaWNhdGlvbiB3aXRoIGEgZnVuY3Rpb25hbCB0ZXN0IHBvd2VyZWQgYnkgQmVoYXQuIFRoZSBhcHBsaWNhdGlvbiB3aWxsIHJldHVybiBhIGxpc3Qgb2YgY3VzdG9tZXJzLiBUbyBrZWVwIHRoaW5ncyBzaW1wbGUsIHdlIHdvbuKAmXQgaW50ZXJhY3Qgd2l0aCBhIGRhdGFiYXNlLiBJbnN0ZWFkLCB3ZSB3aWxsIGhhcmRjb2RlIHRoZSBjdXN0b21lcuKAmXMgZGV0YWlscy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtDaHJvbm9sb2dpY2FsbHksIHdlIHdpbGw6Jmx0Oy9wJmd0OwoKJmx0O29sJmd0OwogICZsdDtsaSZndDtDcmVhdGUgYSBuZXcgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N5bWZvbnkuY29tLyZxdW90OyZndDtTeW1mb255Jmx0Oy9hJmd0OyBhcHBsaWNhdGlvbiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0luc3RhbGwgQmVoYXQgdmlhIENvbXBvc2VyIGFuZCBpbml0aWFsaXplIGl0IHdpdGhpbiBvdXIgYXBwbGljYXRpb24mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtDcmVhdGUgYSBHaXRIdWIgcmVwb3NpdG9yeSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0NyZWF0ZSBhbiBlbmRwb2ludCB3aXRoIGRlZmF1bHQgZGF0YSBhbmQgd3JpdGUgYSB0ZXN0IGZvciBpdCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1J1biB0aGUgdGVzdCBsb2NhbGx5LCB0aGVuIGNvbmZpZ3VyZSBDaXJjbGVDSSB0byBhdXRvbWF0ZSBpdCZsdDsvbGkmZ3Q7CiZsdDsvb2wmZ3Q7CgombHQ7aDImZ3Q7UHJlcmVxdWlzaXRlcyZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBzdWNjZXNzZnVsbHkgYWNoaWV2ZSB0aGUgb2JqZWN0aXZlcyBvZiB0aGlzIHR1dG9yaWFsLCB5b3Ugd2lsbCBuZWVkIHRoZSBmb2xsb3dpbmc6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDtBICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL2pvaW4mcXVvdDsmZ3Q7R2l0SHViIGFjY291bnQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL3NpZ251cC8mcXVvdDsmZ3Q7Q2lyY2xlQ0kgYWNjb3VudCZsdDsvYSZndDsmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2V0Y29tcG9zZXIub3JnLyZxdW90OyZndDtDb21wb3NlciZsdDsvYSZndDsgaW5zdGFsbGVkIGdsb2JhbGx5IG9uIHlvdXIgY29tcHV0ZXImbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBIGJhc2ljIHVuZGVyc3RhbmRpbmcgb2YgYnVpbGRpbmcgYXBwbGljYXRpb25zIHdpdGggJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N5bWZvbnkuY29tL2RvYy9jdXJyZW50L2luZGV4Lmh0bWwmcXVvdDsmZ3Q7U3ltZm9ueSZsdDsvYSZndDsmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtOb3QgbWFuZGF0b3J5IGJ1dCBhbiBpbml0aWFsIGV4cGVyaWVuY2Ugd2l0aCBCZWhhdCBpcyBhIHBsdXMmbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O2gyJmd0O0luc3RhbGxpbmcgYSBTeW1mb255IGFwcGxpY2F0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1VzaW5nIENvbXBvc2VyLCBjcmVhdGUgYSBuZXcgU3ltZm9ueSBhcHBsaWNhdGlvbiBieSBydW5uaW5nIHRoZSBmb2xsb3dpbmcgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2NvbXBvc2VyIGNyZWF0ZS1wcm9qZWN0IHN5bWZvbnkvd2Vic2l0ZS1za2VsZXRvbiBzeW1mb255LWJlaGF0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O09uY2UgdGhlIGluc3RhbGxhdGlvbiBwcm9jZXNzIGhhcyBiZWVuIGNvbXBsZXRlZCwgeW91IHdpbGwgaGF2ZSBhIG5ldyBhcHBsaWNhdGlvbiB3aXRoIGFsbCBpdHMgZGVwZW5kZW5jaWVzIGluc3RhbGxlZCBpbiBhIGZvbGRlciBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzeW1mb255LWJlaGF0Jmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtNb3ZlIGludG8gdGhlIHByb2plY3QgZm9sZGVyIGFuZCBpbnN0YWxsIHRoZSByZXF1aXJlZCB0b29scyB0byBmYWNpbGl0YXRlIHRoZSBmdW5jdGlvbmFsIHRlc3Rpbmcgb2YgdGhlIGFwcGxpY2F0aW9uIGJ5IHJ1bm5pbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kczombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0Oy8vIG1vdmUgaW50byBwcm9qZWN0CmNkIHN5bWZvbnktYmVoYXQKCi8vIGluc3RhbGwgd2ViIHNlcnZlciBhbmQgQmVoYXQKY29tcG9zZXIgcmVxdWlyZSBiZWhhdC9iZWhhdCBzeW1mb255L3dlYi1zZXJ2ZXItYnVuZGxlIC0tZGV2IF40LjQuMgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGUgbGFzdCBjb21tYW5kIGFib3ZlIHdpbGwgaW5zdGFsbDombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2JlaGF0L2JlaGF0Jmx0Oy9jb2RlJmd0OzogVGhlIGxhdGVzdCB2ZXJzaW9uIG9mIEJlaGF0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3ltZm9ueS93ZWItc2VydmVyLWJ1bmRsZSZsdDsvY29kZSZndDs6IFRoZSB3ZWIgc2VydmVyIGZvciBydW5uaW5nIGEgU3ltZm9ueSBhcHBsaWNhdGlvbiBsb2NhbGx5Jmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMiZndDtJbml0aWFsaXppbmcgQmVoYXQmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7QWZ0ZXIgaW5zdGFsbGluZyBCZWhhdCwgdGhlIGZpcnN0IHRoaW5nIHRvIGRvIGlzIGluaXRpYWxpemUgaXQgd2l0aGluIG91ciBhcHBsaWNhdGlvbi4gVGhpcyBpcyBjcnVjaWFsLiBJdCBjb21lcyB3aXRoIGEgYm9pbGVycGxhdGUgdGhhdCB3ZSBjYW4gYnVpbGQgb24gYW5kIGl0IGNvbmZpZ3VyZXMgdGhlIHRlc3Qgc3VpdGUgdGhhdCB3aWxsIHRlbGwgQmVoYXQgd2hlcmUgdG8gZmluZCBhbmQgaG93IHRvIHRlc3Qgb3VyIGFwcGxpY2F0aW9uLiBJbml0aWFsaXplIHVzaW5nIHRoZSBmb2xsb3dpbmcgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3ZlbmRvci9iaW4vYmVoYXQgLS1pbml0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIG91dHB1dDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0OytkIGZlYXR1cmVzIC0gcGxhY2UgeW91ciAqLmZlYXR1cmUgZmlsZXMgaGVyZQorZCBmZWF0dXJlcy9ib290c3RyYXAgLSBwbGFjZSB5b3VyIGNvbnRleHQgY2xhc3NlcyBoZXJlCitmIGZlYXR1cmVzL2Jvb3RzdHJhcC9GZWF0dXJlQ29udGV4dC5waHAgLSBwbGFjZSB5b3VyIGRlZmluaXRpb25zLCB0cmFuc2Zvcm1hdGlvbnMgYW5kIGhvb2tzIGhlcmUKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7QmVoYXQgY3JlYXRlZCBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ZlYXR1cmVzJmx0Oy9jb2RlJmd0OyBkaXJlY3RvcnkgdGhhdCB3aWxsIGhvbGQgdGhlIHRlc3Qgc2NyaXB0IGZvciBmZWF0dXJlcy4gSXQgd2lsbCBhbHNvIGNyZWF0ZSBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0ZlYXR1cmVDb250ZXh0Jmx0Oy9jb2RlJmd0OyBjbGFzcyBpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZmVhdHVyZXMvYm9vdHN0cmFwJmx0Oy9jb2RlJmd0OyBmb2xkZXIuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O1NvbWUgaW1wb3J0YW50IGNvbmNlcHRzIGluIEJlaGF0Jmx0Oy9oMyZndDsKCiZsdDtwJmd0O0lmIHlvdSBhcmUgbmV3IHRvIEJlaGF0LCB0aGUgZm9sbG93aW5nIGRlZmluaXRpb25zIHdpbGwgYmUgcXVpdGUgaGVscGZ1bDombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7RmVhdHVyZSZsdDsvc3Ryb25nJmd0OzogQSBmaWxlIHRoYXQgcmVwcmVzZW50cyBhIHVuaXQgb2YgZnVuY3Rpb25hbGl0eSB0aGF0IGluY2x1ZGVzIHRoZSBkZWZpbml0aW9ucywgc2NlbmFyaW9zLCBhbmQgc3RlcHMgdG8gZmFjaWxpdGF0ZSB0ZXN0aW5nIHRoYXQgcGFydGljdWxhciBmdW5jdGlvbmFsaXR5LiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7U2NlbmFyaW8mbHQ7L3N0cm9uZyZndDs6IEEgY29sbGVjdGlvbiBvZiBzdGVwcyB0aGF0IHJlY3JlYXRlIGNvbmRpdGlvbnMgYW5kIHVzZXIgYmVoYXZpb3IgcGF0dGVybnMuJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O3N0cm9uZyZndDtTdGVwJmx0Oy9zdHJvbmcmZ3Q7OiBQbGFpbiBsYW5ndWFnZSBwYXR0ZXJucyB0aGF0IHNldCB1cCBwcmVjb25kaXRpb25zLCB0cmlnZ2VyIGV2ZW50cywgb3IgbWFrZSBhc3NlcnRpb25zIGFib3V0IHlvdXIgYXBwbGljYXRpb24uIFN0ZXBzIGFyZSByZXNwb25zaWJsZSBmb3IgdGhlIHJlYWwgYmVoYXZpb3Igb2YgYSBzaXRlLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtzdHJvbmcmZ3Q7S2V5d29yZCZsdDsvc3Ryb25nJmd0OzogQSBzcGVjaWZpYyBzZXQgb2Ygd29yZHMgdXNlZCBhcyB0aGUgYmVnaW5uaW5nIG9mIHN0ZXAgcGF0dGVybnMgZm9yIHJlYWRhYmlsaXR5IGFuZCB0byBncm91cCBzdGVwcyBpbnRvIHByZWNvbmRpdGlvbnMsIGFjdGlvbnMsIGFuZCBhc3NlcnRpb25zLCBlLmcuLCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtHaXZlbiZsdDsvY29kZSZndDssICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1doZW4mbHQ7L2NvZGUmZ3Q7LCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtUaGVuJmx0Oy9jb2RlJmd0Oy4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7c3Ryb25nJmd0O0NvbnRleHQmbHQ7L3N0cm9uZyZndDs6IEEgY2xhc3MgdGhhdCBwcm92aWRlcyBuZXcgd2F5cyB0byBpbnRlcmFjdCB3aXRoIHlvdXIgYXBwbGljYXRpb24uIFByaW1hcmlseSB0aGlzIG1lYW5zIHByb3ZpZGluZyBhZGRpdGlvbmFsIHN0ZXBzLiZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgdGhlIGZlYXR1cmUgZmlsZSBmb3IgdGhlIGN1c3RvbWVyIGVuZHBvaW50Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O09uZSBvZiB0aGUgZXhwZWN0ZWQgZmVhdHVyZXMgb2Ygb3VyIGFwcGxpY2F0aW9uIGlzIHRoYXQgYW55IHVzZXIgc2hvdWxkIGJlIGFibGUgdG8gdmlzaXQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2N1c3RvbWVyJmx0Oy9jb2RlJmd0OyBlbmRwb2ludCBhcyBhbiB1bmF1dGhlbnRpY2F0ZWQgdXNlciwgYW5kIHRoZW4gYmUgYWJsZSB0byB2aWV3IHRoZSBsaXN0IG9mIGN1c3RvbWVycyB3aXRob3V0IGFueSBpc3N1ZS4gVGhpcyBpcyB0aGUgZmVhdHVyZeKAmXMgc3RvcnkgYW5kIGluIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBjcmVhdGUgYSBmZWF0dXJlIGZpbGUgd2l0aCB0aGUgZGV0YWlscyBvZiBob3cgd2UgcHJlZmVyIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjdXN0b21lciZsdDsvY29kZSZndDsgZW5kcG9pbnQgdG8gZnVuY3Rpb24uIE5hdmlnYXRlIHRvIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmZWF0dXJlcyZsdDsvY29kZSZndDsgZm9sZGVyIGFuZCBjcmVhdGUgYSBmaWxlIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2N1c3RvbWVyLmZlYXR1cmUmbHQ7L2NvZGUmZ3Q7IHdpdGhpbiBpdC4gUGFzdGUgdGhlIGZvbGxvd2luZyBjb250ZW50IGludG8gdGhlIG5ldyBmaWxlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7RmVhdHVyZTogTGlzdCBvZiBjdXN0b21lcnMKICBJbiBvcmRlciB0byByZXRyaWV2ZSB0aGUgbGlzdCBvZiBjdXN0b21lcnMKICBBcyBhIHVzZXIKICBJIG11c3QgdmlzaXQgdGhlIGN1c3RvbWVycyBwYWdlCgogIFNjZW5hcmlvOiBJIHdhbnQgYSBsaXN0IG9mIGN1c3RvbWVycwogICAgR2l2ZW4gSSBhbSBhbiB1bmF1dGhlbnRpY2F0ZWQgdXNlcgogICAgV2hlbiBJIHJlcXVlc3QgYSBsaXN0IG9mIGN1c3RvbWVycyBmcm9tICZxdW90O2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9jdXN0b21lciZxdW90OwogICAgVGhlbiBUaGUgcmVzdWx0cyBzaG91bGQgaW5jbHVkZSBhIGN1c3RvbWVyIHdpdGggSUQgJnF1b3Q7MSZxdW90OwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGUgbGFuZ3VhZ2UgdXNlZCBieSBCZWhhdCB0byBkZXNjcmliZSB0aGUgZXhwZWN0ZWQgYmVoYXZpb3Igb2Ygc2V0cyBvZiBmZWF0dXJlcyB3aXRoaW4gYW4gYXBwbGljYXRpb24gaXMgcmVmZXJyZWQgdG8gYXMgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2N1Y3VtYmVyLmlvL2RvY3MvZ2hlcmtpbi9yZWZlcmVuY2UvJnF1b3Q7Jmd0O0doZXJraW4mbHQ7L2EmZ3Q7LiBJdCBpcyBhICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL21hcnRpbmZvd2xlci5jb20vYmxpa2kvQnVzaW5lc3NSZWFkYWJsZURTTC5odG1sJnF1b3Q7Jmd0O2J1c2luZXNzIHJlYWRhYmxlIGRvbWFpbiBzcGVjaWZpYyBsYW5ndWFnZSZsdDsvYSZndDsgY3JlYXRlZCBzcGVjaWZpY2FsbHkgZm9yIGJlaGF2aW9yIGRlc2NyaXB0aW9uLiBGcm9tIHRoZSBmaWxlIGFib3ZlLCB3ZSBkZXNjcmliZWQgb25lIG9mIHRoZSBmZWF0dXJlcyBleHBlY3RlZCBvZiBvdXIgYXBwbGljYXRpb24gYW5kIGNyZWF0ZWQgYSBjb250ZXh0IHRvIGRlc2NyaWJlIHRoZSBidXNpbmVzcyB2YWx1ZSB0aGF0IHRoZSBwcm9wb3NlZCBmZWF0dXJlIHdpbGwgYnJpbmcgdG8gb3VyIHN5c3RlbS4gVGhlbiB3ZSB1c2VkIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtTY2VuYXJpbyZsdDsvY29kZSZndDsga2V5d29yZCB0byBkZWZpbmUgdGhlIGRldGVybWluYWJsZSBidXNpbmVzcyBzaXR1YXRpb24gb2YgdGhlIGZlYXR1cmUuIFRoZSBzdGVwcyB0aGF0IGZvbGxvdyBkZXNjcmliZSB3aGF0IG5lZWRzIHRvIGJlIGRvbmUgZm9yIHRoZSBmZWF0dXJlIHRvIGJlIGFjdHVhbGl6ZWQuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NyZWF0aW5nIHRoZSBmZWF0dXJlIHNjZW5hcmlv4oCZcyBzdGVwcyBkZWZpbml0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O05vdyB0aGF0IHdlIGhhdmUgdGhlIGZlYXR1cmUgb2Ygb3VyIGFwcGxpY2F0aW9uIHByb3Blcmx5IG91dGxpbmVkLCB3ZSBuZWVkIHRvIGRlZmluZSB0aGUgc3RlcCBkZWZpbml0aW9ucyB3aXRoaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0ZlYXR1cmVDb250ZXh0Jmx0Oy9jb2RlJmd0Oy4gSWYgeW91IGV4ZWN1dGUgQmVoYXQgcmlnaHQgbm93IHdpdGg6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDt2ZW5kb3IvYmluL2JlaGF0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O3lvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIG91dHB1dDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O0ZlYXR1cmU6IExpc3Qgb2YgY3VzdG9tZXJzCiAgSW4gb3JkZXIgdG8gcmV0cmlldmUgdGhlIGxpc3Qgb2YgY3VzdG9tZXJzCiAgQXMgYSB1c2VyCiAgSSBtdXN0IHZpc2l0IHRoZSBjdXN0b21lcnMgcGFnZQoKICBTY2VuYXJpbzogSSB3YW50IGEgbGlzdCBvZiBjdXN0b21lcnMKICAgIEdpdmVuIEkgYW0gYW4gdW5hdXRoZW50aWNhdGVkIHVzZXIKICAgIFdoZW4gSSByZXF1ZXN0IGEgbGlzdCBvZiBjdXN0b21lcnMgZnJvbSAmcXVvdDtodHRwOi8vbG9jYWxob3N0OjgwMDAvY3VzdG9tZXImcXVvdDsKICAgIFRoZW4gVGhlIHJlc3VsdHMgc2hvdWxkIGluY2x1ZGUgYSBjdXN0b21lciB3aXRoIElEICZxdW90OzEmcXVvdDsKCjEgc2NlbmFyaW8gKDEgdW5kZWZpbmVkKQozIHN0ZXBzICgzIHVuZGVmaW5lZCkKMG0wLjAycyAoOS41OE1iKQoKICZhbXA7Z3Q7JmFtcDtndDsgZGVmYXVsdCBzdWl0ZSBoYXMgdW5kZWZpbmVkIHN0ZXBzLiBQbGVhc2UgY2hvb3NlIHRoZSBjb250ZXh0IHRvIGdlbmVyYXRlIHNuaXBwZXRzOgoKICBbMF0gTm9uZQogIFsxXSBGZWF0dXJlQ29udGV4dAogJmFtcDtndDsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhlIG91dHB1dCBpbmRpY2F0ZXMgdGhhdCBCZWhhdCByZWNvZ25pemVzIG91ciBzY2VuYXJpbyB3aXRoIHRoZSB0aHJlZSBzdGVwcyB0aGF0IHdlIGRlZmluZWQuIEhvd2V2ZXIsIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtGZWF0dXJlQ29udGV4dCZsdDsvY29kZSZndDsgY2xhc3MgaGFzIHNvbWUgbWlzc2luZyBtZXRob2RzIHRoYXQgcmVwcmVzZW50IGVhY2ggb2YgdGhlIHN0ZXBzIGNyZWF0ZWQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2N1c3RvbWVyLmZlYXR1cmUmbHQ7L2NvZGUmZ3Q7IGZpbGUuIEJlaGF0IHByb3ZpZGVzIGEgcm91dGUgdG8gZWFzaWx5IG1hcCBldmVyeSBzY2VuYXJpbyBzdGVwIHdpdGggYW4gYWN0dWFsIG1ldGhvZCBjYWxsZWQgc3RlcCBkZWZpbml0aW9ucy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtZb3UgY2FuIGVpdGhlciBjcmVhdGUgdGhlc2UgbWV0aG9kcyBtYW51YWxseSBvciBhbGxvdyBCZWhhdCB0byBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlIHRoZW0gZm9yIHlvdS4gRm9yIHRoaXMgdHV0b3JpYWwsIHdlIGFyZSBvcHRpbmcgZm9yIHRoZSBsYXR0ZXIuIFRvIHByb2NlZWQsIHNlbGVjdCBvcHRpb24gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7MSZsdDsvY29kZSZndDsuJmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDstLS0gRmVhdHVyZUNvbnRleHQgaGFzIG1pc3Npbmcgc3RlcHMuIERlZmluZSB0aGVtIHdpdGggdGhlc2Ugc25pcHBldHM6CgogICAgLyoqCiAgICAgKiBAR2l2ZW4gSSBhbSBhbiB1bmF1dGhlbnRpY2F0ZWQgdXNlcgogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gaUFtQW5VbmF1dGhlbnRpY2F0ZWRVc2VyKCkKICAgIHsKICAgICAgICB0aHJvdyBuZXcgUGVuZGluZ0V4Y2VwdGlvbigpOwogICAgfQoKICAgIC8qKgogICAgICogQFdoZW4gSSByZXF1ZXN0IGEgbGlzdCBvZiBjdXN0b21lcnMgZnJvbSA6YXJnMQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gaVJlcXVlc3RBTGlzdE9mQ3VzdG9tZXJzRnJvbSgkYXJnMSkKICAgIHsKICAgICAgICB0aHJvdyBuZXcgUGVuZGluZ0V4Y2VwdGlvbigpOwogICAgfQoKICAgIC8qKgogICAgICogQFRoZW4gVGhlIHJlc3VsdHMgc2hvdWxkIGluY2x1ZGUgYSBjdXN0b21lciB3aXRoIElEIDphcmcxCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiB0aGVSZXN1bHRzU2hvdWxkSW5jbHVkZUFDdXN0b21lcldpdGhJZCgkYXJnMSkKICAgIHsKICAgICAgICB0aHJvdyBuZXcgUGVuZGluZ0V4Y2VwdGlvbigpOwogICAgfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtDb3B5IHRoZXNlIG1ldGhvZHMgYW5kIHVwZGF0ZSB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7RmVhdHVyZUNvbnRleHQucGhwJmx0Oy9jb2RlJmd0OyBmaWxlIHdpdGggdGhlbTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O2NwJnF1b3Q7Jmd0OyZhbXA7bHQ7P3BocCZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtCZWhhdFxCZWhhdFxDb250ZXh0XENvbnRleHQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3VzZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7QmVoYXRcR2hlcmtpblxOb2RlXFB5U3RyaW5nTm9kZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtCZWhhdFxHaGVya2luXE5vZGVcVGFibGVOb2RlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDt1c2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0JlaGF0XEJlaGF0XFRlc3RlclxFeGNlcHRpb25cUGVuZGluZ0V4Y2VwdGlvbiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtTeW1mb255XENvbXBvbmVudFxIdHRwQ2xpZW50XEh0dHBDbGllbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwoKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAqIERlZmluZXMgYXBwbGljYXRpb24gZmVhdHVyZXMgZnJvbSB0aGUgc3BlY2lmaWMgY29udGV4dC4KICovJmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2NsYXNzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYyZxdW90OyZndDtGZWF0dXJlQ29udGV4dCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtpbXBsZW1lbnRzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtDb250ZXh0Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O3smbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzZCZxdW90OyZndDsvKioKICAgICAqIEluaXRpYWxpemVzIGNvbnRleHQuCiAgICAgKgogICAgICogRXZlcnkgc2NlbmFyaW8gZ2V0cyBpdHMgb3duIGNvbnRleHQgaW5zdGFuY2UuCiAgICAgKiBZb3UgY2FuIGFsc28gcGFzcyBhcmJpdHJhcnkgYXJndW1lbnRzIHRvIHRoZQogICAgICogY29udGV4dCBjb25zdHJ1Y3RvciB0aHJvdWdoIGJlaGF0LnltbC4KICAgICAqLyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cHVibGljJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2Z1bmN0aW9uJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuZiZxdW90OyZndDtfX2NvbnN0cnVjdCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwoKCiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzZCZxdW90OyZndDsvKioKICAgICAqIEBHaXZlbiBJIGFtIGFuIHVuYXV0aGVudGljYXRlZCB1c2VyCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7aUFtQW5VbmF1dGhlbnRpY2F0ZWRVc2VyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O3smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDt0aHJvdyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtuZXcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O1BlbmRpbmdFeGNlcHRpb24mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAgICAgKiBAV2hlbiBJIHJlcXVlc3QgYSBsaXN0IG9mIGN1c3RvbWVycyBmcm9tIDphcmcxCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7aVJlcXVlc3RBTGlzdE9mQ3VzdG9tZXJzRnJvbSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGFyZzEmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dGhyb3cmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7bmV3Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtQZW5kaW5nRXhjZXB0aW9uJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCk7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwoKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3NkJnF1b3Q7Jmd0Oy8qKgogICAgICogQFRoZW4gVGhlIHJlc3VsdHMgc2hvdWxkIGluY2x1ZGUgYSBjdXN0b21lciB3aXRoIElEIDphcmcxCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7dGhlUmVzdWx0c1Nob3VsZEluY2x1ZGVBQ3VzdG9tZXJXaXRoSWQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRhcmcxJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KSZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3Rocm93Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O25ldyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7UGVuZGluZ0V4Y2VwdGlvbiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpOyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGVzZSBhcmUganVzdCB0aGUgZGVmaW5pdGlvbnMgb2YgbWV0aG9kcyBkZXJpdmVkIGZyb20gZWFjaCBzdGVwIGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjdXN0b21lci5mZWF0dXJlJmx0Oy9jb2RlJmd0OyBmaWxlLiBXaXRoIHRoZSBtZXRob2RzIHByb3Blcmx5IGRlZmluZWQsIHdlIHN0aWxsIG5lZWQgdG8gYWRkIHRoZSByZXF1aXJlZCBjb2RlIHRvIGNvbXBsZXRlIG91ciBzY2VuYXJpby4gUmVwbGFjZSB0aGUgY29udGVudHMgb2YgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZmVhdHVyZXMvYm9vdHN0cmFwL0ZlYXR1cmVDb250ZXh0LnBocCZsdDsvY29kZSZndDsgd2l0aCB0aGUgZm9sbG93aW5nIGNvZGU6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtjcCZxdW90OyZndDsmYW1wO2x0Oz9waHAmbHQ7L3NwYW4mZ3Q7CgombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3VzZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7QmVoYXRcQmVoYXRcQ29udGV4dFxDb250ZXh0Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDt1c2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O1N5bWZvbnlcQ29tcG9uZW50XEh0dHBDbGllbnRcSHR0cENsaWVudCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgombHQ7c3BhbiBjbGFzcz0mcXVvdDtzZCZxdW90OyZndDsvKioKICogRGVmaW5lcyBhcHBsaWNhdGlvbiBmZWF0dXJlcyBmcm9tIHRoZSBzcGVjaWZpYyBjb250ZXh0LgogKi8mbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7Y2xhc3MmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25jJnF1b3Q7Jmd0O0ZlYXR1cmVDb250ZXh0Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2ltcGxlbWVudHMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0NvbnRleHQmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cHJvdGVjdGVkJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskcmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAgICAgKiBJbml0aWFsaXplcyBjb250ZXh0LgogICAgICoKICAgICAqIEV2ZXJ5IHNjZW5hcmlvIGdldHMgaXRzIG93biBjb250ZXh0IGluc3RhbmNlLgogICAgICogWW91IGNhbiBhbHNvIHBhc3MgYXJiaXRyYXJ5IGFyZ3VtZW50cyB0byB0aGUKICAgICAqIGNvbnRleHQgY29uc3RydWN0b3IgdGhyb3VnaCBiZWhhdC55bWwuCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7X19jb25zdHJ1Y3QmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKCgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAgICAgKiBAR2l2ZW4gSSBhbSBhbiB1bmF1dGhlbnRpY2F0ZWQgdXNlcgogICAgICovJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O2lBbUFuVW5hdXRoZW50aWNhdGVkVXNlciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRodHRwQ2xpZW50Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0h0dHBDbGllbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs6OiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtjcmVhdGUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7cmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGh0dHBDbGllbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7cmVxdWVzdCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7R0VUJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7aHR0cDovL2xvY2FsaG9zdDo4MDAwL2N1c3RvbWVyJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7aWYmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtyZXNwb25zZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtnZXRTdGF0dXNDb2RlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7IT0mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O21pJnF1b3Q7Jmd0OzIwMCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OykmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDt0aHJvdyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtuZXcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0V4Y2VwdGlvbiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7Tm90IGFibGUgdG8gYWNjZXNzJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwoKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3JldHVybiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7a2MmcXVvdDsmZ3Q7dHJ1ZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAgICAgKiBAV2hlbiBJIHJlcXVlc3QgYSBsaXN0IG9mIGN1c3RvbWVycyBmcm9tIDphcmcxCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7aVJlcXVlc3RBTGlzdE9mQ3VzdG9tZXJzRnJvbSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGFyZzEmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRodHRwQ2xpZW50Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0h0dHBDbGllbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs6OiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtjcmVhdGUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7cmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGh0dHBDbGllbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7cmVxdWVzdCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7R0VUJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGFyZzEmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspOyZsdDsvc3BhbiZndDsKCiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHJlc3BvbnNlQ29kZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtyZXNwb25zZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtnZXRTdGF0dXNDb2RlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCk7Jmx0Oy9zcGFuJmd0OwoKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2lmJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHJlc3BvbnNlQ29kZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDshPSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bWkmcXVvdDsmZ3Q7MjAwJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3Rocm93Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O25ldyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7RXhjZXB0aW9uJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMiZxdW90OyZndDsmcXVvdDtFeHBlY3RlZCBhIDIwMCwgYnV0IHJlY2VpdmVkICZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDsuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskcmVzcG9uc2VDb2RlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwoKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3JldHVybiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7a2MmcXVvdDsmZ3Q7dHJ1ZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAgICAgKiBAVGhlbiBUaGUgcmVzdWx0cyBzaG91bGQgaW5jbHVkZSBhIGN1c3RvbWVyIHdpdGggSUQgOmFyZzEKICAgICAqLyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cHVibGljJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2Z1bmN0aW9uJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuZiZxdW90OyZndDt0aGVSZXN1bHRzU2hvdWxkSW5jbHVkZUFDdXN0b21lcldpdGhJZCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGFyZzEmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lcnMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmImcXVvdDsmZ3Q7anNvbl9kZWNvZGUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyR0aGlzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3Jlc3BvbnNlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2dldENvbnRlbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSk7Jmx0Oy9zcGFuJmd0OwoKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2ZvcmVhY2gmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lcnMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7YXMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OykmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtpZiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtpZCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGFyZzEmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O3smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3JldHVybiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7a2MmcXVvdDsmZ3Q7dHJ1ZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dGhyb3cmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7bmV3Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtFeGNlcHRpb24mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydFeHBlY3RlZCB0byBmaW5kIGN1c3RvbWVyIHdpdGggYW4gSUQgb2YgJyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDsuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskYXJnMSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDsuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnICwgYnV0IGRpZG50JyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0Oyk7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0Zyb20gdGhlIHNjZW5hcmlvIGNyZWF0ZWQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2N1c3RvbWVyLmZlYXR1cmUmbHQ7L2NvZGUmZ3Q7IGZpbGUsIHdlIGJlZ2luIGJ5IGNyZWF0aW5nIGEgbWV0aG9kIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2lBbUFuVW5hdXRoZW50aWNhdGVkVXNlcigpJmx0Oy9jb2RlJmd0OyBmb3IgdGhlIGZpcnN0IHN0ZXAuIFRoaXMgd2lsbCBkZXRlcm1pbmUgd2hldGhlciB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y3VzdG9tZXImbHQ7L2NvZGUmZ3Q7IGVuZHBvaW50IGhhcyBiZWVuIGNyZWF0ZWQgYW5kIHdoZXRoZXIgYSB1c2VyIHdobyBpcyBub3QgYXV0aGVudGljYXRlZCBjYW4gYWNjZXNzIGl0LiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7cHVibGljIGZ1bmN0aW9uIGlBbUFuVW5hdXRoZW50aWNhdGVkVXNlcigpCnsKICAgICRodHRwQ2xpZW50ID0gSHR0cENsaWVudDo6Y3JlYXRlKCk7CiAgICAkdGhpcy0mYW1wO2d0O3Jlc3BvbnNlID0gJGh0dHBDbGllbnQtJmFtcDtndDtyZXF1ZXN0KCZxdW90O0dFVCZxdW90OywgJnF1b3Q7aHR0cDovL2xvY2FsaG9zdDo4MDAwL2N1c3RvbWVyJnF1b3Q7KTsKCiAgICBpZiAoJHRoaXMtJmFtcDtndDtyZXNwb25zZS0mYW1wO2d0O2dldFN0YXR1c0NvZGUoKSAhPSAyMDApIHsKICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCZxdW90O05vdCBhYmxlIHRvIGFjY2VzcyZxdW90Oyk7CiAgICB9CgogICAgcmV0dXJuIHRydWU7Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7TmV4dCwgd2UgY3JlYXRlZCBhIG1ldGhvZCB0byBhc3NlcnQgdGhhdCB3ZSBjYW4gcmV0cmlldmUgYSBsaXN0IG9mIGN1c3RvbWVycyBmcm9tIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjdXN0b21lciZsdDsvY29kZSZndDsgZW5kcG9pbnQuJmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtwdWJsaWMgZnVuY3Rpb24gaVJlcXVlc3RBTGlzdE9mQ3VzdG9tZXJzRnJvbSgkYXJnMSkKewogICAgJGh0dHBDbGllbnQgPSBIdHRwQ2xpZW50OjpjcmVhdGUoKTsKICAgICR0aGlzLSZhbXA7Z3Q7cmVzcG9uc2UgPSAkaHR0cENsaWVudC0mYW1wO2d0O3JlcXVlc3QoJnF1b3Q7R0VUJnF1b3Q7LCAkYXJnMSk7CgogICAgJHJlc3BvbnNlQ29kZSA9ICR0aGlzLSZhbXA7Z3Q7cmVzcG9uc2UtJmFtcDtndDtnZXRTdGF0dXNDb2RlKCk7CgogICAgaWYgKCRyZXNwb25zZUNvZGUgIT0gMjAwKSB7CiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbigmcXVvdDtFeHBlY3RlZCBhIDIwMCwgYnV0IHJlY2VpdmVkICZxdW90OyAuICRyZXNwb25zZUNvZGUpOwogICAgfQoKICAgIHJldHVybiB0cnVlOwp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0xhc3RseSwgdG8gYmUgc3VyZSB0aGF0IHRoZSBsaXN0IG9mIGN1c3RvbWVycyByZXRyaWV2ZWQgY29udGFpbnMgdGhlIGV4cGVjdGVkIHJlY29yZCwgd2Ugd2lsbCB3cml0ZSBhbm90aGVyIG1ldGhvZCB0byBjaGVjayBmb3IgYW4gaXRlbSB3aXRoIGEgc3BlY2lmaWMgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aWQmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7cHVibGljIGZ1bmN0aW9uIHRoZVJlc3VsdHNTaG91bGRJbmNsdWRlQUN1c3RvbWVyV2l0aElkKCRhcmcxKQp7CiAgICAkY3VzdG9tZXJzID0ganNvbl9kZWNvZGUoJHRoaXMtJmFtcDtndDtyZXNwb25zZS0mYW1wO2d0O2dldENvbnRlbnQoKSk7CgogICAgZm9yZWFjaCgkY3VzdG9tZXJzIGFzICRjdXN0b21lcikgewogICAgICAgIGlmICgkY3VzdG9tZXItJmFtcDtndDtpZCA9PSAkYXJnMSkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICB9CgogICAgdGhyb3cgbmV3IEV4Y2VwdGlvbignRXhwZWN0ZWQgdG8gZmluZCBjdXN0b21lciB3aXRoIGFuIElEIG9mICcgLiAkYXJnMSAuICcgLCBidXQgZGlkbnQnKTsKfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtSdW5uaW5nIEJlaGF0IHJpZ2h0IG5vdyB3aWxsIGRlZmluaXRlbHkgZmFpbC4gV2UgaGF2ZSBub3QgeWV0IGNyZWF0ZWQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2N1c3RvbWVyJmx0Oy9jb2RlJmd0OyBlbmRwb2ludCB0byByZXR1cm4gdGhlIGFwcHJvcHJpYXRlIHJlY29yZHMuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NyZWF0aW5nIGEgY3VzdG9tZXIgY29udHJvbGxlciZsdDsvaDImZ3Q7CgombHQ7cCZndDtHZW5lcmF0ZSBhIGNvbnRyb2xsZXIgZm9yIHRoZSBjdXN0b21lciBlbmRwb2ludCBieSBydW5uaW5nIHRoZSBmb2xsb3dpbmcgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3BocCBiaW4vY29uc29sZSBtYWtlOmNvbnRyb2xsZXIgQ3VzdG9tZXJDb250cm9sbGVyCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1JlcGxhY2UgdGhlIGNvbnRlbnRzIG9mIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvQ29udHJvbGxlci9DdXN0b21lckNvbnRyb2xsZXIucGhwJmx0Oy9jb2RlJmd0OyBmaWxlIHdpdGggdGhlIGZvbGxvd2luZyBjb2RlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7Y3AmcXVvdDsmZ3Q7JmFtcDtsdDs/cGhwJmx0Oy9zcGFuJmd0OwoKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtuYW1lc3BhY2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0FwcFxDb250cm9sbGVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtTeW1mb255XEJ1bmRsZVxGcmFtZXdvcmtCdW5kbGVcQ29udHJvbGxlclxBYnN0cmFjdENvbnRyb2xsZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3VzZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7U3ltZm9ueVxDb21wb25lbnRcSHR0cEZvdW5kYXRpb25cUmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3VzZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7U3ltZm9ueVxDb21wb25lbnRcUm91dGluZ1xBbm5vdGF0aW9uXFJvdXRlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7Y2xhc3MmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25jJnF1b3Q7Jmd0O0N1c3RvbWVyQ29udHJvbGxlciZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtleHRlbmRzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBYnN0cmFjdENvbnRyb2xsZXImbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3NkJnF1b3Q7Jmd0Oy8qKgogICAgICogQFJvdXRlKCZxdW90Oy9jdXN0b21lciZxdW90OywgbmFtZT0mcXVvdDtjdXN0b21lciZxdW90OykKICAgICAqLyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cHVibGljJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2Z1bmN0aW9uJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuZiZxdW90OyZndDtpbmRleCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lcnMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDtbJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O1smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnaWQnJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bWkmcXVvdDsmZ3Q7MSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnbmFtZScmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnT2x1c3VzaSBPbHV5ZW1pJyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnZGVzY3JpcHRpb24nJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7J0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbicmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O10sJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O1smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnaWQnJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bWkmcXVvdDsmZ3Q7MiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnbmFtZScmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnQ2FtaWxhIFRlcnJ5JyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnZGVzY3JpcHRpb24nJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7J0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbicmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O10sJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O1smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnaWQnJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bWkmcXVvdDsmZ3Q7MyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnbmFtZScmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnSm9lbCBXaWxsaWFtc29uJyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnZGVzY3JpcHRpb24nJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7J0xvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbicmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O10sJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O1smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnaWQnJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mYW1wO2d0OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bWkmcXVvdDsmZ3Q7NCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnbmFtZScmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnRGVhbm4gUGF5bmUnJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsKICAgICAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydkZXNjcmlwdGlvbicmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNpdGF0aW9uJyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7XSwmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7WyZsdDsvc3BhbiZndDsKICAgICAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydpZCcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDttaSZxdW90OyZndDs1Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsKICAgICAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OyduYW1lJyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydEb25hbGQgUGVya2lucycmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OwogICAgICAgICAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7J2Rlc2NyaXB0aW9uJyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRpZHVudCB1dCBsYWJvcmUgZXQgZG9sb3JlIG1hZ25hIGFsaXF1YS4gVXQgZW5pbSBhZCBtaW5pbSB2ZW5pYW0sIHF1aXMgbm9zdHJ1ZCBleGVyY2l0YXRpb24nJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsKICAgICAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDtdJmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7XTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRyZXNwb25zZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O25ldyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7UmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRyZXNwb25zZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtoZWFkZXJzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3NldCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7J0NvbnRlbnQtVHlwZScmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnYXBwbGljYXRpb24vanNvbicmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspOyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskcmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7aGVhZGVycyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzZXQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7JyonJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRyZXNwb25zZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzZXRDb250ZW50Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYiZxdW90OyZndDtqc29uX2VuY29kZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGN1c3RvbWVycyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OykpOyZsdDsvc3BhbiZndDsKCiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtyZXR1cm4mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRyZXNwb25zZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SGVyZSwgd2UgZGVmaW5lZCBhIHJvdXRlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy9jdXN0b21lciZsdDsvY29kZSZndDssIGNyZWF0ZWQgYSBkZWZhdWx0IGxpc3Qgb2YgY3VzdG9tZXJzLCBhbmQgcmV0dXJuZWQgaXQgaW4gYSBKU09OIGZvcm1hdC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7UnVubmluZyB0aGUgZmVhdHVyZSB0ZXN0IGxvY2FsbHkmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7T3VyIGZlYXR1cmUgdGVzdCByZXF1aXJlcyB1cyB0byBtYWtlIGEgY2FsbCB0byBhIHBhcnRpY3VsYXIgZW5kcG9pbnQuIEZvciB0aGF0LCB3ZSBuZWVkIHRvIGtlZXAgdGhlIHNlcnZlciBydW5uaW5nLiBSdW4gdGhlIGZvbGxvd2luZyBjb21tYW5kIHRvIHN0YXJ0IHRoZSBzZXJ2ZXI6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtwaHAgYmluL2NvbnNvbGUgc2VydmVyOnJ1bgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtPbmNlIHlvdSBhcmUgZG9uZSwgaW4gYW5vdGhlciB0YWIgb3Igd2luZG93IG9mIHlvdXIgdGVybWluYWwsIGV4ZWN1dGUgQmVoYXQgd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDt2ZW5kb3IvYmluL2JlaGF0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIG91dHB1dC4mbHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O0ZlYXR1cmU6IExpc3Qgb2YgY3VzdG9tZXJzCiAgSW4gb3JkZXIgdG8gcmV0cmlldmUgdGhlIGxpc3Qgb2YgY3VzdG9tZXJzCiAgQXMgYSB1c2VyCiAgSSBtdXN0IHZpc2l0IHRoZSBjdXN0b21lcnMgcGFnZQoKICBTY2VuYXJpbzogSSB3YW50IGEgbGlzdCBvZiBjdXN0b21lcnMKICAgIEdpdmVuIEkgYW0gYW4gdW5hdXRoZW50aWNhdGVkIHVzZXIKICAgIFdoZW4gSSByZXF1ZXN0IGEgbGlzdCBvZiBjdXN0b21lcnMgZnJvbSAmcXVvdDtodHRwOi8vbG9jYWxob3N0OjgwMDAvY3VzdG9tZXImcXVvdDsKICAgIFRoZW4gVGhlIHJlc3VsdHMgc2hvdWxkIGluY2x1ZGUgYSBjdXN0b21lciB3aXRoIElEICZxdW90OzEmcXVvdDsKCjEgc2NlbmFyaW8gKDEgcGFzc2VkKQozIHN0ZXBzICgzIHBhc3NlZCkKMG0wLjEwcyAoMTAuMDFNYikKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7T3VyIHRlc3Qgbm93IHJ1bnMgYXMgZXhwZWN0ZWQuIEl04oCZcyB0aW1lIHRvIGNyZWF0ZSBhIEdpdEh1YiByZXBvc2l0b3J5IGFuZCBwdXNoIHRoaXMgYXBwbGljYXRpb27igJlzIGNvZGViYXNlIHRvIGl0LiBIZWFkIG92ZXIgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vJnF1b3Q7Jmd0O0dpdEh1YiZsdDsvYSZndDsgYW5kIGNyZWF0ZSBhIHJlcG9zaXRvcnkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMy1jcmVhdGUtcmVwby5wbmcmcXVvdDsgYWx0PSZxdW90O0NyZWF0ZSByZXBvc2l0b3J5JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93IGFkZCBhbGwgdGhlIGNvZGUgY2hhbmdlcyBhbmQgcHVzaCB0byB0aGUgbmV3bHkgY3JlYXRlZCByZXBvc2l0b3J5LiZsdDsvcCZndDsKCiZsdDtoMiZndDtBZGRpbmcgYSBDaXJjbGVDSSBjb25maWd1cmF0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1dlIGZpcnN0IG5lZWQgdG8gdXBkYXRlIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuZW52LnRlc3QmbHQ7L2NvZGUmZ3Q7IGZpbGUsIHNpbmNlIG91ciBwaXBlbGluZSB3aWxsIG5lZWQgaXQuIFJlcGxhY2UgdGhlIGNvbnRlbnRzIHdpdGggdGhlIGZvbGxvd2luZzombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0OyMgZGVmaW5lIHlvdXIgZW52IHZhcmlhYmxlcyBmb3IgdGhlIHRlc3QgZW52IGhlcmUKS0VSTkVMX0NMQVNTPSdBcHBcS2VybmVsJwpBUFBfU0VDUkVUPSckZWNyZXRmMHJ0M3N0JwpTWU1GT05ZX0RFUFJFQ0FUSU9OU19IRUxQRVI9OTk5OTk5ClBBTlRIRVJfQVBQX0VOVj1wYW50aGVyCkFQUF9FTlY9ZGV2CkRBVEFCQVNFX1VSTD1teXNxbDovL2RiX3VzZXI6ZGJfcGFzc3dvcmRAMTI3LjAuMC4xOjMzMDYvZGJfbmFtZT9zZXJ2ZXJWZXJzaW9uPTUuNwoKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VG8gYWRkIGEgQ2lyY2xlQ0kgY29uZmlndXJhdGlvbiwgY3JlYXRlIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LmNpcmNsZWNpJmx0Oy9jb2RlJmd0OyBmb2xkZXIgaW5zaWRlIHRoZSByb290IGRpcmVjdG9yeSBvZiB5b3VyIGFwcGxpY2F0aW9uIGFuZCBhZGQgYSBuZXcgZmlsZSBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OyB3aXRoaW4gaXQuIE9wZW4gdGhlIG5ld2x5IGNyZWF0ZWQgZmlsZSBhbmQgcGFzdGUgdGhlIGZvbGxvd2luZyBjb2RlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7dmVyc2lvbjogMgpqb2JzOgogIGJ1aWxkOgogICAgZG9ja2VyOgogICAgICAtIGltYWdlOiBjaXJjbGVjaS9waHA6Ny40LW5vZGUtYnJvd3NlcnMKCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAoKICAgICAgLSBydW46IHN1ZG8gYXB0IHVwZGF0ZQogICAgICAtIHJ1bjogc3VkbyBkb2NrZXItcGhwLWV4dC1pbnN0YWxsIHppcAoKICAgICAgLSByZXN0b3JlX2NhY2hlOgogICAgICAgICAga2V5czoKICAgICAgICAgICAgLSB2MS1kZXBlbmRlbmNpZXMte3sgY2hlY2tzdW0gJnF1b3Q7Y29tcG9zZXIuanNvbiZxdW90OyB9fQogICAgICAgICAgICAtIHYxLWRlcGVuZGVuY2llcy0KCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogJnF1b3Q7Q3JlYXRlIEVudmlyb25tZW50IGZpbGUmcXVvdDsKICAgICAgICAgIGNvbW1hbmQ6IG12IC5lbnYudGVzdCAuZW52CgogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6ICZxdW90O0luc3RhbGwgRGVwZW5kZW5jaWVzJnF1b3Q7CiAgICAgICAgICBjb21tYW5kOiBjb21wb3NlciBpbnN0YWxsIC1uIC0tcHJlZmVyLWRpc3QKCiAgICAgIC0gc2F2ZV9jYWNoZToKICAgICAgICAgIGtleTogdjEtZGVwZW5kZW5jaWVzLXt7IGNoZWNrc3VtICZxdW90O2NvbXBvc2VyLmpzb24mcXVvdDsgfX0KICAgICAgICAgIHBhdGhzOgogICAgICAgICAgICAtIC4vdmVuZG9yCiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogUnVuIHdlYiBzZXJ2ZXIKICAgICAgICAgIGNvbW1hbmQ6IHBocCBiaW4vY29uc29sZSBzZXJ2ZXI6cnVuCiAgICAgICAgICBiYWNrZ3JvdW5kOiB0cnVlCgogICAgICAjIHJ1biBCZWhhdCB0ZXN0CiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogJnF1b3Q7UnVuIEJlaGF0IHRlc3QmcXVvdDsKICAgICAgICAgIGNvbW1hbmQ6IHZlbmRvci9iaW4vYmVoYXQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGFib3ZlIGNvbmZpZyBmaWxlLCB3ZSBwdWxsZWQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NpcmNsZWNpL3BocDo3LjQtbm9kZS1icm93c2VycyZsdDsvY29kZSZndDsgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9jaXJjbGVjaS1pbWFnZXMvJnF1b3Q7Jmd0O0RvY2tlciBpbWFnZSZsdDsvYSZndDsgZnJvbSB0aGUgQ2lyY2xlQ0kgaW1hZ2UgcmVnaXN0cnkgYW5kIGluc3RhbGxlZCBhbGwgdGhlIHJlcXVpcmVkIHBhY2thZ2VzIGZvciBvdXIgdGVzdCBlbnZpcm9ubWVudC4gV2UgdGhlbiBwcm9jZWVkZWQgdG8gaW5zdGFsbCBhbGwgdGhlIGRlcGVuZGVuY2llcyBmb3Igb3VyIHByb2plY3QuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SW5jbHVkZWQgaXMgYSBjb21tYW5kIHRvIHN0YXJ0IGEgbG9jYWwgc2VydmVyIGFuZCBydW4gaXQgaW4gdGhlIGJhY2tncm91bmQuJmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDstIHJ1bjoKICAgIG5hbWU6IFJ1biB3ZWIgc2VydmVyCiAgICBjb21tYW5kOiBwaHAgYmluL2NvbnNvbGUgc2VydmVyOnJ1bgogICAgYmFja2dyb3VuZDogdHJ1ZQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGUgbGFzdCBwb3J0aW9uIGlzIGEgY29tbWFuZCB0byBleGVjdXRlIEJlaGF0IGZvciBvdXIgZmVhdHVyZSB0ZXN0LiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7IyBydW4gQmVoYXQgdGVzdAotIHJ1bjoKICAgIG5hbWU6ICZxdW90O1J1biBCZWhhdCB0ZXN0JnF1b3Q7CiAgICBjb21tYW5kOiB2ZW5kb3IvYmluL2JlaGF0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0dvIGFoZWFkIGFuZCB1cGRhdGUgdGhlIHJlcG9zaXRvcnkgd2l0aCB0aGUgbmV3IGNvZGUuIEluIHRoZSBuZXh0IHNlY3Rpb24sIHdlIHdpbGwgc2V0IHVwIG91ciBwcm9qZWN0IG9uIENpcmNsZUNJLiZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25uZWN0aW5nIGEgcHJvamVjdCB0byBDaXJjbGVDSSZsdDsvaDImZ3Q7CgombHQ7cCZndDtMb2cgaW50byB5b3VyIGFjY291bnQgb24gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS8mcXVvdDsmZ3Q7Q2lyY2xlQ0kmbHQ7L2EmZ3Q7LiBGcm9tIHRoZSBjb25zb2xlLCBsb2NhdGUgdGhlIHByb2plY3QgY3JlYXRlZCBvbiBHaXRIdWIgYW5kIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0yMy1zZXQtdXAtcHJvamVjdC5wbmcmcXVvdDsgYWx0PSZxdW90O1NldCB1cCBwcm9qZWN0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7WW91IHdpbGwgYmUgcmVkaXJlY3RlZCB0byBhIG5ldyBwYWdlLiBDbGljayAmbHQ7c3Ryb25nJmd0O1N0YXJ0IEJ1aWxkaW5nJmx0Oy9zdHJvbmcmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjMtc3RhcnQtYnVpbGRpbmctMS5wbmcmcXVvdDsgYWx0PSZxdW90O1N0YXJ0IGJ1aWxkaW5nJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QSBwcm9tcHQgd2lsbCBhcHBlYXIgZ2l2aW5nIHRoZSBvcHRpb24gdG8gZWl0aGVyIGFkZCB0aGUgY29uZmlnIGZpbGUgdG8gYSBuZXcgYnJhbmNoIG9uIHRoZSByZXBvc2l0b3J5IG9yIGRvIGl0IG1hbnVhbGx5LiBDbGljayAmbHQ7c3Ryb25nJmd0O0FkZCBNYW51YWxseSZsdDsvc3Ryb25nJmd0OyB0byBwcm9jZWVkLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjMtYWRkLWNvbmZpZy5wbmcmcXVvdDsgYWx0PSZxdW90O0FkZCBjb25maWcgbWFudWFsbHkmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayAmbHQ7c3Ryb25nJmd0O1N0YXJ0IEJ1aWxkaW5nJmx0Oy9zdHJvbmcmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMjMtYWRkZWQtY29uZmlnLnBuZyZxdW90OyBhbHQ9JnF1b3Q7QWRkZWQgY29uZmlnJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIHJ1biBzdWNjZXNzZnVsbHkgd2l0aG91dCBnbGl0Y2hlcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTIzLXN1Y2Nlc3NmdWwtcGlwZWxpbmUucG5nJnF1b3Q7IGFsdD0mcXVvdDtTdWNjZXNzZnVsIGJ1aWxkJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgb24gdGhlIGpvYiB0byB2aWV3IHRoZSBkZXRhaWxzIG9mIHRoZSBidWlsZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTIzLXN1Y2Nlc3Mtam9iLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3VjY2Vzc2Z1bCBidWlsZCByZXN1bHQmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q29uY2x1c2lvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHR1dG9yaWFsLCB3ZSBmb2xsb3dlZCB0aGUgZnVuZGFtZW50YWwgcGhpbG9zb3BoeSBvZiBiZWhhdmlvciBkcml2ZW4gZGV2ZWxvcG1lbnQgKEJERCkgZm9yIGJ1aWxkaW5nIGEgU3ltZm9ueSBhcHBsaWNhdGlvbiB3aXRoIEJlaGF0IGFuZCB3ZSBhdXRvbWF0ZWQgdGhlIHRlc3Rpbmcgd2l0aCBDaXJjbGVDSS4gVGhlcmUgaXMgc28gbXVjaCBtb3JlIHlvdSBjYW4gZG8gd2l0aCBCZWhhdCBmb3IgeW91ciBhcHBsaWNhdGlvbi4gVGhlIGluZm9ybWF0aW9uIGhlcmUgaXMgZW5vdWdoIHRvIGdldCB5b3Ugc3RhcnRlZCBidWlsZGluZyB0aGUgcmlnaHQgZmVhdHVyZXMgZm9yIHlvdXIgYXBwbGljYXRpb25zIGFuZCB0aGlzIHNhbWUgYXBwcm9hY2ggY2FuIGFsc28gYmUgdXNlZCBmb3IgYW55IG9mIHlvdXIgb3RoZXIgUEhQIHByb2plY3RzLiZsdDsvcCZndDsKCiZsdDtociAvJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL3llbWl3ZWJieSZxdW90OyZndDtPbHV5ZW1pJmx0Oy9hJmd0OyBpcyBhIHRlY2ggZW50aHVzaWFzdCwgcHJvZ3JhbW1pbmcgZnJlYWssIGFuZCBhIHdlYiBkZXZlbG9wbWVudCBqdW5raWUgd2hvIGxvdmVzIHRvIGVtYnJhY2UgbmV3IHRlY2hub2xvZ3kuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5Db250aW51b3VzIGRlcGxveW1lbnQgb2YgYSBOZXN0LmpzIGFwcGxpY2F0aW9uIHRvIEhlcm9rdTwvdGl0bGU+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9jb250aW51b3VzLWRlcGxveW1lbnQtbmVzdGpzLzwvbGluaz4KICAgICAgICA8cHViRGF0ZT5GcmksIDI2IEp1biAyMDIwIDA5OjAwOjAwIC0wNzAwPC9wdWJEYXRlPgogICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJ0cnVlIj5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2NvbnRpbnVvdXMtZGVwbG95bWVudC1uZXN0anMvPC9ndWlkPgogICAgICAgIAogICAgICAgICAgPGRjOmNyZWF0b3I+T2x1c3VzaSBPbHV5ZW1pPC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0O0lmIHlvdSBoYXZlIGJlZW4gYXJvdW5kIGZvciBhIHdoaWxlIGluIHRoZSBmaWVsZCBvZiBzb2Z0d2FyZSBkZXZlbG9wbWVudCwgZXNwZWNpYWxseSB3ZWIgZGV2ZWxvcG1lbnQsIHRoZW4geW91IGtub3cgaG93IHRlZGlvdXMgYW5kIHN0cmVzc2Z1bCBpdCBoYXMgaGlzdG9yaWNhbGx5IGJlZW4gdG8gZGVwbG95IHlvdXIgc291cmNlIGNvZGUgdG8gYSB3ZWJzZXJ2ZXIuIE1vc3Qgb2YgdGhlIHRpbWUsIHRoaXMgd2FzIGFjY29tcGxpc2hlZCBieSB1cGxvYWRpbmcgaXQgdXNpbmcgRmlsZSBUcmFuc2ZlciBQcm90b2NvbCAoRlRQKS4gQnV0IG5vdyB3ZSBoYXZlIG51bWVyb3VzIHdheXMgb2YgYXV0b21hdGluZyB0aGUgZGVwbG95bWVudCBwcm9jZXNzLiBJbiB0aGlzIHR1dG9yaWFsLCB3ZSB3aWxsIGxlYXJuIGhvdyB0byBzZXQgdXAgY29udGludW91cyBkZXBsb3ltZW50IG9mIGEgTmVzdC5qcyBhcHBsaWNhdGlvbiB0byBIZXJva3UgdXNpbmcgQ2lyY2xlQ0kuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1ByZXJlcXVpc2l0ZXMmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhlIGZvbGxvd2luZyBhcmUgcmVxdWlyZWQgYW5kIGNydWNpYWwgZm9yIHlvdSB0byBnZXQgdGhlIGJlc3Qgb3V0IG9mIHRoaXMgdHV0b3JpYWw6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vbm9kZWpzLm9yZy8mcXVvdDsmZ3Q7Tm9kZS5qcyZsdDsvYSZndDsgaW5zdGFsbGVkIG9uIHlvdXIgY29tcHV0ZXImbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9uZXN0anMvbmVzdC1jbGkmcXVvdDsmZ3Q7TmVzdCBDTEkmbHQ7L2EmZ3Q7IGluc3RhbGxlZCBvbiB5b3VyIGNvbXB1dGVyJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9qb2luJnF1b3Q7Jmd0O0dpdEh1YiZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9zaWdudXAvJnF1b3Q7Jmd0O0NpcmNsZUNJJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vc2lnbnVwLmhlcm9rdS5jb20vbG9naW4mcXVvdDsmZ3Q7SGVyb2t1Jmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QWx0aG91Z2ggbm90IG1hbmRhdG9yeSwgeW91IHNob3VsZCBrbm93IGEgZmV3IHRoaW5ncyBhYm91dCBUeXBlU2NyaXB0LiZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7aDImZ3Q7U2NhZmZvbGRpbmcgYSBuZXcgTmVzdC5qcyBhcHBsaWNhdGlvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBjcmVhdGUgYSBuZXcgTmVzdC5qcyBhcHBsaWNhdGlvbiwgbmF2aWdhdGUgdG8gdGhlIHJvb3Qgb2YgeW91ciBkZXZlbG9wbWVudCBmb2xkZXIgZnJvbSB0aGUgdGVybWluYWwgYW5kIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtuZXN0IG5ldyBuZXN0LWhlcm9rdS1kZW1vCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIGJlIHByb21wdGVkIHRvIGNob29zZSB5b3VyIHByZWZlcnJlZCBwYWNrYWdlIG1hbmFnZXIuIFNlbGVjdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtucG0mbHQ7L2NvZGUmZ3Q7IGFuZCBoaXQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7RU5URVImbHQ7L2NvZGUmZ3Q7IG9uIHlvdXIga2V5Ym9hcmQgdG8gcHJvY2VlZC4gQSBuZXcgTmVzdC5qcyBhcHBsaWNhdGlvbiB3aWxsIGJlIGNyZWF0ZWQgd2l0aGluIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25lc3QtaGVyb2t1LWRlbW8mbHQ7L2NvZGUmZ3Q7IGFuZCBhbGwgb2YgaXRzIGRlcGVuZGVuY2llcyB3aWxsIGJlIGluc3RhbGxlZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtPbmNlIHRoZSBpbnN0YWxsYXRpb24gcHJvY2VzcyBpcyBjb21wbGV0ZSwgbW92ZSBpbnRvIHRoZSBuZXdseSBjcmVhdGVkIHByb2plY3QgZm9sZGVyIGFuZCBydW4gdGhlIGFwcGxpY2F0aW9uIHdpdGggdGhlIGZvbGxvd2luZyBjb21tYW5kczombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0Oy8vIG1vdmUgaW50byB0aGUgcHJvamVjdApjZCBuZXN0LWhlcm9rdS1kZW1vCgovLyBzdGFydCB0aGUgc2VydmVyCm5wbSBydW4gc3RhcnQ6ZGV2CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1lvdSBjYW4gdmlldyB0aGUgd2VsY29tZSBwYWdlIG9uIHRoZSBkZWZhdWx0IHBvcnQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7MzAwMCZsdDsvY29kZSZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMi1kZWZhdWx0LXBhZ2UucG5nJnF1b3Q7IGFsdD0mcXVvdDtEZWZhdWx0IFBhZ2UmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgdGhlIGRlbW8gYXBwbGljYXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7V2Ugd2lsbCBxdWlja2x5IGNyZWF0ZSBhIGJhc2ljIE5lc3QuanMgYXBwbGljYXRpb24gd2l0aCBhIHNpbmdsZSBlbmRwb2ludCB0aGF0IHdpbGwgYmUgdXNlZCB0byByZW5kZXIgYSBsaXN0IG9mIHByb2R1Y3RzLiBUbyBrZWVwIHRoaW5ncyBzaW1wbGUsIHdlIHdpbGwgY3JlYXRlIGEgbW9jayBsaXN0IG9mIHByb2R1Y3RzIGFuZCByZXR1cm4gaXQgYXMgYSByZXNwb25zZS4gVG8gYmVnaW4sIHN0b3AgdGhlIGFwcGxpY2F0aW9uIGZyb20gcnVubmluZyBvbiB0aGUgdGVybWluYWwgd2l0aCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDVFJMICsgQyZsdDsvY29kZSZndDsgYW5kIG9wZW4gdGhlIHByb2plY3QgaW4gYSBjb2RlIGVkaXRvciBvZiB5b3VyIGNob2ljZS4gTmV4dCwgY3JlYXRlIGEgZm9sZGVyIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O21vY2smbHQ7L2NvZGUmZ3Q7IHdpdGhpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3JjJmx0Oy9jb2RlJmd0OyBmb2xkZXIuIFdpdGhpbiBpdCwgY3JlYXRlIGEgZmlsZSBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0cy5tb2NrLnRzJmx0Oy9jb2RlJmd0Oy4gUGFzdGUgdGhlIGZvbGxvd2luZyBjb250ZW50IGludG8gdGhhdCBmaWxlICgmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvbW9jay9wcm9kdWN0cy5tb2NrLnRzJmx0Oy9jb2RlJmd0Oyk6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtleHBvcnQgY29uc3QgUFJPRFVDVFMgPSBbCiAgewogICAgaWQ6IDEsCiAgICBuYW1lOiAnRmlyc3QgcHJvZHVjdCcsCiAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIGRlc2NyaXB0aW9uIGZvciB0aGUgZmlyc3QgcHJvZHVjdCcsCiAgICBwcmljZTogJzIwMCcsCiAgfSwKICB7CiAgICBpZDogMiwKICAgIG5hbWU6ICdTZWNvbmQgcHJvZHVjdCcsCiAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIGRlc2NyaXB0aW9uIGZvciB0aGUgc2Vjb25kIHByb2R1Y3QnLAogICAgcHJpY2U6ICc1MDAnLAogIH0sCiAgewogICAgaWQ6IDMsCiAgICBuYW1lOiAnVGhpcmQgcHJvZHVjdCcsCiAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIGRlc2NyaXB0aW9uIGZvciB0aGUgdGhpcmQgcHJvZHVjdCcsCiAgICBwcmljZTogJzgwMCcsCiAgfSwKICB7CiAgICBpZDogNCwKICAgIG5hbWU6ICdGb3VydGggcHJvZHVjdCcsCiAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIGRlc2NyaXB0aW9uIGZvciB0aGUgZm91cnRoIHByb2R1Y3QnLAogICAgcHJpY2U6ICcxMDAnLAogIH0sCiAgewogICAgaWQ6IDUsCiAgICBuYW1lOiAnRmlmdGggcHJvZHVjdCcsCiAgICBkZXNjcmlwdGlvbjogJ1RoaXMgaXMgdGhlIGRlc2NyaXB0aW9uIGZvciB0aGUgZmlmdGggcHJvZHVjdCcsCiAgICBwcmljZTogJzI1MCcsCiAgfSwKXTsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhlIGxpc3Qgb2YgcHJvZHVjdHMgZXhwb3J0ZWQgaGVyZSB3aWxsIGJlIHJldHVybmVkIGFzIGEgcmVzcG9uc2Ugb25jZSBhbiBIVFRQIEdFVCByZXF1ZXN0IGlzIHNlbnQgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy9wcm9kdWN0cyZsdDsvY29kZSZndDsgZW5kcG9pbnQuIFdlIHdpbGwgZGlzY3VzcyBtb3JlIGRldGFpbHMgYWJvdXQgdGhpcyBlbmRwb2ludCBpbiBhIGJpdC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7U2V0dGluZyB1cCBhIHNlcnZpY2UmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7V2UgYXJlIGdvaW5nIHRvIHVzZSB0aGUgZGVmYXVsdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtBcHBTZXJ2aWNlJmx0Oy9jb2RlJmd0OyB0byByZXR1cm4gdGhlIGxpc3Qgb2YgcHJvZHVjdHMuIFJlcGxhY2UgdGhlIGNvbnRlbnQgb2YgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3JjL2FwcC5zZXJ2aWNlLnRzJmx0Oy9jb2RlJmd0OyB3aXRoIHRoZSBmb2xsb3dpbmcgY29kZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7CmltcG9ydCB7IFBST0RVQ1RTIH0gZnJvbSAnLi9tb2NrL3Byb2R1Y3RzLm1vY2snOwoKQEluamVjdGFibGUoKQpleHBvcnQgY2xhc3MgQXBwU2VydmljZSB7CiAgcHJvZHVjdHMgPSBQUk9EVUNUUzsKCiAgYXN5bmMgZ2V0UHJvZHVjdHMoKSB7CiAgICByZXR1cm4gYXdhaXQgdGhpcy5wcm9kdWN0czsKICB9Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGZpbGUgYWJvdmUsIHdlIGltcG9ydGVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1BST0RVQ1RTJmx0Oy9jb2RlJmd0OyBmcm9tIHRoZSBtb2NrIGZpbGUsIGFuZCByZXR1cm5lZCB0aGUgbGlzdCB3aXRoaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dldFByb2R1Y3RzKCkmbHQ7L2NvZGUmZ3Q7IG1ldGhvZC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgdGhlIHByb2R1Y3RzIGVuZHBvaW50Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O05leHQsIHdlIHdpbGwgY3JlYXRlIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsvcHJvZHVjdHMmbHQ7L2NvZGUmZ3Q7IGVuZHBvaW50IHdpdGhpbiB0aGUgZGVmYXVsdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtBcHBDb250cm9sbGVyJmx0Oy9jb2RlJmd0Oy4gVG8gZG8gdGhhdCwgbmF2aWdhdGUgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NyYy9hcHAuY29udHJvbGxlci50cyZsdDsvY29kZSZndDsgZmlsZSBhbmQgcmVwbGFjZSBpdHMgY29udGVudHMgd2l0aCB0aGUgZm9sbG93aW5nOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7aW1wb3J0IHsgQ29udHJvbGxlciwgR2V0IH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nOwppbXBvcnQgeyBBcHBTZXJ2aWNlIH0gZnJvbSAnLi9hcHAuc2VydmljZSc7CgpAQ29udHJvbGxlcigpCmV4cG9ydCBjbGFzcyBBcHBDb250cm9sbGVyIHsKICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGFwcFNlcnZpY2U6IEFwcFNlcnZpY2UpIHt9CgogIEBHZXQoJy9wcm9kdWN0cycpCiAgZ2V0UHJvZHVjdHMoKSB7CiAgICByZXR1cm4gdGhpcy5hcHBTZXJ2aWNlLmdldFByb2R1Y3RzKCk7CiAgfQp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtBcHBTZXJ2aWNlJmx0Oy9jb2RlJmd0OyBoYXMgYWxyZWFkeSBiZWVuIGluamVjdGVkIGludG8gdGhpcyBjb250cm9sbGVyIGJ5IGRlZmF1bHQuIEhlcmUsIHdlIGNyZWF0ZWQgYSBuZXcgbWV0aG9kIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dldFByb2R1Y3RzJmx0Oy9jb2RlJmd0OyB3aXRoIGEgcHJlZml4IG9mICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy9wcm9kdWN0cyZsdDsvY29kZSZndDsgYW5kIGNhbGxlZCB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Z2V0UHJvZHVjdHMoKSZsdDsvY29kZSZndDsgbWV0aG9kIHdpdGhpbiB0aGUgQXBwU2VydmljZS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7UnVubmluZyB0aGUgYXBwbGljYXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7RnJvbSB3aXRoaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QsIHN0YXJ0IHRoZSBhcHBsaWNhdGlvbiBhZ2FpbiB3aXRoICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25wbSBydW4gc3RhcnQ6ZGV2Jmx0Oy9jb2RlJmd0OyBhbmQgbmF2aWdhdGUgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vbG9jYWxob3N0OjMwMDAvcHJvZHVjdHMmcXVvdDsmZ3Q7aHR0cDovL2xvY2FsaG9zdDozMDAwL3Byb2R1Y3RzJmx0Oy9hJmd0Oy4gWW91IHdpbGwgc2VlIGEgcGFnZSBkaXNwbGF5aW5nIHRoZSBsaXN0IG9mIG91ciBtb2NrZWQgcHJvZHVjdHMgaW4gSlNPTi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTAyLWxvY2FsLXByb2R1Y3QtcmVzdWx0LnBuZyZxdW90OyBhbHQ9JnF1b3Q7UHJvZHVjdCBMaXN0IG9uIExvY2FsaG9zdCZxdW90OyAvJmd0OwombHQ7c3Ryb25nJmd0O05vdGUmbHQ7L3N0cm9uZyZndDs6ICZsdDtpJmd0O0kgaGF2ZSBhbiBleHRlbnNpb24gaW5zdGFsbGVkIHRvIHByZXR0aWZ5IHRoZSBKU09OLiZsdDsvaSZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7UHVzaGluZyB0byBHaXRIdWImbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgd2UgaGF2ZSBhIHdvcmtpbmcgYXBwbGljYXRpb24sIHdlIG5lZWQgdG8gY3JlYXRlIGEgcmVwb3NpdG9yeSBmb3IgaXQgb24gR2l0SHViIGFuZCBwdXNoIGFsbCB0aGUgdXBkYXRlcyBtYWRlIHNvIGZhci4gR28gdG8geW91ciBkYXNoYm9hcmQgb24gR2l0SHViIGFuZCBjcmVhdGUgYSByZXBvc2l0b3J5LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDItY3JlYXRlLXJlcG9zaXRvcnkucG5nJnF1b3Q7IGFsdD0mcXVvdDtDcmVhdGUgcmVwb3NpdG9yeSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O09uY2UgeW914oCZcmUgZG9uZSwgcHVzaCB0aGUgcHJvamVjdCB0byB0aGUgY3JlYXRlZCByZXBvc2l0b3J5IGFuZCBwcm9jZWVkIHRvIHNldCB1cCBhIEhlcm9rdSBhcHBsaWNhdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgYSBIZXJva3UgYXBwJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1NldHRpbmcgdXAgYSBIZXJva3UgYXBwIGlzIHJlcXVpcmVkIGZvciBkZXBsb3ltZW50LiBUaGlzIGhlbHBzIEhlcm9rdSBwcmVwYXJlIHRvIHJlY2VpdmUgeW91ciBzb3VyY2UgY29kZS4gVG8gYmVnaW46Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vaWQuaGVyb2t1LmNvbS9sb2dpbiZxdW90OyZndDtMb2cgaW50byBIZXJva3UmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7R28gdG8geW91ciBkYXNoYm9hcmQmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtDbGljayAmbHQ7c3Ryb25nJmd0O05ldyZsdDsvc3Ryb25nJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1NlbGVjdCAmbHQ7c3Ryb25nJmd0O0NyZWF0ZSBuZXcgYXBwJmx0Oy9zdHJvbmcmZ3Q7Jmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIGJlIHJlZGlyZWN0ZWQgdG8gYSBwYWdlIHdoZXJlIHlvdSB3aWxsIGlucHV0IHRoZSBiYXNpYyBkZXRhaWxzIGZvciB5b3VyIGFwcC4gRW50ZXIgdGhlIHByZWZlcnJlZCBuYW1lLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDItY3JlYXRlLWhlcm9rdS1hcHAucG5nJnF1b3Q7IGFsdD0mcXVvdDtDcmVhdGUgSGVyb2t1IGFwcCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0kgbmFtZWQgdGhlIGFwcGxpY2F0aW9uICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25lc3QtaGVyb2t1LWRlbW8mbHQ7L2NvZGUmZ3Q7LiBIZXJva3UgYXBwIG5hbWVzIG5lZWQgdG8gYmUgdW5pcXVlLCBzbyBmZWVsIGZyZWUgdG8gdXNlIGFueSBuYW1lIHRoYXQgeW91IGRlZW0gZml0IGFuZCBjbGljayAmbHQ7c3Ryb25nJmd0O0NyZWF0ZSBhcHAmbHQ7L3N0cm9uZyZndDsuIEZvciBDaXJjbGVDSSB0byB1bmlxdWVseSBpZGVudGlmeSBvdXIgSGVyb2t1IGFwcGxpY2F0aW9uIGFuZCBhdXRvbWF0aWNhbGx5IG1ha2UgYSBkZXBsb3ltZW50IHRvIGl0LCB3ZSBuZWVkIHRvIGNyZWF0ZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIFRoaXMgd2lsbCBiZSB0aGUgbmFtZSBvZiB0aGUgYXBwbGljYXRpb24gd2UganVzdCBjcmVhdGVkIGFuZCB0aGUgQVBJIEtleSBmb3Igb3VyIEhlcm9rdSBhY2NvdW50LiBUbyB2aWV3IHlvdXIgSGVyb2t1IEFQSSBrZXksIGNsaWNrIG9uIHlvdXIgcHJvZmlsZSBwaWN0dXJlIGFuZCBzZWxlY3QgJmx0O3N0cm9uZyZndDtBY2NvdW50IHNldHRpbmdzJmx0Oy9zdHJvbmcmZ3Q7IGZyb20gdGhlIGRyb3Bkb3duLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDItYWNjb3VudC1zZXR0aW5ncy5wbmcmcXVvdDsgYWx0PSZxdW90O0FjY291bnQgU2V0dGluZ3MmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgdGFrZSB5b3UgdG8gYSBwYWdlIHRvIG1hbmFnZSB5b3VyIGFjY291bnQuIEVuc3VyZSB0aGF0IHRoZSAmbHQ7c3Ryb25nJmd0O0FjY291bnQmbHQ7L3N0cm9uZyZndDsgdGFiIGlzIHNlbGVjdGVkIGFuZCBzY3JvbGwgZG93biB0byB0aGUgJmx0O3N0cm9uZyZndDtBUEkgS2V5Jmx0Oy9zdHJvbmcmZ3Q7IHNlY3Rpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMi1hcGkta2V5LXNlY3Rpb24ucG5nJnF1b3Q7IGFsdD0mcXVvdDtBUEkgS2V5IHNlY3Rpb24mcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayAmbHQ7c3Ryb25nJmd0O1JldmVhbCZsdDsvc3Ryb25nJmd0OyB0byB2aWV3IHRoZSBBUEkga2V5LCB0aGVuIGNvcHkgaXQuIEtlZXAgaXQgc2FmZSBhcyB3ZSB3aWxsIG5lZWQgaXQgbGF0ZXIuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0FkZGluZyB0aGUgQ2lyY2xlQ0kgY29uZmlndXJhdGlvbiBmb3IgY29udGludW91cyBkZXBsb3ltZW50Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O0luIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBjcmVhdGUgYSBDaXJjbGVDSSBjb25maWd1cmF0aW9uIGZpbGUgd2hlcmUgd2Ugd2lsbCB3cml0ZSB0aGUgZGVwbG95bWVudCBzY3JpcHQgZm9yIG91ciBhcHBsaWNhdGlvbi4gVG8gZG8gdGhhdCwgY3JlYXRlIGEgZm9sZGVyIHdpdGhpbiB0aGUgcm9vdCBvZiB0aGUgYXBwbGljYXRpb24gd2l0aCB0aGUgbmFtZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuY2lyY2xlY2kmbHQ7L2NvZGUmZ3Q7LiBUaGVuIGNyZWF0ZSBhIGZpbGUgd2l0aGluIGl0IGFuZCBjYWxsIGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7LiBQYXN0ZSB0aGUgZm9sbG93aW5nIGNvZGUgaW4gdGhpcyBuZXcgZmlsZSAoJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LmNpcmNsZWNpL2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7KTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246IDIuMQpvcmJzOgogIGhlcm9rdTogY2lyY2xlY2kvaGVyb2t1QDEuMC4xCndvcmtmbG93czoKICBoZXJva3VfZGVwbG95OgogICAgam9iczoKICAgICAgLSBoZXJva3UvZGVwbG95LXZpYS1naXQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhlIGNvbmZpZ3VyYXRpb24gZmlsZSBhYm92ZSBzcGVjaWZpZXMgdGhlIHZlcnNpb24gb2YgQ2lyY2xlQ0kgY29uZmlndXJhdGlvbiBmb3IgdGhpcyBwcm9qZWN0LiBJbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7b3JicyZsdDsvY29kZSZndDsga2V5IHdlIGludm9rZWQgdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2NpcmNsZWNpL2hlcm9rdSZxdW90OyZndDtIZXJva3Ugb3JiJmx0Oy9hJmd0OyBhdmFpbGFibGUgYXQgdGhlIHRpbWUgb2Ygd3JpdGluZy4gVGhpcyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvJnF1b3Q7Jmd0O29yYiZsdDsvYSZndDsgYWJzdHJhY3RlZCB0aGUgY29tcGxleGl0eSBpbnZvbHZlZCBpbiBzZXR0aW5nIHVwIHRoZSBIZXJva3UgQ0xJLCBhcyBpdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgaW5zdGFsbGVkIGFuZCB1c2VkIHRvIGRlcGxveSB0aGUgYXBwbGljYXRpb24gdG8gSGVyb2t1LiZsdDsvcCZndDsKCiZsdDtoMiZndDtTZXR0aW5nIHVwIHRoZSBwcm9qZWN0IG9uIENpcmNsZUNJJmx0Oy9oMiZndDsKCiZsdDtwJmd0O05vdyB0aGF0IHdlIGhhdmUgY3JlYXRlZCBhIEhlcm9rdSBhcHAgYW5kIHNldCB1cCB0aGUgY29uZmlndXJhdGlvbiB0byBmYWNpbGl0YXRlIGRlcGxveW1lbnQgb2Ygb3VyIE5lc3QuanMgYXBwbGljYXRpb24gdG8gSGVyb2t1IGJ5IENpcmNsZUNJLCB3ZSBuZWVkIHRvIGNvbmZpZ3VyZSBvdXIgcHJvamVjdCBvbiBDaXJjbGVDSS4gTG9nIGluIHRvIHlvdXIgQ2lyY2xlQ0kgYWNjb3VudCB3aXRoIHRoZSBsaW5rZWQgR2l0SHViIGFjY291bnQgdGhhdCBjb250YWlucyB0aGUgcmVwb3NpdG9yeSBmb3Igb3VyIE5lc3QuanMgYXBwbGljYXRpb24uIE9uIHRoZSBwcm9qZWN0IHBhZ2UsIGZpbmQgdGhlIG5hbWUgb2YgeW91ciBwcm9qZWN0IGFuZCBjbGljayAmbHQ7c3Ryb25nJmd0O1NldCBVcCBQcm9qZWN0Jmx0Oy9zdHJvbmcmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDItc2V0dXAtcHJvamVjdC5wbmcmcXVvdDsgYWx0PSZxdW90O1NldCB1cCBwcm9qZWN0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIHNob3cgeW91IGEgY29uZmlndXJhdGlvbiBwYWdlIHdpdGggdGhlIGRldGFpbHMgZnJvbSBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7IGZpbGUgc2ltaWxhciB0byB3aGF0IHdlIGNyZWF0ZWQgZWFybGllci4gTm93IGNsaWNrICZsdDtzdHJvbmcmZ3Q7QWRkIE1hbnVhbGx5Jmx0Oy9zdHJvbmcmZ3Q7LCB0aGVuIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsgb24gdGhlIG5leHQgcHJvbXB0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDItZmFpbGVkLWRlcGxveS5wbmcmcXVvdDsgYWx0PSZxdW90O0ZhaWxlZCBkZXBsb3ltZW50JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93IGlmIHlvdSBjbGljayBvbiB0aGUgam9iICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2hlcm9rdS9kZXBsb3ktdmlhLWdpdCZsdDsvY29kZSZndDsgZnJvbSB0aGUgcGFnZSBhYm92ZSwgeW91IHdpbGwgc2VlIHRoZSBkZXRhaWxzIG9mIHdoeSB0aGUgZGVwbG95bWVudCB3YXMgbm90IHN1Y2Nlc3NmdWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMi1mYWlsZWQtZGV0YWlscy5wbmcmcXVvdDsgYWx0PSZxdW90O0RlcGxveW1lbnQgRmFpbGVkIGRldGFpbHMmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtEb27igJl0IHN3ZWF0IGl0LCB3ZSBvbmx5IG5lZWQgdG8gZG8gdGhlIGZvbGxvd2luZzombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O0FkZCB0aGUgZGV0YWlscyBvZiBvdXIgSGVyb2t1IGFwcGxpY2F0aW9uIGFzIGVudmlyb25tZW50IHZhcmlhYmxlcyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1VwZGF0ZSB0aGUgcG9ydCBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvbWFpbi50cyZsdDsvY29kZSZndDsgd2l0aGluIG91ciBwcm9qZWN0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Q3JlYXRlIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvY2ZpbGUmbHQ7L2NvZGUmZ3Q7Jmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtwJmd0O1dlIHdpbGwgZG8gYWxsIHRoZXNlIGluIHRoZSBuZXh0IHNlY3Rpb24uJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0FkZGluZyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gQ2lyY2xlQ0kmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7Rm9yIENpcmNsZUNJIHRvIGhhdmUgYXV0aGVudGljYXRlZCBhY2Nlc3MgdG8gdGhlIEhlcm9rdSBhcHBsaWNhdGlvbiBmb3IgdGhlIGRlcGxveW1lbnQgcHJvY2Vzcywgd2UgbmVlZCB0byBhZGQgdHdvICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAvZW52LXZhcnMvJnF1b3Q7Jmd0O2Vudmlyb25tZW50IHZhcmlhYmxlcyZsdDsvYSZndDsgZnJvbSBvdXIgSGVyb2t1IGFjY291bnQgdG8gb3VyIENpcmNsZUNJIHBpcGVsaW5lLiZsdDsvcCZndDsKCiZsdDtwJmd0O0dvIHRvIHlvdXIgcHJvamVjdOKAmXMgc2V0dGluZ3MgYnkgY2xpY2tpbmcgJmx0O3N0cm9uZyZndDtQcm9qZWN0IFNldHRpbmdzJmx0Oy9zdHJvbmcmZ3Q7IG9uIHRoZSAmbHQ7c3Ryb25nJmd0O1BpcGVsaW5lcyZsdDsvc3Ryb25nJmd0OyBwYWdlIChtYWtlIHN1cmUgeW91ciBwcm9qZWN0IGlzIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgcHJvamVjdCkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMi1waXBlbGluZS5wbmcmcXVvdDsgYWx0PSZxdW90O1BpcGVsaW5lJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T24gdGhlIHNpZGViYXIgbWVudSBvZiB0aGUgc2V0dGluZ3MgcGFnZSwgY2xpY2sgJmx0O3N0cm9uZyZndDtFbnZpcm9ubWVudCBWYXJpYWJsZXMmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMi1lbnZpcm9ubWVudC12YXJpYWJsZXMtcGFnZS5wbmcmcXVvdDsgYWx0PSZxdW90O0Vudmlyb25tZW50IHZhcmlhYmxlIHBhZ2UmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayBvbiAmbHQ7c3Ryb25nJmd0O0FkZCBFbnZpcm9ubWVudCBWYXJpYWJsZSZsdDsvc3Ryb25nJmd0Oy4gVGhpcyB3aWxsIHNob3cgYSBwcm9tcHQgd2hlcmUgeW91IGNhbiBlbnRlciB0aGUgdmFyaWFibGUgbmFtZSBhbmQgdmFsdWUuIFRoZSB2YXJpYWJsZXMgcmVxdWlyZWQgYXJlOiZsdDsvcCZndDsKCiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7SEVST0tVX0FQUF9OQU1FJmx0Oy9jb2RlJmd0OzogVGhlIG5hbWUgb2YgdGhlIEhlcm9rdSBhcHBsaWNhdGlvbiBjcmVhdGVkIGVhcmxpZXImbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtIRVJPS1VfQVBJX0tFWSZsdDsvY29kZSZndDs6IFRoZSBIZXJva3UgQVBJIGtleSB0aGF0IHdhcyBvYnRhaW5lZCBmcm9tIHlvdXIgYWNjb3VudCBkYXNoYm9hcmQgb24gSGVyb2t1Jmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtwJmd0O1dlIGFyZSBhbG1vc3QgZG9uZSBzZXR0aW5nIHVwIGFsbCB0aGUgY29uZmlndXJhdGlvbiBuZWVkZWQgdG8gYXV0b21hdGUgdGhlIGRlcGxveW1lbnQgb2Ygb3VyIGFwcGxpY2F0aW9uLiZsdDsvcCZndDsKCiZsdDtoMyZndDtVcGRhdGluZyB0aGUgcG9ydCBpbiB0aGUgYXBwbGljYXRpb24mbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGNvZGViYXNlLCB3ZSBuZWVkIHRvIHVwZGF0ZSB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bWFpbi50cyZsdDsvY29kZSZndDsgd2l0aCBhbiBvcHRpb24gdG8gdXNlIGEgZml4ZWQgcG9ydCBvciBhIGR5bmFtaWNhbGx5IGFzc2lnbmVkIHZhbHVlLiBUaGlzIGlzIGJlY2F1c2UgSGVyb2t1IG9mdGVuIGR5bmFtaWNhbGx5IGFzc2lnbnMgYSBwb3J0IHRvIGV2ZXJ5IG5ldyBhcHBsaWNhdGlvbiwgc28gc2V0dGluZyBhIGZpeGVkIHZhbHVlICh0aGUgZGVmYXVsdCBmb3IgYSBOZXN0LmpzIGFwcGxpY2F0aW9uKSB3aWxsIHJlc3VsdCBpbiBhbiBlcnJvci4gT3BlbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvbWFpbi50cyZsdDsvY29kZSZndDsgYW5kIHVwZGF0ZSBpdHMgY29udGVudCBhcyBzaG93biBiZWxvdzombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O2ltcG9ydCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtOZXN0RmFjdG9yeSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtmcm9tJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMSZxdW90OyZndDsnQG5lc3Rqcy9jb3JlJyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O2ltcG9ydCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBcHBNb2R1bGUmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7ZnJvbSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7Jy4vYXBwLm1vZHVsZScmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2FzeW5jJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2Z1bmN0aW9uJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuZiZxdW90OyZndDtib290c3RyYXAmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7Y29uc3QmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25vJnF1b3Q7Jmd0O2FwcCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2F3YWl0Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtOZXN0RmFjdG9yeSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy4mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7Y3JlYXRlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBcHBNb2R1bGUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspOyZsdDsvc3BhbiZndDsKICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2F3YWl0Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDthcHAmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDsuJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O2xpc3RlbiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7cHJvY2VzcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy4mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7ZW52Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LiZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtQT1JUJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0O3x8Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDttaSZxdW90OyZndDszMDAwJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2MxJnF1b3Q7Jmd0Oy8vIHVwZGF0ZSB0aGlzIGxpbmUmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7Ym9vdHN0cmFwJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCk7Jmx0Oy9zcGFuJmd0OwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtXaXRoIHRoaXMgb3B0aW9uLCB0aGUgYXBwbGljYXRpb24gY2FuIGVpdGhlciBydW4gb24gdGhlIGZpeGVkIHBvcnQgb2YgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7MzAwMCZsdDsvY29kZSZndDsgb3IgYW55IGR5bmFtaWMgcG9ydCBzcGVjaWZpZWQgaW4gYSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuZW52Jmx0Oy9jb2RlJmd0OyBmaWxlLiZsdDsvcCZndDsKCiZsdDtoMyZndDtDcmVhdGluZyBhIFByb2NmaWxlJmx0Oy9oMyZndDsKCiZsdDtwJmd0O0ZpbmFsbHksIHlvdSBuZWVkIHRvIGNyZWF0ZSBhIG5ldyBmaWxlIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2NmaWxlJmx0Oy9jb2RlJmd0OyB3aXRoaW4gdGhlIHJvb3Qgb2YgeW91ciBhcHBsaWNhdGlvbiBhbmQgcGFzdGUgdGhlIGZvbGxvd2luZyBjb250ZW50IGludG8gaXQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDt3ZWI6IG5wbSBydW4gc3RhcnQ6cHJvZAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGlzIGZpbGUgdGVsbHMgSGVyb2t1IHRoZSBjb21tYW5kIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGV4ZWN1dGUgdGhlIGFwcGxpY2F0aW9uIG9uIHN0YXJ0dXAuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7U2F2ZSB0aGlzIGZpbGUgYW5kIHB1c2ggeW91ciBjaGFuZ2VzIHRvIHRoZSBHaXRIdWIgcmVwb3NpdG9yeS4gTm93IHdhdGNoIHlvdXIgQ2lyY2xlQ0kgZGFzaGJvYXJkIHRvIHNlZSB0aGUgcHJvZ3Jlc3Mgb2YgdGhlIGRlcGxveW1lbnQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMi1waXBlbGluZS1zdWNjZXNzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7RGVwbG95bWVudCBzdWNjZXNzIHN0YXR1cyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBzdGF0dXMgb2YgdGhlIENpcmNsZUNJIHBpcGVsaW5lIGZvciBvdXIgcHJvamVjdCBpbmRpY2F0ZWQgdGhhdCB0aGUgYnVpbGQgd2FzIHN1Y2Nlc3NmdWwgYW5kIG91ciBhcHBsaWNhdGlvbiBoYXMgYmVlbiBkZXBsb3llZC4gWW91IGNhbiBjb25maXJtIHRoaXMgYnkgbmF2aWdhdGluZyB0byB0aGUgbGluayBnZW5lcmF0ZWQgZm9yIHRoZSBhcHBsaWNhdGlvbiBieSBIZXJva3UuIFRoZSBmb3JtYXQgb2YgdGhlIFVSTCBpcyBhbHdheXMgdGhlIHNhbWU6ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2h0dHBzOi8vWU9VUl9IRVJPS1VfQVBQX05BTUUuaGVyb2t1YXBwLmNvbS8mbHQ7L2NvZGUmZ3Q7LiBZb3UgY2FuIGFsc28gY2hlY2sgb3V0IHRoaXMgZW5kcG9pbnQgb2YgbXkgcnVubmluZyBpbnN0YW5jZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2NpLWd3cC1uZXN0LWhlcm9rdS1kZW1vLmhlcm9rdWFwcC5jb20vcHJvZHVjdHMmcXVvdDsmZ3Q7aHR0cHM6Ly9jY2ktZ3dwLW5lc3QtaGVyb2t1LWRlbW8uaGVyb2t1YXBwLmNvbS9wcm9kdWN0cy8mbHQ7L2EmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDItaGVyb2t1LWFwcC5wbmcmcXVvdDsgYWx0PSZxdW90O0hlcm9rdSBBcHAmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDb25ncmF0dWxhdGlvbnMhIFlvdSBoYXZlIGp1c3QgZGVwbG95ZWQgYSBOZXN0LmpzIGFwcGxpY2F0aW9uIHRvIEhlcm9rdS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q29uY2x1c2lvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHR1dG9yaWFsLCB3ZSB3ZXJlIGFibGUgdG8gYnVpbGQgYSBzaW1wbGUgTmVzdC5qcyBhcHBsaWNhdGlvbiwgc2V0IHVwIGEgSGVyb2t1IGFwcCwgYW5kIGF1dG9tYXRlIHRoZSBkZXBsb3ltZW50IG9mIG91ciBOZXN0LmpzIGFwcGxpY2F0aW9uIHRvIEhlcm9rdS4mbHQ7L3AmZ3Q7CgombHQ7aHIgLyZndDsKCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly90d2l0dGVyLmNvbS95ZW1pd2ViYnkmcXVvdDsmZ3Q7T2x1eWVtaSZsdDsvYSZndDsgaXMgYSB0ZWNoIGVudGh1c2lhc3QsIHByb2dyYW1taW5nIGZyZWFrLCBhbmQgYSB3ZWIgZGV2ZWxvcG1lbnQganVua2llIHdobyBsb3ZlcyB0byBlbWJyYWNlIG5ldyB0ZWNobm9sb2d5LiZsdDsvcCZndDsKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgICAgIAogICAgICA8aXRlbT4KICAgICAgICA8dGl0bGU+Q29udGludW91cyBpbnRlZ3JhdGlvbiBmb3IgcHJvZ3Jlc3NpdmUgd2ViIGFwcHM8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY2ktZm9yLXB3YXMvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPlR1ZSwgMjMgSnVuIDIwMjAgMTc6MDA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY2ktZm9yLXB3YXMvPC9ndWlkPgogICAgICAgIAogICAgICAgICAgPGRjOmNyZWF0b3I+RmlrYXlvIEFkZXBvanU8L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7V2ViIGFuZCBicm93c2VyIHRlY2hub2xvZ3kgY29udGludWVzIHRvIGFkdmFuY2UsIGFuZCB0aGUgZ2FwIGJldHdlZW4gdGhlIHBlcmZvcm1hbmNlIG9mIHdlYiBhbmQgbmF0aXZlIGFwcGxpY2F0aW9ucyBjb250aW51ZXMgdG8gYmUgcmVkdWNlZC4gRmVhdHVyZXMgdGhhdCB3ZXJlIG9uY2UgZXhjbHVzaXZlIHRvIG5hdGl2ZSBhcHBsaWNhdGlvbnMgYXJlIG5vdyBiZWluZyBpbXBsZW1lbnRlZCBpbiB3ZWIgYXBwbGljYXRpb25zLiBOb3Qgc28gcmVjZW50bHksIHRoZSBlbWVyZ2VuY2Ugb2YgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3dlYi5kZXYvcHJvZ3Jlc3NpdmUtd2ViLWFwcHMvJnF1b3Q7Jmd0O3Byb2dyZXNzaXZlIHdlYiBhcHBsaWNhdGlvbnMgKFBXQXMpJmx0Oy9hJmd0OyBoYXMgZ3JlYXRseSBjbG9zZWQgdGhlIGdhcCBiZXR3ZWVuIHdlYiBhbmQgbmF0aXZlIGFwcGxpY2F0aW9ucy4gV2ViIGFwcGxpY2F0aW9ucyBjYW4gbm93IGJlIGluc3RhbGxlZCwgcmVjZWl2ZSBwdXNoIG5vdGlmaWNhdGlvbnMsIGFuZCBldmVuIHdvcmsgb2ZmbGluZS4gSW4gdGhpcyBwb3N0LCB3ZSB3aWxsIGJ1aWxkIGEgc2ltcGxlIFBXQSwgd3JpdGUgdGVzdHMgZm9yIGl0LCBhbmQgYXV0b21hdGUgdGhlIHRlc3RpbmcgcHJvY2VzcyBieSBidWlsZGluZyBhICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vY29udGludW91cy1pbnRlZ3JhdGlvbi8mcXVvdDsmZ3Q7Y29udGludW91cyBpbnRlZ3JhdGlvbiZsdDsvYSZndDsgKENJKSBwaXBlbGluZSB3aXRoIENpcmNsZUNJLiZsdDsvcCZndDsKCiZsdDtoMiZndDtQcmVyZXF1aXNpdGVzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGZvbGxvdyB0aGlzIHBvc3QsIGEgZmV3IHRoaW5ncyBhcmUgcmVxdWlyZWQ6Jmx0Oy9wJmd0OwoKJmx0O29sJmd0OwogICZsdDtsaSZndDtCYXNpYyBrbm93bGVkZ2Ugb2YgSmF2YXNjcmlwdCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9ub2RlanMub3JnJnF1b3Q7Jmd0O05vZGUuanMmbHQ7L2EmZ3Q7IGluc3RhbGxlZCBvbiB5b3VyIHN5c3RlbSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaHR0cC1zZXJ2ZXImcXVvdDsmZ3Q7SFRUUCBTZXJ2ZXIgTW9kdWxlJmx0Oy9hJmd0OyBpbnN0YWxsZWQgZ2xvYmFsbHkgb24geW91ciBzeXN0ZW0gKCZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25wbSBpbnN0YWxsIC1nIGh0dHAtc2VydmVyJmx0Oy9jb2RlJmd0OykmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vc2lnbnVwLyZxdW90OyZndDtDaXJjbGVDSSZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiZsdDsvb2wmZ3Q7CgombHQ7cCZndDtMZXTigJlzIGJlZ2luLiZsdDsvcCZndDsKCiZsdDtoMiZndDtTZXR0aW5nIHVwIHRoZSBkZW1vIGFwcGxpY2F0aW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGJlZ2luLCBjcmVhdGUgYW4gYXBwbGljYXRpb24gZm9sZGVyIGJ5IHJ1bm5pbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bWtkaXIgbXktcHdhCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O05leHQsIGluc2lkZSB0aGUgcm9vdCBvZiB0aGUgYXBwbGljYXRpb24sIGNyZWF0ZSBhIGZpbGUgbmFtZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aW5kZXguaHRtbCZsdDsvY29kZSZndDsgd2hpY2ggd2lsbCBiZSB0aGUgaG9tZSBwYWdlIGZvciB0aGUgYXBwbGljYXRpb24uIFBhc3RlIHRoZSBmb2xsb3dpbmcgY29kZSBpbnRvIHRoaXMgZmlsZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O2NwJnF1b3Q7Jmd0OyZhbXA7bHQ7IURPQ1RZUEUgaHRtbCZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2h0bWwmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2xhbmc9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7ZW4mcXVvdDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDtoZWFkJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O21ldGEmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2NoYXJzZXQ9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7VVRGLTgmcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0Oy8mYW1wO2d0OyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7bWV0YSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7bmFtZT0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDt2aWV3cG9ydCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Y29udGVudD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDt3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wJnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsvJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2xpbmsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3JlbD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDttYW5pZmVzdCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7aHJlZj0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDttYW5pZmVzdC5qc29uJnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsvJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2xpbmsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3JlbD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDtzdHlsZXNoZWV0JnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDt0eXBlPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O3RleHQvY3NzJnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtocmVmPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O3N0eWxlcy5jc3MmcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O21lZGlhPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2FsbCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7LyZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwoKCiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O3RpdGxlJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7TXkgUFdBIEFwcGxpY2F0aW9uJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDsvdGl0bGUmYW1wO2d0OyZsdDsvc3BhbiZndDsKICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0Oy9oZWFkJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDtib2R5JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDtoMiZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICAgICBXZWxjb21lIHRvIG15IFByb2dyZXNzaXZlIFdlYiBBcHBsaWNhdGlvbi4KICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7L2gyJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CgoKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7c2NyaXB0ICZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzcmM9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7YXBwLmpzJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7Z3Q7JmFtcDtsdDsvc2NyaXB0JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDsvYm9keSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0Oy9odG1sJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJbiB0aGUgZmlsZSBhYm92ZSwgd2UgaGF2ZSBhIHR5cGljYWwgSFRNTCBwYWdlIHdpdGggYSB0aXRsZSB0aGF0IHJlYWRzIOKAnE15IFBXQSBBcHBsaWNhdGlvbuKAnSBhbmQgYSB3ZWxjb21lIG1lc3NhZ2UuIFRoaXMgZmlsZSBhbHNvIHJlZmVyZW5jZXMgYSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDttYW5pZmVzdC5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlICh0byBjb25maWd1cmUgb3VyIFBXQSBmb3IgaW5zdGFsbGF0aW9uKSwgYSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzdHlsZXMuY3NzJmx0Oy9jb2RlJmd0OyBmaWxlIGZvciBzb21lIGJhc2ljIHN0eWxpbmcsIGFuZCBhbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDthcHAuanMmbHQ7L2NvZGUmZ3Q7IGZpbGUgd2hpY2ggd2lsbCBsb2FkIGluIG91ciBzZXJ2aWNlIHdvcmtlci4gQWxsIG9mIHRoZXNlIGZpbGVzIHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgY291cnNlIG9mIHRoaXMgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gZ2V0IGEgcHJldmlldywgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBhdCB0aGUgcm9vdCBvZiB0aGUgYXBwbGljYXRpb246Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtodHRwLXNlcnZlcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgaW52b2tlIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtodHRwLXNlcnZlciZsdDsvY29kZSZndDsgbW9kdWxlIHRvIHNwaW4gdXAgYW4gYWQgaG9jIHNlcnZlciB0byBzZXJ2ZSB0aGUgYXBwbGljYXRpb24uIFlvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIHNjcmVlbiBpbiB5b3VyIGJyb3dzZXIgYWZ0ZXIgbmF2aWdhdGluZyB0byB0aGUgVVJMIHdoZXJlIHRoZSBhcHBsaWNhdGlvbiBpcyBiZWluZyBzZXJ2ZWQgKHRoZSBhZGRyZXNzIHdpbGwgYmUgZGlzcGxheWVkIG9uIHRoZSBjb25zb2xlIGFmdGVyIHJ1bm5pbmcgdGhlIGNvbW1hbmQpLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDYtcHdhLW5vLXN3LnBuZyZxdW90OyBhbHQ9JnF1b3Q7QXBwbGljYXRpb24gSG9tZSBQYWdlJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O3N0cm9uZyZndDtOb3RlJmx0Oy9zdHJvbmcmZ3Q7OiAmbHQ7aSZndDtJIGFtIHJ1bm5pbmcgaW4gSW5jb2duaXRvIG1vZGUgb24gdGhlIEdvb2dsZSBDaHJvbWUgYnJvd3NlciB3aXRoIHRoZSBkZXZlbG9wZXIgdG9vbHMgb3BlbmVkIGFuZCBtb2JpbGUgdmlldyBhY3RpdmF0ZWQuIEkgcHJlZmVyIHJ1bm5pbmcgUFdBcyBpbiBJbmNvZ25pdG8gbW9kZSBkdXJpbmcgZGV2ZWxvcG1lbnQgYXMgdGhpcyBlbnN1cmVzIHRoYXQgSSBnZXQgdXBkYXRlcyB0byBteSBzZXJ2aWNlIHdvcmtlci4mbHQ7L2kmZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgbGV04oCZcyBhZGQgc3R5bGVzIGJ5IGNyZWF0aW5nIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3R5bGVzLmNzcyZsdDsvY29kZSZndDsgZmlsZSBpbiB0aGUgcm9vdCBmb2xkZXIgb2YgdGhlIGFwcGxpY2F0aW9uLiBQYXN0ZSB0aGUgZm9sbG93aW5nIGNvZGUgaW50byB0aGUgZmlsZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0Oy8qIC4vc3R5bGVzLmNzcyAqLwoKaDIgewogIGNvbG9yOiBibHVlOwogIHBhZGRpbmc6IDVweDsKfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGlzIGZpbGUgZG9lc27igJl0IGRvIG11Y2gsIGl0IHNpbXBseSBnaXZlcyB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aDImbHQ7L2NvZGUmZ3Q7IGhlYWRlciBzb21lIHBhZGRpbmcgYW5kIGNvbG9ycyBpdCBibHVlLiZsdDsvcCZndDsKCiZsdDtoMiZndDtBZGRpbmcgYSBzZXJ2aWNlIHdvcmtlciZsdDsvaDImZ3Q7CgombHQ7cCZndDtTZXJ2aWNlIHdvcmtlcnMgYXJlIHRoZSBlbmdpbmUgcm9vbSB0aGF0IHBvd2VycyBQV0EgY2FwYWJpbGl0aWVzLiBXZSB3aWxsIGJlIGFkZGluZyBhIHNlcnZpY2Ugd29ya2VyIHRvIHRoaXMgcHJvamVjdCBieSBjcmVhdGluZyBhIG5ldyBmaWxlIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NlcnZpY2V3b3JrZXIuanMmbHQ7L2NvZGUmZ3Q7IGluIHRoZSByb290IGZvbGRlciBvZiB0aGUgYXBwbGljYXRpb24gYW5kIHBhc3RpbmcgdGhlIGZvbGxvd2luZyBjb2RlIGluIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Ly8gLi9zZXJ2aWNld29ya2VyLmpzCgp2YXIgY2FjaGVOYW1lID0gJnF1b3Q7c3ctdjEmcXVvdDs7CnZhciBmaWxlc1RvQ2FjaGUgPSBbJnF1b3Q7Li8mcXVvdDssICZxdW90Oy4vaW5kZXguaHRtbCZxdW90OywgJnF1b3Q7Li9zdHlsZXMuY3NzJnF1b3Q7XTsKCnNlbGYuYWRkRXZlbnRMaXN0ZW5lcigmcXVvdDtpbnN0YWxsJnF1b3Q7LCBmdW5jdGlvbiAoZSkgewogIGNvbnNvbGUubG9nKCZxdW90O1tTZXJ2aWNlV29ya2VyXSBJbnN0YWxsIHYxJnF1b3Q7KTsKICBlLndhaXRVbnRpbCgKICAgIGNhY2hlcy5vcGVuKGNhY2hlTmFtZSkudGhlbihmdW5jdGlvbiAoY2FjaGUpIHsKICAgICAgY29uc29sZS5sb2coJnF1b3Q7W1NlcnZpY2VXb3JrZXJdIENhY2hpbmcgYXBwIHNoZWxsJnF1b3Q7KTsKICAgICAgcmV0dXJuIGNhY2hlLmFkZEFsbChmaWxlc1RvQ2FjaGUpOwogICAgfSkKICApOwp9KTsKCnNlbGYuYWRkRXZlbnRMaXN0ZW5lcigmcXVvdDthY3RpdmF0ZSZxdW90OywgKGV2ZW50KSA9JmFtcDtndDsgewogIGV2ZW50LndhaXRVbnRpbChzZWxmLmNsaWVudHMuY2xhaW0oKSk7Cn0pOwoKc2VsZi5hZGRFdmVudExpc3RlbmVyKCZxdW90O2ZldGNoJnF1b3Q7LCBmdW5jdGlvbiAoZXZlbnQpIHsKICBldmVudC5yZXNwb25kV2l0aCgKICAgIGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBpZiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2U7CiAgICAgIH0KICAgICAgcmV0dXJuIGZldGNoKGV2ZW50LnJlcXVlc3QpOwogICAgfSkKICApOwp9KTsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VG8gdGhlIGZhbWlsaWFyIGV5ZSwgdGhpcyBpcyBwcmV0dHkgbXVjaCBQV0EgYm9pbGVycGxhdGUgMTAxLiBGaXJzdCwgd2UgYXJlIHNldHRpbmcgYSBuYW1lIGZvciBvdXIgY2FjaGUuIFRoaXMgd2lsbCBlbmFibGUgdXMgdG8gc2V0IHRoZSB2ZXJzaW9uIG9mIG91ciBzZXJ2aWNlIHdvcmtlciB3aGVuZXZlciB0aGUgZmlsZSBpcyB1cGRhdGVkIHNvIHRoYXQgd2hlbiB0aGUgYnJvd3NlciBpbnN0YWxscyB0aGUgdXBkYXRlZCBzZXJ2aWNlIHdvcmtlciBmaWxlLCB3ZSBjYW4gaWRlbnRpZnkgdGhlIHZlcnNpb24gd2UgYXJlIGN1cnJlbnRseSBydW5uaW5nLiBJIGhhdmUgbmFtZWQgdGhpcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzdy12MSZsdDsvY29kZSZndDsgdG8gaWRlbnRpZnkgaXQgYXMgbXkgZmlyc3QgdmVyc2lvbi4gV2UgY2FjaGUgb3VyIGFwcGxpY2F0aW9uIHJvb3QgZmlsZXMgKCZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2luZGV4Lmh0bWwmbHQ7L2NvZGUmZ3Q7IGFuZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzdHlsZXMuY3NzJmx0Oy9jb2RlJmd0OykgaGVyZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOZXh0LCBhbiBhcnJheSBvZiB0aGUgZmlsZXMgdG8gYmUgY2FjaGVkIGlzIGNyZWF0ZWQuIFRoZXNlIGFyZSB0aGUgZmlsZXMgdGhhdCB3aWxsIGJlIGNhY2hlZCBpbiB0aGUgYnJvd3NlcuKAmXMgbWVtb3J5IGZvciB0aGUgdXNlciB0byBhY2Nlc3Mgd2hpbGUgb2ZmbGluZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGVuIHdlIGhhbmRsZSB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aW5zdGFsbCZsdDsvY29kZSZndDsgZXZlbnQgd2hpY2ggdXNlcyBvdXIgY2FjaGUgbmFtZSB0byBjcmVhdGUgYSBjYWNoZSB3aGVyZSBvdXIgZmlsZXMgYXJlIHN0b3JlZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgbmV4dCBldmVudCB0byBoYW5kbGUgaXMgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7YWN0aXZhdGUmbHQ7L2NvZGUmZ3Q7LCB3aGljaCBpcyBmaXJlZCB3aGVuIGEgbmV3IHZlcnNpb24gb2YgYSBzZXJ2aWNlIHdvcmtlciBpcyBiZWluZyBhY3RpdmF0ZWQgYWZ0ZXIgaW5zdGFsbGF0aW9uLiBIZXJlLCB3ZSBlbnN1cmUgdGhhdCB0aGUgb2xkIHNlcnZpY2Ugd29ya2VyIHN0b3BzIHNlcnZpbmcgdGhlIGNhY2hlZCBmaWxlcy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtGaW5hbGx5LCB3ZSBoYW5kbGUgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ZldGNoJmx0Oy9jb2RlJmd0OyBldmVudCB3aGljaCBpbnRlcmNlcHRzIHJlcXVlc3RzIGJ5IHRoZSBhcHBsaWNhdGlvbiBhbmQgY2hlY2tzIHRoZSBjYWNoZSB0byBzZWUgaWYgYSBjYWNoZWQgdmVyc2lvbiBvZiB0aGUgcmVxdWVzdGVkIHJlc291cmNlIGlzIGF2YWlsYWJsZS4gSWYgaXQgaXMgYXZhaWxhYmxlLCB0aGUgY2FjaGVkIHJlc291cmNlIGlzIHNlcnZlZCBhbmQgaWYgbm90LCBhIGZyZXNoIHJlcXVlc3QgaXMgbWFkZSBmb3IgdGhlIHJlc291cmNlLiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIG9yZGVyIHRvIG1ha2Ugb3VyIGFwcGxpY2F0aW9uIHVzZSB0aGUgc2VydmljZSB3b3JrZXIgd2UganVzdCBjcmVhdGVkLCB3ZSBuZWVkIHRvIGxvYWQgaXQgaW50byBvdXIgYXBwbGljYXRpb24uIENyZWF0ZSBhbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDthcHAuanMmbHQ7L2NvZGUmZ3Q7IGZpbGUgaW4gdGhlIHJvb3QgZm9sZGVyIG9mIHRoZSBhcHBsaWNhdGlvbiBhbmQgcGFzdGUgdGhlIGZvbGxvd2luZyBjb2RlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Ly8gLi9hcHAuanMKCmlmICgmcXVvdDtzZXJ2aWNlV29ya2VyJnF1b3Q7IGluIG5hdmlnYXRvcikgewogIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCZxdW90O2xvYWQmcXVvdDssIGZ1bmN0aW9uICgpIHsKICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCZxdW90Oy4vc2VydmljZXdvcmtlci5qcyZxdW90OykudGhlbigKICAgICAgZnVuY3Rpb24gKHJlZ2lzdHJhdGlvbikgewogICAgICAgIGNvbnNvbGUubG9nKCZxdW90O0h1cnJheSEgU2VydmljZSB3b3JrZXJzIHdpdGggc2NvcGU6ICZxdW90OywgcmVnaXN0cmF0aW9uLnNjb3BlKTsKICAgICAgfSwKICAgICAgZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKCZxdW90O09vcHMhIFNlcnZpY2VXb3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDogJnF1b3Q7LCBlcnIpOwogICAgICB9CiAgICApOwogIH0pOwp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0xldOKAmXMgdGFrZSBvdXIgc2VydmljZSB3b3JrIGZvciBhIHNwaW4uIEVuc3VyZSB0aGF0IHlvdXIgYXBwIGlzIHN0aWxsIHJ1bm5pbmcsIHRoZW4gZG8gYSBoYXJkIHJlbG9hZCBvbiB0aGUgYnJvd3NlciB0YWIgd2hlcmUgdGhlIGFwcGxpY2F0aW9uIGlzIGN1cnJlbnRseSBsb2FkZWQgKCZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0N0cmwgKyBTaGlmdCArIFImbHQ7L2NvZGUmZ3Q7KS4gTm93IGNoZWNrIHRoZSBicm93c2VyIGNvbnNvbGUgdG8gc2VlIHRoZSBjb25zb2xlIGxvZyBtZXNzYWdlcyB3ZSB3cm90ZSB0byBjb25maXJtIHRoZSBpbnN0YWxsYXRpb24gb2YgdGhlIHNlcnZpY2Ugd29ya2VyLiZsdDsvcCZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIG1lc3NhZ2VzIGluIHlvdXIgY29uc29sZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA2LXB3YS1pbnN0YWxsZWQucG5nJnF1b3Q7IGFsdD0mcXVvdDtTZXJ2aWNlIFdvcmtlciBJbnN0YWxsYXRpb24mcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtHcmVhdCEmbHQ7L3AmZ3Q7CgombHQ7cCZndDtPdXIgc2VydmljZSB3b3JrZXIgaXMgbm93IGluc3RhbGxlZCBhbmQgb3VyIGZpbGVzIGNhY2hlZCBmb3Igb2ZmbGluZSBhY2Nlc3MuIFRvIGNvbmZpcm0gdGhlIGNhY2hlLCBnbyB0byB0aGUgJmx0O3N0cm9uZyZndDtBcHBsaWNhdGlvbiZsdDsvc3Ryb25nJmd0OyB0YWIgaW4gQ2hyb21lIGRldmVsb3BlciB0b29scyBhbmQgZXhwYW5kIHRoZSAmbHQ7c3Ryb25nJmd0O0NhY2hlIFN0b3JhZ2UmbHQ7L3N0cm9uZyZndDsgc2VjdGlvbi4gWW91IHdpbGwgc2VlIHRoZSBuYW1lZCBjYWNoZSB0aGF0IG91ciBzZXJ2aWNlIHdvcmtlciBqdXN0IGNyZWF0ZWQuJmx0Oy9wJmd0OwoKJmx0O2RpdiBzdHlsZT0mcXVvdDt0ZXh0LWFsaWduOmNlbnRlcjsgcGFkZGluZy1ib3R0b206MjBweCZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA2LWNhY2hlLnBuZyZxdW90OyAvJmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VG8gY29uZmlybSB0aGF0IHdlIG5vdyBoYXZlIG9mZmxpbmUgY2FwYWJpbGl0aWVzIGJ5IHZpcnR1ZSBvZiBvdXIgc2VydmljZSB3b3JrZXIsIHNodXQgZG93biB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aHR0cC1zZXJ2ZXImbHQ7L2NvZGUmZ3Q7IHNlcnZpY2Ugd2l0aCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdHJsICsgQyZsdDsvY29kZSZndDssIHRoZW4gcmVmcmVzaCB0aGUgYXBwbGljYXRpb24gaW4geW91ciBicm93c2VyLiBZb3Ugd291bGQgdXN1YWxseSBzZWUgdGhlIG9mZmxpbmUgcGFnZSBhdCB0aGlzIHBvaW50IGJlY2F1c2UgdGhlIGFwcGxpY2F0aW9uIGlzIG5vIGxvbmdlciBydW5uaW5nLCBidXQgd2l0aCB0aGUgbWFnaWMgdGhhdCBpcyBhIHNlcnZpY2Ugd29ya2VyLCB5b3UgY2FuIHN0aWxsIHNlZSB5b3VyIGFwcGxpY2F0aW9uIGhvbWUgcGFnZS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7QWRkaW5nIGEgbWFuaWZlc3QgZmlsZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtUbyBmaW5pc2ggb2ZmIG91ciBQV0EgY3JlYXRpb24gcHJvY2Vzcywgd2UgbmVlZCB0byBjcmVhdGUgYSBtYW5pZmVzdCBmaWxlIHRoYXQgd2lsbCBmYWNpbGl0YXRlIHRoZSAmbHQ7c3Ryb25nJmd0O0FkZCBUbyBIb21lIFNjcmVlbiZsdDsvc3Ryb25nJmd0OyBmZWF0dXJlIG9mIG91ciBhcHBsaWNhdGlvbi4gVGhpcyBkZWZpbmVzIGhvdyBvdXIgYXBwbGljYXRpb24gaXMgaW5zdGFsbGVkIG9uIHRoZSBkZXZpY2UgaW4gd2hpY2ggaXQgaXMgYmVpbmcgYnJvd3NlZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtDcmVhdGUgYSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDttYW5pZmVzdC5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGFuZCBwYXN0ZSB0aGUgZm9sbG93aW5nIGluIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ewogICZxdW90O25hbWUmcXVvdDs6ICZxdW90O015IFBXQSZxdW90OywKICAmcXVvdDtzaG9ydF9uYW1lJnF1b3Q7OiAmcXVvdDtNeSBQV0EmcXVvdDssCiAgJnF1b3Q7YmFja2dyb3VuZF9jb2xvciZxdW90OzogJnF1b3Q7I2ZmZmZmZiZxdW90OywKICAmcXVvdDtkaXNwbGF5JnF1b3Q7OiAmcXVvdDtzdGFuZGFsb25lJnF1b3Q7LAogICZxdW90O29yaWVudGF0aW9uJnF1b3Q7OiAmcXVvdDtwb3J0cmFpdCZxdW90OywKICAmcXVvdDtzY29wZSZxdW90OzogJnF1b3Q7L2luZGV4Lmh0bWwmcXVvdDssCiAgJnF1b3Q7c3RhcnRfdXJsJnF1b3Q7OiAmcXVvdDsvaW5kZXguaHRtbCZxdW90OywKICAmcXVvdDtpY29ucyZxdW90OzogWwogICAgewogICAgICAmcXVvdDtzcmMmcXVvdDs6ICZxdW90O2ljb25zL2ljb24tMTI4eDEyOC5wbmcmcXVvdDssCiAgICAgICZxdW90O3NpemVzJnF1b3Q7OiAmcXVvdDsxMjh4MTI4JnF1b3Q7LAogICAgICAmcXVvdDt0eXBlJnF1b3Q7OiAmcXVvdDtpbWFnZS9wbmcmcXVvdDsKICAgIH0sCiAgICB7CiAgICAgICZxdW90O3NyYyZxdW90OzogJnF1b3Q7aWNvbnMvaWNvbi0xNDR4MTQ0LnBuZyZxdW90OywKICAgICAgJnF1b3Q7c2l6ZXMmcXVvdDs6ICZxdW90OzE0NHgxNDQmcXVvdDssCiAgICAgICZxdW90O3R5cGUmcXVvdDs6ICZxdW90O2ltYWdlL3BuZyZxdW90OwogICAgfSwKICAgIHsKICAgICAgJnF1b3Q7c3JjJnF1b3Q7OiAmcXVvdDtpY29ucy9pY29uLTE1MngxNTIucG5nJnF1b3Q7LAogICAgICAmcXVvdDtzaXplcyZxdW90OzogJnF1b3Q7MTUyeDE1MiZxdW90OywKICAgICAgJnF1b3Q7dHlwZSZxdW90OzogJnF1b3Q7aW1hZ2UvcG5nJnF1b3Q7CiAgICB9LAogICAgewogICAgICAmcXVvdDtzcmMmcXVvdDs6ICZxdW90O2ljb25zL2ljb24tMTkyeDE5Mi5wbmcmcXVvdDssCiAgICAgICZxdW90O3NpemVzJnF1b3Q7OiAmcXVvdDsxOTJ4MTkyJnF1b3Q7LAogICAgICAmcXVvdDt0eXBlJnF1b3Q7OiAmcXVvdDtpbWFnZS9wbmcmcXVvdDsKICAgIH0sCiAgICB7CiAgICAgICZxdW90O3NyYyZxdW90OzogJnF1b3Q7aWNvbnMvaWNvbi01MTJ4NTEyLnBuZyZxdW90OywKICAgICAgJnF1b3Q7c2l6ZXMmcXVvdDs6ICZxdW90OzUxMng1MTImcXVvdDssCiAgICAgICZxdW90O3R5cGUmcXVvdDs6ICZxdW90O2ltYWdlL3BuZyZxdW90OwogICAgfQogIF0KfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtZb3UgY2FuIGdlbmVyYXRlIGljb25zIGZvciB5b3VyIFBXQXMgYW5kIGFsc28gZ2VuZXJhdGUgYSBtYW5pZmVzdCBmaWxlICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9hcHAtbWFuaWZlc3QuZmlyZWJhc2VhcHAuY29tLyZxdW90OyZndDtoZXJlJmx0Oy9hJmd0Oy4gSW4gdGhlIGFib3ZlIGZpbGUsIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtuYW1lJmx0Oy9jb2RlJmd0OyBvZiB0aGUgYXBwbGljYXRpb24sIHRoZSBwcmVmZXJyZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7b3JpZW50YXRpb24mbHQ7L2NvZGUmZ3Q7LCBhbmQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2JhY2tncm91bmRfY29sb3ImbHQ7L2NvZGUmZ3Q7IGZvciB0aGUgc3BsYXNoIHNjcmVlbiBhcmUgZGVmaW5lZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O05vdGUmbHQ7L3N0cm9uZyZndDs6ICZsdDtpJmd0O0l0IGlzIGEgYmVzdCBwcmFjdGljZSB0byBhZGQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Nob3J0X25hbWUmbHQ7L2NvZGUmZ3Q7LCBhbiBvcHRpb25hbCBmaWVsZCB0aGF0IHNwZWNpZmllcyB0aGUgbmFtZSB0aGF0IHdpbGwgYmUgZGlzcGxheWVkIGluIHRoZSBhcHAgbGF1bmNoZXIgb3IgYSBuZXcgdGFiIHBhZ2UuIE90aGVyd2lzZSwgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25hbWUmbHQ7L2NvZGUmZ3Q7IHdpbGwgYmUgdXNlZCwgYW5kIGl0IHdpbGwgYmUgdHJ1bmNhdGVkIGlmIGl0IGlzIG1vcmUgdGhhbiAxMiBjaGFyYWN0ZXJzIGxvbmcuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoaXMgaXMgYSB2ZXJ5IHNpbXBsZSwgbGVhbiBhcHAsIHNvIEkgaGF2ZSBpZ25vcmVkIGZlYXR1cmVzIGxpa2UgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGhlbWVfY29sb3ImbHQ7L2NvZGUmZ3Q7LCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcGxhc2hfcGFnZXMmbHQ7L2NvZGUmZ3Q7LCBzb21lIHN0YW5kYXJkIGljb24gc2l6ZXMsIGFuZCBpT1MgaWNvbiBzdXBwb3J0LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBhcHBsaWNhdGlvbiBob21lIHBhZ2UgaXMgc2V0IGF0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy9pbmRleC5odG1sJmx0Oy9jb2RlJmd0OywgYW5kIHRoZSBpbnN0YWxsYXRpb24gaWNvbiBzaXplcyBmb3IgZGlmZmVyZW50IGRldmljZXMgYXJlIGRlZmluZWQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ljb25zJmx0Oy9jb2RlJmd0OyBwcm9wZXJ0eS4gSSBoYXZlIGFsc28gbW92ZWQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ljb25zJmx0Oy9jb2RlJmd0OyBkaXJlY3RvcnkgY29udGFpbmluZyBhbGwgbXkgaWNvbnMgdG8gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QuIE5vdyB3ZSBoYXZlIGFsbCB3ZSBuZWVkIGZvciBvdXIgYXBwbGljYXRpb24gdG8gZnVuY3Rpb24gYXMgYSBQV0EuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gY29uZmlybSB0aGlzLCBsZXTigJlzIHJ1biBhICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2ViL3Rvb2xzL2xpZ2h0aG91c2UmcXVvdDsmZ3Q7TGlnaHRob3VzZSZsdDsvYSZndDsgdGVzdCBpbiBDaHJvbWUgZGV2ZWxvcGVyIHRvb2xzLiBHbyB0byB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7QXVkaXRzJmx0Oy9jb2RlJmd0OyB0YWIgaW4gQ2hyb21lIGRldmVsb3BlciB0b29scy4gWW91IHdpbGwgc2VlIHRoZSBzY3JlZW4gYmVsb3cuIFRoZXJlIG1heSBiZSBzbGlnaHQgdmFyaWF0aW9ucyBkdWUgdG8geW91ciBDaHJvbWUgdmVyc2lvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA2LWxpZ2h0aG91c2UxLnBuZyZxdW90OyBhbHQ9JnF1b3Q7TGlnaHRob3VzZSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O05vdyBjbGljayAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtHZW5lcmF0ZSBSZXBvcnQmbHQ7L2NvZGUmZ3Q7IHRvIGdlbmVyYXRlIGFuIGF1ZGl0IHJlcG9ydCBmb3Igb3VyIFBXQS4gUmVzdWx0cyBzaW1pbGFyIHRvIHRoZSBzY3JlZW5zaG90IGJlbG93IHdpbGwgYmUgZGlzcGxheWVkLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDYtbGlnaHRob3VzZTIucG5nJnF1b3Q7IGFsdD0mcXVvdDtMaWdodGhvdXNlIFJlcG9ydCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrIG9uIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQV0EmbHQ7L2NvZGUmZ3Q7IGljb24gb24gdGhlIGZhciByaWdodCB0byBqdW1wIHRvIHRoZSByZXN1bHRzIGZvciB0aGUgUFdBIGNvbXBhdGliaWxpdHkgdGVzdC4gWW91IHdpbGwgc2VlIGEgc2NyZWVuIHNpbWlsYXIgdG8gdGhlIG9uZSBiZWxvdy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA2LWxpZ2h0aG91c2UzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7TGlnaHRob3VzZSBSZXBvcnQmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O05vdGUmbHQ7L3N0cm9uZyZndDs6ICZsdDtpJmd0O1RoZSBmYWlsaW5nIGNoZWNrLCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtEb2VzIG5vdCByZWRpcmVjdCBIVFRQIHRyYWZmaWMgdG8gSFRUUFMmbHQ7L2NvZGUmZ3Q7LCB3aWxsIHBhc3Mgd2hlbiB5b3UgZGVwbG95IHlvdXIgc2l0ZSBhbmQgZW5hYmxlIEhUVFBTLiZsdDsvaSZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtJZiB5b3Ugd2FudCB0byBsZWFybiBtb3JlIGFib3V0IGdldHRpbmcgYSBjbGVhbiBidWlsZCwgY2hlY2sgb3V0IHRoZXNlIGxpbmtzOiZsdDsvcCZndDsKCiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3dlYi5kZXYvdGhlbWVkLW9tbmlib3gvJnF1b3Q7Jmd0O2h0dHBzOi8vd2ViLmRldi90aGVtZWQtb21uaWJveC8mbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3dlYi5kZXYvcHdhLWNoZWNrbGlzdC8mcXVvdDsmZ3Q7aHR0cHM6Ly93ZWIuZGV2L3B3YS1jaGVja2xpc3QvJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93ZWIuZGV2L2FwcGxlLXRvdWNoLWljb24vJnF1b3Q7Jmd0O2h0dHBzOi8vd2ViLmRldi9hcHBsZS10b3VjaC1pY29uLyZsdDsvYSZndDsmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd2ViLmRldi9yZWRpcmVjdHMtaHR0cCZxdW90OyZndDtodHRwczovL3dlYi5kZXYvcmVkaXJlY3RzLWh0dHAmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMiZndDtBZGRpbmcgdGVzdHMmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VG8gYmVnaW4gYWRkaW5nIHRlc3RzIHRvIG91ciBhcHBsaWNhdGlvbiwgbGV04oCZcyBxdWlja2x5IHNjYWZmb2xkIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cGFja2FnZS5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlIGZvciB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3d3dy5ucG1qcy5jb20vJnF1b3Q7Jmd0O25wbSZsdDsvYSZndDsgcGFja2FnZXMgdGhhdCB3ZSB3aWxsIGJlIGluc3RhbGxpbmcuIFJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgd2hpY2ggd2lsbCBza2lwIGFsbCB0aGUgUS9BIHByb2Nlc3MgZm9yIGNyZWF0aW5nIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cGFja2FnZS5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlIGFuZCBqdXN0IGR1bXBzIGEgYmFzaWMgb25lIGF0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O25wbSBpbml0IC15CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RvIHNldCB1cCB0ZXN0cyBpbiB0aGUgYXBwbGljYXRpb24sIHdlIHdpbGwgbmVlZCB0byBpbnN0YWxsIHRoZSBmb2xsb3dpbmcgcGFja2FnZXM6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2pzZG9tJnF1b3Q7Jmd0O0pTRE9NJmx0Oy9hJmd0OzogVG8gc2ltdWxhdGUgdGhlIGJyb3dzZXIgRE9NJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vdGVzdGluZy1saWJyYXJ5L2RvbS10ZXN0aW5nLWxpYnJhcnkmcXVvdDsmZ3Q7RE9NIFRlc3RpbmcgTGlicmFyeSZsdDsvYSZndDs6IFN0YW5kYXJkIGxpYnJhcnkgZm9yIERPTSB0ZXN0aW5nJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2plc3Rqcy5pby8mcXVvdDsmZ3Q7SmVzdCZsdDsvYSZndDs6IE91ciB0ZXN0IHJ1bm5lciZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL3Rlc3RpbmctbGlicmFyeS9qZXN0LWRvbSZxdW90OyZndDtKZXN0IERPTSZsdDsvYSZndDs6IEplc3QgcGx1Z2luIGZvciBydW5uaW5nIERPTSB0ZXN0cyZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtJbnN0YWxsIGFsbCB0aGVzZSBwYWNrYWdlcyBhdCBvbmNlIHdpdGggdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwgLS1zYXZlLWRldiBAdGVzdGluZy1saWJyYXJ5L2RvbSBAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tIGpzZG9tIGplc3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7T25jZSB0aGVzZSBhcmUgaW5zdGFsbGVkLCBjcmVhdGUgYSB0ZXN0IGZpbGUgbmFtZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aW5kZXgudGVzdC5qcyZsdDsvY29kZSZndDsgaW4gdGhlIHJvb3QgZm9sZGVyIG9mIHRoZSBhcHBsaWNhdGlvbiBhbmQgcGFzdGUgdGhlIGZvbGxvd2luZyBjb2RlIGluIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Ly8gLi9pbmRleC50ZXN0LmpzCgpjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVxdWlyZSgmcXVvdDtAdGVzdGluZy1saWJyYXJ5L2RvbSZxdW90Oyk7CnJlcXVpcmUoJnF1b3Q7QHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbS9leHRlbmQtZXhwZWN0JnF1b3Q7KTsKY29uc3QgeyBKU0RPTSB9ID0gcmVxdWlyZSgmcXVvdDtqc2RvbSZxdW90Oyk7CmNvbnN0IGZzID0gcmVxdWlyZSgmcXVvdDtmcyZxdW90Oyk7CmNvbnN0IHBhdGggPSByZXF1aXJlKCZxdW90O3BhdGgmcXVvdDspOwoKY29uc3QgaHRtbCA9IGZzLnJlYWRGaWxlU3luYyhwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAmcXVvdDsuL2luZGV4Lmh0bWwmcXVvdDspLCAmcXVvdDt1dGY4JnF1b3Q7KTsKCmxldCBkb207CmxldCBjb250YWluZXI7CgpkZXNjcmliZSgmcXVvdDtUZXN0IGZvciBlbGVtZW50cyBvbiBIb21lIHBhZ2UmcXVvdDssICgpID0mYW1wO2d0OyB7CiAgYmVmb3JlRWFjaCgoKSA9JmFtcDtndDsgewogICAgZG9tID0gbmV3IEpTRE9NKGh0bWwsIHsgcnVuU2NyaXB0czogJnF1b3Q7ZGFuZ2Vyb3VzbHkmcXVvdDsgfSk7CiAgICBjb250YWluZXIgPSBkb20ud2luZG93LmRvY3VtZW50LmJvZHk7CiAgfSk7CgogIGl0KCZxdW90O1BhZ2UgcmVuZGVycyBhIGhlYWRpbmcgZWxlbWVudCZxdW90OywgKCkgPSZhbXA7Z3Q7IHsKICAgIGV4cGVjdChjb250YWluZXIucXVlcnlTZWxlY3RvcigmcXVvdDtoMiZxdW90OykpLm5vdC50b0JlTnVsbCgpOwogICAgZXhwZWN0KAogICAgICBnZXRCeVRleHQoY29udGFpbmVyLCAmcXVvdDtXZWxjb21lIHRvIG15IHByb2dyZXNzaXZlIHdlYiBhcHBsaWNhdGlvbi4mcXVvdDspCiAgICApLnRvQmVJblRoZURvY3VtZW50KCk7CiAgfSk7Cn0pOwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJbiB0aGUgYWJvdmUgZmlsZSwgd2Ugc3RhcnQgYnkgZmV0Y2hpbmcgYWxsIHRoZSBuZWNlc3NhcnkgZGVwZW5kZW5jaWVzLiBXZSB0aGVuIGxvYWQgaW4gb3VyIEhUTUwgZmlsZSBhbmQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2JlZm9yZUVhY2gmbHQ7L2NvZGUmZ3Q7IG1ldGhvZCBpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZGVzY3JpYmUmbHQ7L2NvZGUmZ3Q7IGJsb2NrLCB3ZSBjcmVhdGUgb3VyIERPTSB3aXRoICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0pTRE9NJmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtXZSB0aGVuIHJ1biBhIHRlc3QgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2l0Jmx0Oy9jb2RlJmd0OyBibG9jayB0byBjaGVjayBmb3IgdGhlIG9jY3VycmVuY2Ugb2Ygb3VyIGhlYWRlciBlbGVtZW50IHRleHQgdGhhdCByZWFkcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtXZWxjb21lIHRvIG15IHByb2dyZXNzaXZlIHdlYiBhcHBsaWNhdGlvbi4mbHQ7L2NvZGUmZ3Q7IG9uIHRoZSBwYWdlLiZsdDsvcCZndDsKCiZsdDtwJmd0O0xldOKAmXMgc2V0IHVwIG91ciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0ZXN0Jmx0Oy9jb2RlJmd0OyBzY3JpcHQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3BhY2thZ2UuanNvbiZsdDsvY29kZSZndDsgZmlsZS4gRWRpdCB0aGUgZXhpc3RpbmcgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGVzdCZsdDsvY29kZSZndDsga2V5LXZhbHVlIHBhaXIgd2l0aCB3aGF0IGlzIHNob3duIGJlbG93OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Li4uCiZxdW90O3NjcmlwdHMmcXVvdDs6IHsKICAgICZxdW90O3Rlc3QmcXVvdDs6ICZxdW90O2plc3QmcXVvdDsKfSwKLi4uCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O05vdyBydW4gdGhlIHRlc3QgZmlsZSB3aXRoIHRoZSBmb2xsb3dpbmcgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O25wbSBydW4gdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtPdXIgdGVzdHMgd2lsbCBhbGwgcGFzcy4gTm93IHdlIGNhbiBzdGFydCBidWlsZGluZyBvdXIgQ0kgcGlwZWxpbmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wNi1sb2NhbC10ZXN0LXJ1bi5wbmcmcXVvdDsgYWx0PSZxdW90O0xvY2FsIFRlc3RzIFJ1biZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtCdWlsZGluZyB0aGUgQ0kgcGlwZWxpbmUmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7SW4gb3JkZXIgdG8gY3JlYXRlIGEgQ0kgcGlwZWxpbmUgZm9yIG91ciBhcHBsaWNhdGlvbiwgd2Ugd2lsbCBuZWVkIHRvIHRha2UgdGhlIGZvbGxvd2luZyBzdGVwczombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O1B1c2ggdGhlIHByb2plY3QgdG8gYSByZW1vdGUgcmVwb3NpdG9yeSAoJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vJnF1b3Q7Jmd0O0dpdEh1YiZsdDsvYSZndDsgaW4gdGhpcyBjYXNlKSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0FkZCB0aGUgcmVwb3NpdG9yeSBhcyBhIHByb2plY3Qgb24gQ2lyY2xlQ0kmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBZGQgYSBwaXBlbGluZSBjb25maWd1cmF0aW9uIHNjcmlwdCB0byBvdXIgYXBwbGljYXRpb24mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtSdW4gdGhlIHBpcGVsaW5lIGJ5IHB1c2hpbmcgb3VyIGFwcGxpY2F0aW9uIGNoYW5nZXMgdG8gb3VyIHJlcG9zaXRvcnkmbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7TGV04oCZcyBiZWdpbiBieSBwdXNoaW5nIHRoZSBwcm9qZWN0IHRvIGEgR2l0SHViIHJlcG9zaXRvcnkgY29ubmVjdGVkIHRvIHlvdXIgQ2lyY2xlQ0kgYWNjb3VudC4gTWFrZSBzdXJlIHRvIGFkZCBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy5naXRpZ25vcmUmbHQ7L2NvZGUmZ3Q7IGZpbGUgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25vZGVfbW9kdWxlcyZsdDsvY29kZSZndDsgZm9sZGVyLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBuZXh0IHN0ZXAgaXMgdG8gc2V0IHVwIHRoZSByZXBvc2l0b3J5IGZvciBvdXIgcHJvamVjdCBhcyBhIENpcmNsZUNJIHByb2plY3QuIE9uIHRoZSBDaXJjbGVDSSBjb25zb2xlLCBnbyB0byB0aGUgJmx0O3N0cm9uZyZndDtBZGQgUHJvamVjdHMmbHQ7L3N0cm9uZyZndDsgcGFnZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA2LWFkZC1wcm9qZWN0LnBuZyZxdW90OyBhbHQ9JnF1b3Q7QWRkIFByb2plY3QmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayAmbHQ7c3Ryb25nJmd0O1NldCBVcCBQcm9qZWN0Jmx0Oy9zdHJvbmcmZ3Q7IHRvIGJlZ2luLiBUaGlzIHdpbGwgbG9hZCB0aGUgbmV4dCBzY3JlZW4uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wNi1zdGFydC1idWlsZGluZzEucG5nJnF1b3Q7IGFsdD0mcXVvdDtTdGFydCBCdWlsZGluZyAtIENvbmZpZyBzYW1wbGUmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtPbiB0aGUgc2V0dXAgcGFnZSwgY2xpY2sgJmx0O3N0cm9uZyZndDtTdGFydCBCdWlsZGluZyZsdDsvc3Ryb25nJmd0Oy4gQmVmb3JlIHRoZSBidWlsZCBzdGFydHMsIHlvdSB3aWxsIGdldCBhIHByb21wdCB0byBlaXRoZXIgZG93bmxvYWQgYW5kIHVzZSB0aGUgcHJvdmlkZWQgQ2lyY2xlQ0kgY29uZmlndXJhdGlvbiBmaWxlIGFuZCBoYXZlIGl0IG9uIGEgc2VwYXJhdGUgYnJhbmNoIG9yIHRvIHNldCBvbmUgdXAgbWFudWFsbHkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wNi1zdGFydC1idWlsZGluZzIucG5nJnF1b3Q7IGFsdD0mcXVvdDtTdGFydCBCdWlsZGluZyAtIEFkZCBtYW51YWxseSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1NlbGVjdCAmbHQ7c3Ryb25nJmd0O0FkZCBNYW51YWxseSZsdDsvc3Ryb25nJmd0OyB0byBwcm9jZWVkLiBUaGlzIHdpbGwgcHJvbXB0IGFub3RoZXIgZGlhbG9nIHRoYXQgY2hlY2tzIHRvIGNvbmZpcm0gdGhhdCB5b3UgaGF2ZSBhIGNvbmZpZ3VyYXRpb24gZmlsZSBzZXQgdXAgdG8gYmVnaW4gYnVpbGRpbmcuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wNi1zdGFydC1idWlsZGluZzMucG5nJnF1b3Q7IGFsdD0mcXVvdDtTdGFydCBCdWlsZGluZyAtIENvbmZpcm0gY29uZmlndXJhdGlvbiZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsgdG8gY29tcGxldGUgdGhlIHNldHVwLiBUaGlzIHdpbGwgaW1tZWRpYXRlbHkgdHJpZ2dlciB0aGUgcGlwZWxpbmUgdXNpbmcgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZSBpbiBvdXIgcHJvamVjdC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgYnVpbGQgYXQgdGhpcyBwb2ludCB3aWxsIGZhaWwgYmVjYXVzZSB3ZSBoYXZlIG5vdCB5ZXQgYWRkZWQgb3VyIHBpcGVsaW5lIGNvbmZpZ3VyYXRpb24gZmlsZS4gTGV04oCZcyBkbyB0aGF0IG5leHQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QXQgdGhlIHJvb3Qgb2YgeW91ciBwcm9qZWN0LCBjcmVhdGUgYSBmb2xkZXIgbmFtZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LmNpcmNsZWNpJmx0Oy9jb2RlJmd0OyBhbmQgYSBmaWxlIHdpdGhpbiBpdCBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0Oy4gSW5zaWRlIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OyBmaWxlLCBlbnRlciB0aGUgZm9sbG93aW5nIGNvZGU6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDt2ZXJzaW9uOiAyLjEKam9iczoKICBidWlsZDoKICAgIHdvcmtpbmdfZGlyZWN0b3J5OiB+L3JlcG8KICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvbm9kZToxMC4xNi4zCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IFVwZGF0ZSBOUE0KICAgICAgICAgIGNvbW1hbmQ6ICZxdW90O3N1ZG8gbnBtIGluc3RhbGwgLWcgbnBtQDUmcXVvdDsKICAgICAgLSByZXN0b3JlX2NhY2hlOgogICAgICAgICAga2V5OiBkZXBlbmRlbmN5LWNhY2hlLXt7IGNoZWNrc3VtICZxdW90O3BhY2thZ2UtbG9jay5qc29uJnF1b3Q7IH19CiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogSW5zdGFsbCBEZXBlbmRlbmNpZXMKICAgICAgICAgIGNvbW1hbmQ6IG5wbSBpbnN0YWxsCiAgICAgIC0gc2F2ZV9jYWNoZToKICAgICAgICAgIGtleTogZGVwZW5kZW5jeS1jYWNoZS17eyBjaGVja3N1bSAmcXVvdDtwYWNrYWdlLWxvY2suanNvbiZxdW90OyB9fQogICAgICAgICAgcGF0aHM6CiAgICAgICAgICAgIC0gLi9ub2RlX21vZHVsZXMKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiBSdW4gdGVzdHMKICAgICAgICAgIGNvbW1hbmQ6IG5wbSBydW4gdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJbiB0aGUgZmlsZSBhYm92ZSwgd2UgYmVnaW4gY2hlY2tpbmcgb3V0IHRoZSBhcHBsaWNhdGlvbiBmcm9tIHRoZSByZXBvc2l0b3J5IGFuZCB1cGRhdGluZyB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bnBtJmx0Oy9jb2RlJmd0OyB2ZXJzaW9uIGZvciBvdXIgTm9kZS5qcyBlbnZpcm9ubWVudC4gVGhlbiB3ZSBpbnN0YWxsIG91ciBkZXBlbmRlbmNpZXMgYW5kIGNhY2hlIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtub2RlX21vZHVsZXMmbHQ7L2NvZGUmZ3Q7IGZvbGRlci4gRmluYWxseSwgd2UgcnVuIG91ciB0ZXN0cy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtDb21taXQgeW91ciBjaGFuZ2VzLCBhbmQgcHVzaCB0aGVzZSBjaGFuZ2VzIHRvIHRoZSBHaXRIdWIgcmVwb3NpdG9yeS4gVGhpcyB3aWxsIHRyaWdnZXIgdGhlIENJIHBpcGVsaW5lIHRvIHJ1biB0aGUgYnVpbGQgcHJvY2VzcyB3aGljaCBjYW4gYmUgdmlld2VkIG9uIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQaXBlbGluZXMmbHQ7L2NvZGUmZ3Q7IHBhZ2Ugb2YgeW91ciBDaXJjbGVDSSBhY2NvdW50LiBZb3Ugd2lsbCBub3cgaGF2ZSBhIHN1Y2Nlc3NmdWwgYnVpbGQgYXMgc2hvd24gYmVsb3cuJmx0Oy9wJmd0OwoKJmx0O2RpdiBzdHlsZT0mcXVvdDt0ZXh0LWFsaWduOmNlbnRlcjsgcGFkZGluZy1ib3R0b206MjBweCZxdW90OyZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA2LWJ1aWxkLXN1Y2Nlc3MucG5nJnF1b3Q7IC8mZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtDbGljayB0aGUgYnVpbGQgcHJvY2VzcyB0byB2aWV3IHRoZSBiZWhpbmQtdGhlLXNjZW5lcyBvZiB0aGUgQ0kgcGlwZWxpbmUgaW4gb3BlcmF0aW9uLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDYtdGVzdHMtcGFzc2VkLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgQnVpbGRpbmcgLSBDb25maXJtIGNvbmZpZ3VyYXRpb24mcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtBbGwgc3RlcHMgcmFuIGZpbmUgYW5kIG91ciB0ZXN0cyBwYXNzZWQgc3VjY2Vzc2Z1bGx5LiBOb3cgeW91IGhhdmUgZXZlcnl0aGluZyBzZXQgdXAgZm9yIENJIGFuZCBhbGwgeW91IG5lZWQgdG8gZG8gaXMgcHVzaCB5b3VyIGNvZGUgY2hhbmdlcyB0byB5b3VyIHJlcG9zaXRvcnkgYW5kIHRoZSBDSSBwaXBlbGluZSB3aWxsIGF1dG9tYXRpY2FsbHkgYnVpbGQgYW5kIHRlc3QgeW91ciBhcHAuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NvbmNsdXNpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7SW4gdGhpcyBhcnRpY2xlLCB3ZSBzdWNjZXNzZnVsbHkgYnVpbHQgYSBQV0EgYW5kIHNldCB1cCBhIENJIHBpcGVsaW5lIGZvciB0ZXN0IGF1dG9tYXRpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SGFwcHkgQ29kaW5nISZsdDsvcCZndDsKCiZsdDtociAvJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL2NvZGVyb25mbGVlaz9sYW5nPWVuJnF1b3Q7Jmd0O0Zpa2F5byZsdDsvYSZndDsgaXMgYSBmdWxsc3RhY2sgZGV2ZWxvcGVyIGFuZCBhdXRob3Igd2l0aCBvdmVyIGEgZGVjYWRlIG9mIGV4cGVyaWVuY2UgZGV2ZWxvcGluZyB3ZWIgYW5kIG1vYmlsZSBzb2x1dGlvbnMuIEhlIGlzIGN1cnJlbnRseSB0aGUgU29mdHdhcmUgTGVhZCBhdCBUZWNoIFNwZWNpYWxpc3QgQ29uc3VsdGluZyBhbmQgZGV2ZWxvcHMgY291cnNlcyBmb3IgUGFja3QgYW5kIFVkZW15LiBIZSBoYXMgYSBzdHJvbmcgcGFzc2lvbiBmb3IgdGVhY2hpbmcgYW5kIGhvcGVzIHRvIGJlY29tZSBhIGZ1bGwtdGltZSBhdXRob3IuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5HZXR0aW5nIHN0YXJ0ZWQgd2l0aCBjb250aW51b3VzIGludGVncmF0aW9uIGZvciBOZXN0LmpzIEFQSXM8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvZ2V0dGluZy1zdGFydGVkLXdpdGgtbmVzdGpzLWFuZC1hdXRvbWF0aWMtdGVzdGluZy88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+VHVlLCAyMyBKdW4gMjAyMCAxMjowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9nZXR0aW5nLXN0YXJ0ZWQtd2l0aC1uZXN0anMtYW5kLWF1dG9tYXRpYy10ZXN0aW5nLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPk9sdXN1c2kgT2x1eWVtaTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDtJIGJlbGlldmUgdGhhdCBvbmUgb2YgdGhlIHJlYXNvbnMgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL25lc3Rqcy5jb20vJnF1b3Q7Jmd0O05lc3QuanMmbHQ7L2EmZ3Q7IHdhcyBjcmVhdGVkIHdhcyB0byBwcm92aWRlIGEgbWF0dXJlIGFuZCBzdHJ1Y3R1cmFsIGRlc2lnbiBwYXR0ZXJuIHRvIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vbm9kZWpzLm9yZy8mcXVvdDsmZ3Q7Tm9kZS5qcyZsdDsvYSZndDsgZGV2ZWxvcG1lbnQgd29ybGQuICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9uZXN0anMuY29tLyZxdW90OyZndDtOZXN0LmpzJmx0Oy9hJmd0OyBpcyBhIHNjYWxhYmxlIGFuZCBlZmZpY2llbnQgc2VydmVyLXNpZGUgTm9kZS5qcyBmcmFtZXdvcmsgYnVpbHQgd2l0aCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd3d3LnR5cGVzY3JpcHRsYW5nLm9yZy8mcXVvdDsmZ3Q7VHlwZVNjcmlwdCZsdDsvYSZndDsuIEl0IHdhcyBoZWF2aWx5IGluc3BpcmVkIGJ5ICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9hbmd1bGFyLmlvLyZxdW90OyZndDtBbmd1bGFyLmpzJmx0Oy9hJmd0OyBhbmQgdXNlcyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZXhwcmVzc2pzLmNvbS8mcXVvdDsmZ3Q7RXhwcmVzcy5qcyZsdDsvYSZndDsgdW5kZXIgdGhlIGhvb2QsIHdoaWNoIGV4cGxhaW5zIGl0cyBjb21wYXRpYmlsaXR5IHdpdGggdGhlIG1ham9yaXR5IG9mIHRoZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZXhwcmVzc2pzLmNvbS8mcXVvdDsmZ3Q7RXhwcmVzcy5qcyZsdDsvYSZndDsgbWlkZGxld2FyZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHBvc3QsIHdlIHdpbGwgYnVpbGQgYSBSRVNUZnVsIEFQSSB3aXRoICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9uZXN0anMuY29tLyZxdW90OyZndDtOZXN0LmpzJmx0Oy9hJmd0Oy4gSW4gdGhlIHByb2Nlc3MsIHlvdSB3aWxsIGdldCBjb252ZXJzYW50IHdpdGggaXRzIGZ1bmRhbWVudGFsIHByaW5jaXBsZXMgYW5kIGJ1aWxkaW5nIGJsb2Nrcy4gWW91IHdpbGwgYWxzbyBsZWFybiB0aGUgcmVjb21tZW5kZWQgYXBwcm9hY2ggdG8gd3JpdGluZyB0ZXN0cyBmb3IgZWFjaCBBUEkgZW5kcG9pbnQuIEZpbmFsbHksIHlvdSB3aWxsIGJlIGFibGUgdG8gYXV0b21hdGUgdGhlIHRlc3RpbmcgcHJvY2VzcyB1c2luZyBDaXJjbGVDSS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7UHJlcmVxdWlzaXRlcyZsdDsvaDImZ3Q7CgombHQ7cCZndDtUaGUgZm9sbG93aW5nIGFyZSByZXF1aXJlZCBmb3IgeW91IHRvIGdldCB0aGUgbW9zdCBvdXQgb2YgdGhpcyB0dXRvcmlhbDombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9ub2RlanMub3JnLyZxdW90OyZndDtOb2RlLmpzJmx0Oy9hJmd0OyBpbnN0YWxsZWQgb24geW91ciBjb21wdXRlciZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8mcXVvdDsmZ3Q7TXlTUUwmbHQ7L2EmZ3Q7IGluc3RhbGxlZCBvbiB5b3VyIGNvbXB1dGVyJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vbmVzdGpzL25lc3QtY2xpJnF1b3Q7Jmd0O05lc3QgQ0xJJmx0Oy9hJmd0OyBpbnN0YWxsZWQgb24geW91ciBjb21wdXRlciZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vam9pbiZxdW90OyZndDtHaXRIdWImbHQ7L2EmZ3Q7IGFjY291bnQmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vc2lnbnVwLyZxdW90OyZndDtDaXJjbGVDSSBhY2NvdW50Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0FsdGhvdWdoIG5vdCBtYW5kYXRvcnksIHlvdSBzaG91bGQga25vdyBhIGZldyB0aGluZ3MgYWJvdXQgVHlwZVNjcmlwdC4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O2gyJmd0O0dldHRpbmcgc3RhcnRlZCZsdDsvaDImZ3Q7CgombHQ7cCZndDtUaGUgUkVTVGZ1bCBBUEkgdGhhdCB3ZSB3aWxsIGJ1aWxkIGluIHRoaXMgcG9zdCB3aWxsIHByb3Zpc2lvbiBlbmRwb2ludHMgdG8gY3JlYXRlIGEgcHJvZHVjdCB3aXRoIGEgbmFtZSwgZGVzY3JpcHRpb24sIGFuZCBwcmljZS4gV2Ugd2lsbCBiZSBhYmxlIHRvIGVkaXQsIGRlbGV0ZSwgYW5kIHJldHJpZXZlIGEgc2luZ2xlIHByb2R1Y3QsIGFzIHdlbGwgYXMgYmUgYWJsZSB0byByZXRyaWV2ZSB0aGUgZW50aXJlIGxpc3Qgb2YgcHJvZHVjdHMgc2F2ZWQgaW4gdGhlIGRhdGFiYXNlLiBUaGlzIHR1dG9yaWFsIHdpbGwgYWxzbyBtYWtlIHVzZSBvZiBNeVNRTCBhcyB0aGUgcHJlZmVycmVkIHJlbGF0aW9uYWwgZGF0YWJhc2UgY2hvaWNlIGFuZCBjb21iaW5lIGl0IHdpdGggJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vdHlwZW9ybS90eXBlb3JtJnF1b3Q7Jmd0O1R5cGVPUk0mbHQ7L2EmZ3Q7LiBIb3dldmVyLCBOZXN0LmpzIGlzIGRhdGFiYXNlIGFnbm9zdGljLCBzbyB5b3UgY2FuIGNob29zZSB0byB3b3JrIHdpdGggYW55IGRhdGFiYXNlLiBZb3UgY2FuIGZpbmQgbW9yZSBkZXRhaWxzIGFib3V0IGRhdGFiYXNlcyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZG9jcy5uZXN0anMuY29tL3RlY2huaXF1ZXMvZGF0YWJhc2UmcXVvdDsmZ3Q7aGVyZSZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O1NjYWZmb2xkaW5nIHRoZSBOZXN0LmpzIGFwcGxpY2F0aW9uJmx0Oy9oMyZndDsKCiZsdDtwJmd0O1J1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgdG8gY3JlYXRlIGEgbmV3IGFwcGxpY2F0aW9uOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bmVzdCBuZXcgbmVzdC1zdGFydGVyLXRlc3RpbmcKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7QWZ0ZXIgcnVubmluZyB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bmVzdCZsdDsvY29kZSZndDsgY29tbWFuZCwgeW91IHdpbGwgYmUgcHJvbXB0ZWQgdG8gY2hvb3NlIGEgcGFja2FnZSBtYW5hZ2VyIHRvIHVzZS4gU2VsZWN0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25wbSZsdDsvY29kZSZndDsgYW5kIGhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFTlRFUiZsdDsvY29kZSZndDsgb24geW91ciBrZXlib2FyZCB0byBzdGFydCBpbnN0YWxsaW5nIE5lc3QuanMuIFRoaXMgd2lsbCBjcmVhdGUgYSBuZXcgcHJvamVjdCBpbiBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25lc3Qtc3RhcnRlci10ZXN0aW5nJmx0Oy9jb2RlJmd0OyBmb2xkZXIgYW5kIGluc3RhbGwgYWxsIG9mIGl0cyByZXF1aXJlZCBkZXBlbmRlbmNpZXMuIEJlZm9yZSBydW5uaW5nIHRoZSBhcHBsaWNhdGlvbiwgdXNlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25wbSZsdDsvY29kZSZndDsgdG8gaW5zdGFsbCBhICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvY2xhc3MtdmFsaWRhdG9yJnF1b3Q7Jmd0O3ZhbGlkYXRpb24gbGlicmFyeSZsdDsvYSZndDsgdGhhdCB5b3Ugd2lsbCB1c2UgbGF0ZXIgaW4gdGhlIHR1dG9yaWFsOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwgY2xhc3MtdmFsaWRhdG9yIC0tc2F2ZQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtNb3ZlIGludG8gdGhlIGFwcGxpY2F0aW9uIGZvbGRlciBhbmQgc3RhcnQgdGhlIGFwcGxpY2F0aW9uIHVzaW5nIHRoZSBmb2xsb3dpbmcgY29tbWFuZHM6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsvLyBtb3ZlIGludG8gdGhlIHByb2plY3QKY2QgbmVzdC1zdGFydGVyLXRlc3RpbmcKCi8vIHN0YXJ0IHRoZSBzZXJ2ZXIKbnBtIHJ1biBzdGFydDpkZXYKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIHN0YXJ0IHRoZSBhcHBsaWNhdGlvbiBvbiB0aGUgZGVmYXVsdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDszMDAwJmx0Oy9jb2RlJmd0OyBwb3J0LiBOYXZpZ2F0ZSB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCZxdW90OyZndDtodHRwOi8vbG9jYWxob3N0OjMwMDAmbHQ7L2EmZ3Q7IGluIHlvdXIgZmF2b3JpdGUgYnJvd3NlciB0byB2aWV3IGl0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtbmVzdC1ob21lcGFnZS5wbmcmcXVvdDsgYWx0PSZxdW90O05lc3QuanMgRGVmYXVsdCBwYWdlJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0NvbmZpZ3VyaW5nIGFuZCBjb25uZWN0aW5nIHRvIHRoZSBkYXRhYmFzZSZsdDsvaDImZ3Q7CgombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS90eXBlb3JtL3R5cGVvcm0mcXVvdDsmZ3Q7VHlwZU9STSZsdDsvYSZndDsgaXMgYSBwb3B1bGFyIG9iamVjdC1yZWxhdGlvbmFsIG1hcHBlciAoT1JNKSB1c2VkIGZvciBUeXBlU2NyaXB0IGFuZCBKYXZhU2NyaXB0IGFwcGxpY2F0aW9ucy4gVG8gZmFjaWxpdGF0ZSBpdHMgaW50ZWdyYXRpb24gd2l0aCBOZXN0LmpzIGFwcGxpY2F0aW9ucywgeW91IHdpbGwgaW5zdGFsbCBhbiBhY2NvbXBhbnlpbmcgcGFja2FnZSBmb3IgaXQsIGFuZCBhbHNvIGluc3RhbGwgYSBOb2RlLmpzIGRyaXZlciBmb3IgTXlTUUwuIFRvIGRvIHRoYXQsIHN0b3AgdGhlIGFwcCBmcm9tIHJ1bm5pbmcgd2l0aCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDVFJMICsgQyZsdDsvY29kZSZndDsgYW5kIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtucG0gaW5zdGFsbCAtLXNhdmUgQG5lc3Rqcy90eXBlb3JtIHR5cGVvcm0gbXlzcWwKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7T25jZSB0aGUgaW5zdGFsbGF0aW9uIHByb2Nlc3MgaXMgY29tcGxldGUsIHlvdSBjYW4gcHJvY2VlZCB0byBpbXBvcnQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1R5cGVPcm1Nb2R1bGUmbHQ7L2NvZGUmZ3Q7IGludG8gdGhlIHJvb3Qgb2YgdGhlIGFwcGxpY2F0aW9uLiZsdDsvcCZndDsKCiZsdDtoMyZndDtVcGRhdGluZyB0aGUgcm9vdCBtb2R1bGUmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7T25lIG9mIHRoZSBidWlsZGluZyBibG9ja3Mgb2YgTmVzdC5qcyBpcyBtb2R1bGVzLiBNb2R1bGVzIGFyZSBUeXBlU2NyaXB0IGZpbGVzIGRlY29yYXRlZCB3aXRoICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0BNb2R1bGUmbHQ7L2NvZGUmZ3Q7LCBwcm92aWRpbmcgdGhlIG1ldGFkYXRhIHRoYXQgTmVzdC5qcyB1c2VzIHRvIG9yZ2FuaXplIHRoZSBhcHBsaWNhdGlvbiBzdHJ1Y3R1cmUuIFRoZSByb290IG1vZHVsZSBsb2NhdGVkIGluICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy4vc3JjL2FwcC5tb2R1bGUudHMmbHQ7L2NvZGUmZ3Q7IGlzIHRoZSB0b3AtbGV2ZWwgbW9kdWxlLiBJdOKAmXMgdXN1YWxseSBlbm91Z2ggZm9yIGEgc21hbGwgYXBwbGljYXRpb24uIEhvd2V2ZXIsIGl0IGlzIGFkdmlzYWJsZSBhbmQgcmVjb21tZW5kZWQgYnkgTmVzdC5qcyB0byBicmVhayBhIGxhcmdlIGFwcGxpY2F0aW9uIGludG8gbXVsdGlwbGUgbW9kdWxlcy4gSXQgaGVscHMgdG8gbWFpbnRhaW4gdGhlIHN0cnVjdHVyZSBvZiB0aGUgYXBwbGljYXRpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gY3JlYXRlIGEgY29ubmVjdGlvbiB3aXRoIHRoZSBkYXRhYmFzZSwgb3BlbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Li9zcmMvYXBwLm1vZHVsZS50cyZsdDsvY29kZSZndDsgZmlsZSBhbmQgcmVwbGFjZSBpdHMgY29udGVudCB3aXRoIHRoZSBmb2xsb3dpbmcgY29kZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ltcG9ydCB7IE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJzsKaW1wb3J0IHsgQXBwQ29udHJvbGxlciB9IGZyb20gJy4vYXBwLmNvbnRyb2xsZXInOwppbXBvcnQgeyBBcHBTZXJ2aWNlIH0gZnJvbSAnLi9hcHAuc2VydmljZSc7CmltcG9ydCB7IFR5cGVPcm1Nb2R1bGUgfSBmcm9tICdAbmVzdGpzL3R5cGVvcm0nOwppbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCc7CgpATW9kdWxlKHsKICBpbXBvcnRzOiBbCiAgICBUeXBlT3JtTW9kdWxlLmZvclJvb3QoewogICAgICB0eXBlOiAnbXlzcWwnLAogICAgICBob3N0OiAnbG9jYWxob3N0JywKICAgICAgcG9ydDogMzMwNiwKICAgICAgdXNlcm5hbWU6IERCX1VTRVIsCiAgICAgIHBhc3N3b3JkOiBEQl9QQVNTV09SRCwKICAgICAgZGF0YWJhc2U6ICd0ZXN0X2RiJywKICAgICAgZW50aXRpZXM6IFtqb2luKF9fZGlybmFtZSwgJyoqJywgJyouZW50aXR5Lnt0cyxqc30nKV0sCiAgICAgIHN5bmNocm9uaXplOiB0cnVlLAogICAgfSksCiAgXSwKICBjb250cm9sbGVyczogW0FwcENvbnRyb2xsZXJdLAogIHByb3ZpZGVyczogW0FwcFNlcnZpY2VdLAp9KQpleHBvcnQgY2xhc3MgQXBwTW9kdWxlIHt9CgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O05vdGUmbHQ7L3N0cm9uZyZndDs6ICZsdDtpJmd0O1JlcGxhY2UgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7REJfVVNFUiZsdDsvY29kZSZndDsgYW5kICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0RCX1BBU1NXT1JEJmx0Oy9jb2RlJmd0OyB3aXRoIHlvdXIgY3JlZGVudGlhbHMmbHQ7L2kmZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SGVyZSwgd2UgZXN0YWJsaXNoZWQgYSBjb25uZWN0aW9uIHdpdGggdGhlIGRhdGFiYXNlIGJ5IGltcG9ydGluZyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtUeXBlT3JtTW9kdWxlJmx0Oy9jb2RlJmd0OyBpbnRvIHRoZSByb290ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0FwcE1vZHVsZSZsdDsvY29kZSZndDsgYW5kIHNwZWNpZmllZCB0aGUgY29ubmVjdGlvbiBvcHRpb25zLiBUaGVzZSBpbmNsdWRlIHRoZSBkYXRhYmFzZSBkZXRhaWxzIGFuZCB0aGUgZGlyZWN0b3J5IHdoZXJlIHRoZSBlbnRpdHkgZmlsZXMgd2lsbCBiZSBzdG9yZWQuIFdlIHdpbGwgbGVhcm4gbW9yZSBhYm91dCBlbnRpdHkgZmlsZXMgaW4gdGhlIG5leHQgc2VjdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7RGF0YWJhc2UgY29ubmVjdGlvbiZsdDsvaDMmZ3Q7CgombHQ7cCZndDtJbiB0aGUgcHJlLXJlcXVpc2l0ZXMgYXQgdGhlIHN0YXJ0IG9mIHRoaXMgdHV0b3JpYWwsIEkgcmVmZXJyZWQgdG8gdGhlIE15U1FMIGRvd25sb2FkIHBhZ2UuIEFmdGVyIHlvdSBkb3dubG9hZCwgeW91IHdpbGwgbmVlZCB0byBjb25maWd1cmUgdGhlIERCIHNvIHRoYXQgaXQgd29ya3MgZm9yIHRoaXMgYXBwbGljYXRpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TG9naW4gdG8gTXlTUUwgaW4geW91ciB0ZXJtaW5hbCBieSBydW5uaW5nOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bXlzcWwgLXUgcm9vdCAtcAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtFbnRlciB0aGUgcGFzc3dvcmQgeW91IHNldCBkdXJpbmcgTXlTUUwgaW5zdGFsbGF0aW9uLiBOb3cgcnVuOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7QUxURVIgVVNFUiAncm9vdCdAJ2xvY2FsaG9zdCcgSURFTlRJRklFRCBXSVRIIG15c3FsX25hdGl2ZV9wYXNzd29yZCBCWSAncGFzc3dvcmQnOwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtSZXBsYWNlIOKAmHBhc3N3b3Jk4oCZIHdpdGggeW91ciBwYXNzd29yZC4gVGhpcyBjb21tYW5kIHNldHMgdGhlIHByZWZlcnJhYmxlIGF1dGhlbnRpY2F0aW9uIGZvciBOb2RlLmpzIGRyaXZlcnMgZm9yIE15U1FMLiBUbyBjcmVhdGUgdGhlIERCLCBydW46Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtDUkVBVEUgREFUQUJBU0UgdGVzdF9kYjsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O2gyJmd0O0NyZWF0aW5nIHRoZSBwcm9kdWN0IG1vZHVsZSwgc2VydmljZSwgYW5kIGNvbnRyb2xsZXIgZm9yIHRoZSBhcHAmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgd2UgaGF2ZSBzdWNjZXNzZnVsbHkgY29uZmlndXJlZCB0aGUgZGF0YWJhc2UgY29ubmVjdGlvbiwgd2Ugd2lsbCBzdGFydCBjcmVhdGluZyBtb3JlIHN0cnVjdHVyZSBmb3IgdGhlIGFwcGxpY2F0aW9uLiZsdDsvcCZndDsKCiZsdDtoMyZndDtHZW5lcmF0aW5nIGEgbW9kdWxlJmx0Oy9oMyZndDsKCiZsdDtwJmd0O1N0YXJ0IGJ5IGdlbmVyYXRpbmcgYSBtb2R1bGUgZm9yICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2R1Y3QmbHQ7L2NvZGUmZ3Q7LiBUaGlzIHdpbGwgYmUgYSBuZXcgbW9kdWxlIHVzZWQgdG8gZ3JvdXAgYWxsIGl0ZW1zIHJlbGF0ZWQgdG8gdGhlIHByb2R1Y3QuIEJlZ2luIGJ5IHJ1bm5pbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bmVzdCBnZW5lcmF0ZSBtb2R1bGUgcHJvZHVjdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGUgY29tbWFuZCBhYm92ZSB3aWxsIGNyZWF0ZSBhIG5ldyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0Jmx0Oy9jb2RlJmd0OyBmb2xkZXIgd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMmbHQ7L2NvZGUmZ3Q7IGRpcmVjdG9yeSwgZGVmaW5lIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9kdWN0TW9kdWxlJmx0Oy9jb2RlJmd0OyBpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cHJvZHVjdC5tb2R1bGUudHMmbHQ7L2NvZGUmZ3Q7IGZpbGUsIGFuZCBhdXRvbWF0aWNhbGx5IHVwZGF0ZSB0aGUgcm9vdCBtb2R1bGUgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2FwcC5tb2R1bGUudHMmbHQ7L2NvZGUmZ3Q7IGZpbGUgYnkgaW1wb3J0aW5nIHRoZSBuZXdseSBjcmVhdGVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2R1Y3RNb2R1bGUmbHQ7L2NvZGUmZ3Q7LiBUaGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Li9zcmMvcHJvZHVjdC9wcm9kdWN0Lm1vZHVsZS50cyZsdDsvY29kZSZndDsgZmlsZSB3aWxsIGJlIGVtcHR5IGZvciBub3cgYXMgc2hvd24gYmVsb3cuJmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtpbXBvcnQgeyBNb2R1bGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7CkBNb2R1bGUoe30pCmV4cG9ydCBjbGFzcyBQcm9kdWN0TW9kdWxlIHt9CgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7aDMmZ3Q7Q3JlYXRpbmcgYW4gZW50aXR5Jmx0Oy9oMyZndDsKCiZsdDtwJmd0O1RvIGNyZWF0ZSBhIHByb3BlciBkYXRhYmFzZSBzY2hlbWEgZm9yIGEgTmVzdC5qcyBhcHBsaWNhdGlvbiwgVHlwZU9STSBzdXBwb3J0cyB0aGUgY3JlYXRpb24gb2YgYW4gZW50aXR5LiBBbiBlbnRpdHkgaXMgYSBjbGFzcyB0aGF0IG1hcHMgdG8gYSBwYXJ0aWN1bGFyIGRhdGFiYXNlIHRhYmxlLiBJbiB0aGlzIGNhc2UsIHRoZSBwcm9kdWN0IHRhYmxlLiBXZSB3aWxsIGZvbGxvdyB0aGUgcHJvcGVyIHN0cnVjdHVyZSBmb3IgYSBOZXN0LmpzIGFwcCBieSBjcmVhdGluZyBhbiBlbnRpdHkgZmlsZSBpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3JjL3Byb2R1Y3QmbHQ7L2NvZGUmZ3Q7IGRpcmVjdG9yeSBzaW5jZSBpdCBpcyByZWxhdGVkIHRvICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb2R1Y3QmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGJlZ2luLCBjcmVhdGUgYSBuZXcgZmlsZSB3aXRoaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NyYy9wcm9kdWN0Jmx0Oy9jb2RlJmd0OyBmb2xkZXIgYW5kIG5hbWUgaXQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cHJvZHVjdC5lbnRpdHkudHMmbHQ7L2NvZGUmZ3Q7LiBUaGVuIHBhc3RlIHRoZSBmb2xsb3dpbmcgY29kZSBpbnRvIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7aW1wb3J0IHsgUHJpbWFyeUdlbmVyYXRlZENvbHVtbiwgQmFzZUVudGl0eSwgQ29sdW1uLCBFbnRpdHkgfSBmcm9tICd0eXBlb3JtJzsKCkBFbnRpdHkoKQpleHBvcnQgY2xhc3MgUHJvZHVjdCBleHRlbmRzIEJhc2VFbnRpdHkgewogIEBQcmltYXJ5R2VuZXJhdGVkQ29sdW1uKCkKICBpZDogbnVtYmVyOwoKICBAQ29sdW1uKCkKICBuYW1lOiBzdHJpbmc7CgogIEBDb2x1bW4oKQogIGRlc2NyaXB0aW9uOiBzdHJpbmc7CgogIEBDb2x1bW4oKQogIHByaWNlOiBzdHJpbmc7Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VXNpbmcgdGhlIGRlY29yYXRvcnMgaW1wb3J0ZWQgZnJvbSB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dHlwZW9ybSZsdDsvY29kZSZndDsgbW9kdWxlLCB3ZSBjcmVhdGVkIGZvdXIgY29sdW1ucyBmb3IgdGhlIHByb2R1Y3QgdGFibGUuIEFtb25nIHRoZW0gaXMgdGhlIHByaW1hcnkga2V5IGNvbHVtbiB0byB1bmlxdWVseSBpZGVudGlmeSBhIHByb2R1Y3QuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0NyZWF0aW5nIGEgZGF0YSB0cmFuc2ZlciBvYmplY3QmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7QSBkYXRhIHRyYW5zZmVyIG9iamVjdCAoRFRPKSBoZWxwcyB0byBjcmVhdGUgYW5kIHZhbGlkYXRlIGEgcHJvcGVyIGRhdGEgc3RydWN0dXJlIGZvciBkYXRhIGNvbWluZyBpbnRvIGFuIGFwcGxpY2F0aW9uLiBGb3IgZXhhbXBsZSwgd2hlbmV2ZXIgeW91IHNlbmQgYW4gSFRUUCBQT1NUIHJlcXVlc3QgZnJvbSB0aGUgZnJvbnQgZW5kIHRvIGEgTm9kZS5qcyBiYWNrIGVuZCwgeW91IG5lZWQgdG8gZXh0cmFjdCB0aGUgY29udGVudCBwb3N0ZWQgZnJvbSB0aGUgZm9ybSBhbmQgcGFyc2UgaXQgaW50byBhIGZvcm1hdCB0aGF0IHlvdXIgYmFjayBlbmQgY29kZSBjYW4gZWFzaWx5IGNvbnN1bWUuIERUTyBoZWxwcyB0byBjbGVhcmx5IHNwZWNpZnkgc2hhcGVzIG9mIG9iamVjdHMgZXh0cmFjdGVkIGZyb20gdGhlIGJvZHkgb2YgYSByZXF1ZXN0IHdoZW4gY29tbXVuaWNhdGluZyB3aXRoIHRoZSBiYWNrIGVuZCwgYW5kIHByb3ZpZGVzIGEgd2F5IHRvIHBsdWcgaW4gdmFsaWRhdGlvbiB3aXRoIGxpdHRsZSBlZmZvcnQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VG8gc2V0IHVwIHRoZSBEVE8gZm9yIHRoaXMgYXBwbGljYXRpb24sIGNyZWF0ZSBhIG5ldyBmb2xkZXIgd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvcHJvZHVjdCZsdDsvY29kZSZndDsgZGlyZWN0b3J5IGFuZCBuYW1lIGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2R0byZsdDsvY29kZSZndDsuIE5leHQsIGNyZWF0ZSBhIGZpbGUgd2l0aGluIHRoZSBuZXdseSBjcmVhdGVkIGZvbGRlciBhbmQgY2FsbCBpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjcmVhdGUtcHJvZHVjdC5kdG8udHMmbHQ7L2NvZGUmZ3Q7LiBVc2UgdGhlIGZvbGxvd2luZyBjb250ZW50IGZvciBpdDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ltcG9ydCB7IElzU3RyaW5nIH0gZnJvbSAnY2xhc3MtdmFsaWRhdG9yJzsKCmV4cG9ydCBjbGFzcyBDcmVhdGVQcm9kdWN0RFRPIHsKICBASXNTdHJpbmcoKQogIG5hbWU6IHN0cmluZzsKCiAgQElzU3RyaW5nKCkKICBkZXNjcmlwdGlvbjogc3RyaW5nOwoKICBASXNTdHJpbmcoKQogIHByaWNlOiBzdHJpbmc7Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SGVyZSwgd2UgaGF2ZSBkZWZpbmVkIGEgY2xhc3MgdG8gcmVwcmVzZW50ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0NyZWF0ZVByb2R1Y3REVE8mbHQ7L2NvZGUmZ3Q7IGFuZCBhbHNvIGFkZGVkIGEgYml0IG9mIHZhbGlkYXRpb24gdG8gZW5zdXJlIHRoYXQgdGhlIGRhdGEgdHlwZSBvZiB0aGUgZmllbGRzIGlzICZsdDtzdHJvbmcmZ3Q7c3RyaW5nJmx0Oy9zdHJvbmcmZ3Q7LiBOZXh0LCB3ZSB3aWxsIGNyZWF0ZSBhIHJlcG9zaXRvcnkgdG8gaGVscCBwZXJzaXN0IGRhdGEgZGlyZWN0bHkgaW50byBvdXIgYXBwbGljYXRpb24gZGF0YWJhc2UuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0NyZWF0aW5nIGEgY3VzdG9tIHJlcG9zaXRvcnkmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7R2VuZXJhbGx5LCBhIHJlcG9zaXRvcnkgaW4gT1JNcyBzdWNoIGFzIFR5cGVPUk0gZnVuY3Rpb25zIG1haW5seSBhcyBhIHBlcnNpc3RlbmNlIGxheWVyLiBJdCBjb250YWlucyBtZXRob2RzIHN1Y2ggYXM6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzYXZlKCkmbHQ7L2NvZGUmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZGVsZXRlKCkmbHQ7L2NvZGUmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZmluZCgpJmx0Oy9jb2RlJmd0OyZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtUaGlzIGhlbHBzIHRvIGNvbW11bmljYXRlIHdpdGggdGhlIGRhdGFiYXNlIG9mIGFuIGFwcGxpY2F0aW9uLiBJbiB0aGlzIHR1dG9yaWFsLCB3ZSB3aWxsIGNyZWF0ZSBhIGN1c3RvbSByZXBvc2l0b3J5IHRoYXQgZXh0ZW5kcyB0aGUgYmFzZSByZXBvc2l0b3J5IG9mIFR5cGVPUk0gZm9yIG91ciBwcm9kdWN0IGVudGl0eSBhbmQgY3JlYXRlIHNvbWUgY3VzdG9tIG1ldGhvZHMgZm9yIHNwZWNpZmljIHF1ZXJpZXMuIFN0YXJ0IGJ5IG5hdmlnYXRpbmcgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NyYy9wcm9kdWN0Jmx0Oy9jb2RlJmd0OyBmb2xkZXIgYW5kIGNyZWF0ZSBhIG5ldyBmaWxlIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb2R1Y3QucmVwb3NpdG9yeS50cyZsdDsvY29kZSZndDsuIE9uY2UgeW914oCZcmUgZG9uZSwgcGFzdGUgdGhlIGZvbGxvd2luZyBjb250ZW50IGludG8gaXQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtpbXBvcnQgeyBSZXBvc2l0b3J5LCBFbnRpdHlSZXBvc2l0b3J5IH0gZnJvbSAndHlwZW9ybSc7CmltcG9ydCB7IFByb2R1Y3QgfSBmcm9tICcuL3Byb2R1Y3QuZW50aXR5JzsKaW1wb3J0IHsgQ3JlYXRlUHJvZHVjdERUTyB9IGZyb20gJy4vZHRvL2NyZWF0ZS1wcm9kdWN0LmR0byc7CgpARW50aXR5UmVwb3NpdG9yeShQcm9kdWN0KQpleHBvcnQgY2xhc3MgUHJvZHVjdFJlcG9zaXRvcnkgZXh0ZW5kcyBSZXBvc2l0b3J5JmFtcDtsdDtQcm9kdWN0JmFtcDtndDsgewoKICBwdWJsaWMgYXN5bmMgY3JlYXRlUHJvZHVjdCgKICAgIGNyZWF0ZVByb2R1Y3REdG86IENyZWF0ZVByb2R1Y3REVE8sCiAgKTogUHJvbWlzZSZhbXA7bHQ7UHJvZHVjdCZhbXA7Z3Q7IHsKICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24sIHByaWNlIH0gPSBjcmVhdGVQcm9kdWN0RHRvOwoKICAgIGNvbnN0IHByb2R1Y3QgPSBuZXcgUHJvZHVjdCgpOwogICAgcHJvZHVjdC5uYW1lID0gbmFtZTsKICAgIHByb2R1Y3QuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjsKICAgIHByb2R1Y3QucHJpY2UgPSBwcmljZTsKCiAgICBhd2FpdCBwcm9kdWN0LnNhdmUoKTsKICAgIHJldHVybiBwcm9kdWN0OwogIH0KCiAgcHVibGljIGFzeW5jIGVkaXRQcm9kdWN0KAogICAgY3JlYXRlUHJvZHVjdER0bzogQ3JlYXRlUHJvZHVjdERUTywKICAgIGVkaXRlZFByb2R1Y3Q6IFByb2R1Y3QsCiAgKTogUHJvbWlzZSZhbXA7bHQ7UHJvZHVjdCZhbXA7Z3Q7IHsKICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24sIHByaWNlIH0gPSBjcmVhdGVQcm9kdWN0RHRvOwoKICAgIGVkaXRlZFByb2R1Y3QubmFtZSA9IG5hbWU7CiAgICBlZGl0ZWRQcm9kdWN0LmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247CiAgICBlZGl0ZWRQcm9kdWN0LnByaWNlID0gcHJpY2U7CiAgICBhd2FpdCBlZGl0ZWRQcm9kdWN0LnNhdmUoKTsKCiAgICByZXR1cm4gZWRpdGVkUHJvZHVjdDsKICB9Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7RnJvbSB0aGUgY29kZSBhYm92ZSwgd2UgZGVmaW5lZCB0d28gbWV0aG9kczombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NyZWF0ZVByb2R1Y3QoKSZsdDsvY29kZSZndDs6IFRoaXMgbWV0aG9kIHRha2VzIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjcmVhdGVQcm9kdWN0RHRvJmx0Oy9jb2RlJmd0OyBjbGFzcywgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIGV4dHJhY3QgdGhlIGJvZHkgb2YgdGhlIEhUVFAgcmVxdWVzdCwgYXMgYW4gYXJndW1lbnQuIFRoZW4gd2UgZGVzdHJ1Y3R1cmUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y3JlYXRlUHJvZHVjdER0byZsdDsvY29kZSZndDsgYW5kIHVzZSB0aGUgdmFsdWVzIHRvIGNyZWF0ZSBhIG5ldyBwcm9kdWN0LiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2VkaXRQcm9kdWN0Jmx0Oy9jb2RlJmd0OzogSGVyZSwgdGhlIGRldGFpbHMgb2YgdGhlIHByb2R1Y3QgdGhhdCBuZWVkcyB0byBiZSBlZGl0ZWQgYXJlIHBhc3NlZCB0byB0aGlzIG1ldGhvZCBhbmQgYmFzZWQgb24gdGhlIG5ldyB2YWx1ZXMgZnJvbSB0aGUgY2xpZW50LXNpZGUsIHRoZSBzcGVjaWZpZWQgZGV0YWlscyB3aWxsIGJlIHVwZGF0ZWQgYW5kIHNhdmVkIGluIHRoZSBkYXRhYmFzZSBhY2NvcmRpbmdseS4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O2gzJmd0O0dlbmVyYXRpbmcgYSBzZXJ2aWNlJmx0Oy9oMyZndDsKCiZsdDtwJmd0O0Egc2VydmljZSwgYWxzbyBrbm93biBhcyBhIHByb3ZpZGVyLCBpcyBhbm90aGVyIGJ1aWxkaW5nIGJsb2NrIGluIE5lc3QuanMgdGhhdCBpcyBjYXRlZ29yaXplZCB1bmRlciB0aGUgc2VwYXJhdGlvbiBvZiBjb25jZXJucyBwcmluY2lwbGUuIEl0IGlzIGRlc2lnbmVkIHRvIGhhbmRsZSBhbmQgYWJzdHJhY3QgY29tcGxleCBidXNpbmVzcyBsb2dpYyBhd2F5IGZyb20gdGhlIGNvbnRyb2xsZXIgYW5kIHJldHVybiB0aGUgYXBwcm9wcmlhdGUgcmVzcG9uc2VzLiBBbGwgc2VydmljZXMgaW4gTmVzdC5qcyBhcmUgZGVjb3JhdGVkIHdpdGggdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0BJbmplY3RhYmxlKCkmbHQ7L2NvZGUmZ3Q7IGRlY29yYXRvciBhbmQgdGhpcyBtYWtlcyBpdCBlYXN5IHRvIGluamVjdCBzZXJ2aWNlcyBpbnRvIGFueSBvdGhlciBmaWxlLCBzdWNoIGFzIGNvbnRyb2xsZXJzIGFuZCBtb2R1bGVzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0NyZWF0ZSBhIHNlcnZpY2UgZm9yIHByb2R1Y3QgdXNpbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bmVzdCBnZW5lcmF0ZSBzZXJ2aWNlIHByb2R1Y3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7QWZ0ZXIgcnVubmluZyB0aGUgY29tbWFuZCBhYm92ZSwgeW91IHdpbGwgc2VlIHRoZSBmb2xsb3dpbmcgb3V0cHV0IG9uIHRoZSB0ZXJtaW5hbC4mbHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O0NSRUFURSAvc3JjL3Byb2R1Y3QvcHJvZHVjdC5zZXJ2aWNlLnNwZWMudHMgKDQ2NyBieXRlcykKQ1JFQVRFIC9zcmMvcHJvZHVjdC9wcm9kdWN0LnNlcnZpY2UudHMgKDkxIGJ5dGVzKQpVUERBVEUgL3NyYy9wcm9kdWN0L3Byb2R1Y3QubW9kdWxlLnRzICgxNjcgYnl0ZXMpCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1doYXQgaGFwcGVuZWQgaGVyZSBpcyB0aGF0IHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtuZXN0Jmx0Oy9jb2RlJmd0OyBjb21tYW5kIGhhcyBjcmVhdGVkIHR3byBuZXcgZmlsZXMgd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvcHJvZHVjdCZsdDsvY29kZSZndDsgZm9sZGVyLiBUaGVzZSBhcmU6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0LnNlcnZpY2Uuc3BlYy50cyZsdDsvY29kZSZndDs6IFRoaXMgZmlsZSB3aWxsIGJlIHVzZWQgdG8gd3JpdGUgdW5pdCB0ZXN0cyBmb3IgdGhlIG1ldGhvZHMgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2l0aGluIHRoZSBwcm9kdWN0IHNlcnZpY2UgZmlsZS4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0LnNlcnZpY2UudHMmbHQ7L2NvZGUmZ3Q7OiBUaGlzIGlzIHRoZSBwcm9kdWN0IHNlcnZpY2UgZmlsZSB0aGF0IHdpbGwgaG9sZCBhbGwgdGhlIGJ1c2luZXNzIGxvZ2ljIGZvciB0aGUgYXBwbGljYXRpb24uJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtwJmd0O0l0IGhhcyBhbHNvIGF1dG9tYXRpY2FsbHkgaW1wb3J0ZWQgdGhlIG5ld2x5IGNyZWF0ZWQgc2VydmljZSBhbmQgYWRkZWQgaXQgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb2R1Y3QubW9kdWxlLnRzJmx0Oy9jb2RlJmd0OyBmaWxlLiZsdDsvcCZndDsKCiZsdDtwJmd0O05leHQsIHlvdSB3aWxsIHBvcHVsYXRlIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0LnNlcnZpY2UudHMmbHQ7L2NvZGUmZ3Q7IGZpbGUgd2l0aCBtZXRob2RzIGZvciBjcmVhdGluZyBhIHByb2R1Y3QsIHJldHJpZXZpbmcgYWxsIGNyZWF0ZWQgcHJvZHVjdHMsIGFzIHdlbGwgYXMgZmV0Y2hpbmcsIHVwZGF0aW5nLCBhbmQgZGVsZXRpbmcgdGhlIGRldGFpbHMgb2YgYSBwYXJ0aWN1bGFyIHByb2R1Y3QuIE9wZW4gdGhlIGZpbGUgYW5kIHJlcGxhY2UgaXRzIGNvbnRlbnQgd2l0aCB0aGUgZm9sbG93aW5nOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7aW1wb3J0IHsgSW5qZWN0YWJsZSwgTm90Rm91bmRFeGNlcHRpb24gfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7CmltcG9ydCB7IEluamVjdFJlcG9zaXRvcnkgfSBmcm9tICdAbmVzdGpzL3R5cGVvcm0nOwppbXBvcnQgeyBQcm9kdWN0IH0gZnJvbSAnLi9wcm9kdWN0LmVudGl0eSc7CmltcG9ydCB7IENyZWF0ZVByb2R1Y3REVE8gfSBmcm9tICcuL2R0by9jcmVhdGUtcHJvZHVjdC5kdG8nOwppbXBvcnQgeyBQcm9kdWN0UmVwb3NpdG9yeSB9IGZyb20gJy4vcHJvZHVjdC5yZXBvc2l0b3J5JzsKCkBJbmplY3RhYmxlKCkKZXhwb3J0IGNsYXNzIFByb2R1Y3RTZXJ2aWNlIHsKICBjb25zdHJ1Y3RvcigKICAgIEBJbmplY3RSZXBvc2l0b3J5KFByb2R1Y3RSZXBvc2l0b3J5KQogICAgcHJpdmF0ZSBwcm9kdWN0UmVwb3NpdG9yeTogUHJvZHVjdFJlcG9zaXRvcnksCiAgKSB7fQoKICBwdWJsaWMgYXN5bmMgY3JlYXRlUHJvZHVjdCgKICAgIGNyZWF0ZVByb2R1Y3REdG86IENyZWF0ZVByb2R1Y3REVE8sCiAgKTogUHJvbWlzZSZhbXA7bHQ7UHJvZHVjdCZhbXA7Z3Q7IHsKICAgIHJldHVybiBhd2FpdCB0aGlzLnByb2R1Y3RSZXBvc2l0b3J5LmNyZWF0ZVByb2R1Y3QoY3JlYXRlUHJvZHVjdER0byk7CiAgfQoKCiAgcHVibGljIGFzeW5jIGdldFByb2R1Y3RzKCk6IFByb21pc2UmYW1wO2x0O1Byb2R1Y3RbXSZhbXA7Z3Q7IHsKICAgIHJldHVybiBhd2FpdCB0aGlzLnByb2R1Y3RSZXBvc2l0b3J5LmZpbmQoKTsKICB9CgoKICBwdWJsaWMgYXN5bmMgZ2V0UHJvZHVjdChwcm9kdWN0SWQ6IG51bWJlcik6IFByb21pc2UmYW1wO2x0O1Byb2R1Y3QmYW1wO2d0OyB7CiAgICBjb25zdCBmb3VuZFByb2R1Y3QgPSBhd2FpdCB0aGlzLnByb2R1Y3RSZXBvc2l0b3J5LmZpbmRPbmUocHJvZHVjdElkKTsKICAgIGlmICghZm91bmRQcm9kdWN0KSB7CiAgICAgIHRocm93IG5ldyBOb3RGb3VuZEV4Y2VwdGlvbignUHJvZHVjdCBub3QgZm91bmQnKTsKICAgIH0KICAgIHJldHVybiBmb3VuZFByb2R1Y3Q7CiAgfQoKCiAgcHVibGljIGFzeW5jIGVkaXRQcm9kdWN0KAogICAgcHJvZHVjdElkOiBudW1iZXIsCiAgICBjcmVhdGVQcm9kdWN0RHRvOiBDcmVhdGVQcm9kdWN0RFRPLAogICk6IFByb21pc2UmYW1wO2x0O1Byb2R1Y3QmYW1wO2d0OyB7CiAgICBjb25zdCBlZGl0ZWRQcm9kdWN0ID0gYXdhaXQgdGhpcy5wcm9kdWN0UmVwb3NpdG9yeS5maW5kT25lKHByb2R1Y3RJZCk7CiAgICBpZiAoIWVkaXRlZFByb2R1Y3QpIHsKICAgICAgdGhyb3cgbmV3IE5vdEZvdW5kRXhjZXB0aW9uKCdQcm9kdWN0IG5vdCBmb3VuZCcpOwogICAgfQogICAgcmV0dXJuIHRoaXMucHJvZHVjdFJlcG9zaXRvcnkuZWRpdFByb2R1Y3QoY3JlYXRlUHJvZHVjdER0bywgZWRpdGVkUHJvZHVjdCk7CiAgfQoKCiAgcHVibGljIGFzeW5jIGRlbGV0ZVByb2R1Y3QocHJvZHVjdElkOiBudW1iZXIpOiBQcm9taXNlJmFtcDtsdDt2b2lkJmFtcDtndDsgewogICAgYXdhaXQgdGhpcy5wcm9kdWN0UmVwb3NpdG9yeS5kZWxldGUocHJvZHVjdElkKTsKICB9Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SGVyZSwgd2UgaW1wb3J0ZWQgdGhlIHJlcXVpcmVkIG1vZHVsZXMgZm9yIHRoZSBhcHBsaWNhdGlvbiBhbmQgY3JlYXRlZCBpbmRpdmlkdWFsIG1ldGhvZHMgdG86Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjcmVhdGVQcm9kdWN0KCkmbHQ7L2NvZGUmZ3Q7OiBDcmVhdGUgYSBuZXcgcHJvZHVjdCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dldFByb2R1Y3RzKCkmbHQ7L2NvZGUmZ3Q7OiBHZXQgYWxsIGNyZWF0ZWQgcHJvZHVjdHMmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtnZXRQcm9kdWN0KCkmbHQ7L2NvZGUmZ3Q7OiBSZXRyaWV2ZSB0aGUgZGV0YWlscyBvZiBhIHNpbmdsZSBwcm9kdWN0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZWRpdFByb2R1Y3QoKSZsdDsvY29kZSZndDs6IEVkaXQgdGhlIGRldGFpbHMgb2YgYSBwYXJ0aWN1bGFyIHByb2R1Y3QmbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtkZWxldGVQcm9kdWN0KCkmbHQ7L2NvZGUmZ3Q7OiBEZWxldGUgYSBzaW5nbGUgcHJvZHVjdCZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtJdOKAmXMgYWxzbyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHdlIGluamVjdGVkIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9kdWN0UmVwb3NpdG9yeSZsdDsvY29kZSZndDsgd2UgY3JlYXRlZCBlYXJsaWVyIGludG8gdGhpcyBzZXJ2aWNlIGluIG9yZGVyIHRvIGVhc2lseSBpbnRlcmFjdCBhbmQgY29tbXVuaWNhdGUgd2l0aCB0aGUgZGF0YWJhc2UuIEJlbG93IGlzIGEgc25pcHBldCBvZiB0aGUgZmlsZSBzaG93aW5nIHRoaXMgYml0LiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ICAuLi4KCiAgY29uc3RydWN0b3IoCiAgICBASW5qZWN0UmVwb3NpdG9yeShQcm9kdWN0UmVwb3NpdG9yeSkKICAgIHByaXZhdGUgcHJvZHVjdFJlcG9zaXRvcnk6IFByb2R1Y3RSZXBvc2l0b3J5LAogICkge30KCiAgLi4uCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RoaXMgd2lsbCBvbmx5IHdvcmsgaWYgd2UgYWxzbyBpbXBvcnQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2R1Y3RSZXBvc2l0b3J5Jmx0Oy9jb2RlJmd0OyBpbnRvIHRoZSBwcm9kdWN0IG1vZHVsZS4gV2Ugd2lsbCBkbyB0aGlzIGxhdGVyIGluIHRoZSB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7R2VuZXJhdGluZyBhIGNvbnRyb2xsZXImbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7VGhlIHJlc3BvbnNpYmlsaXR5IG9mIGNvbnRyb2xsZXJzIGluIE5lc3QuanMgaXMgdG8gcmVjZWl2ZSBhbmQgaGFuZGxlIHRoZSBpbmNvbWluZyBIVFRQIHJlcXVlc3RzIGZyb20gdGhlIGNsaWVudCBzaWRlIG9mIGFuIGFwcGxpY2F0aW9uIGFuZCByZXR1cm4gdGhlIGFwcHJvcHJpYXRlIHJlc3BvbnNlcyBiYXNlZCBvbiB0aGUgYnVzaW5lc3MgbG9naWMuIFRoZSByb3V0aW5nIG1lY2hhbmlzbSwgd2hpY2ggaXMgY29udHJvbGxlZCBieSB0aGUgZGVjb3JhdG9yICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0BDb250cm9sbGVyKCkmbHQ7L2NvZGUmZ3Q7IGF0dGFjaGVkIHRvIHRoZSB0b3Agb2YgZWFjaCBjb250cm9sbGVyLCB1c3VhbGx5IGRldGVybWluZXMgd2hpY2ggY29udHJvbGxlciByZWNlaXZlcyB3aGljaCByZXF1ZXN0cy4gVG8gY3JlYXRlIGEgbmV3IGNvbnRyb2xsZXIgZmlsZSBmb3Igb3VyIHByb2plY3QsIHJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgZnJvbSB0aGUgdGVybWluYWw6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtuZXN0IGdlbmVyYXRlIGNvbnRyb2xsZXIgcHJvZHVjdCAtLW5vLXNwZWMKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7WW91IHdpbGwgc2VlIHRoZSBmb2xsb3dpbmcgb3V0cHV0LiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Q1JFQVRFIC9zcmMvcHJvZHVjdC9wcm9kdWN0LmNvbnRyb2xsZXIudHMgKDEwMyBieXRlcykKVVBEQVRFIC9zcmMvcHJvZHVjdC9wcm9kdWN0Lm1vZHVsZS50cyAoMjYxIGJ5dGVzKQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtCZWNhdXNlIHdlIHdvbuKAmXQgYmUgd3JpdGluZyBhIHRlc3QgZm9yIHRoaXMgY29udHJvbGxlciwgd2UgdXNlZCB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LS1uby1zcGVjJmx0Oy9jb2RlJmd0OyBvcHRpb24gdG8gaW5zdHJ1Y3QgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25lc3QmbHQ7L2NvZGUmZ3Q7IGNvbW1hbmQgbm90IHRvIGdlbmVyYXRlIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LnNwZWMudHMmbHQ7L2NvZGUmZ3Q7IGZpbGUgZm9yIHRoZSBjb250cm9sbGVyLiBPcGVuIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvcHJvZHVjdC9wcm9kdWN0LmNvbnRyb2xsZXIudHMmbHQ7L2NvZGUmZ3Q7IGZpbGUgYW5kIHJlcGxhY2UgaXRzIGNvZGUgd2l0aCB0aGUgZm9sbG93aW5nOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7aW1wb3J0IHsKICBDb250cm9sbGVyLAogIFBvc3QsCiAgQm9keSwKICBHZXQsCiAgUGF0Y2gsCiAgUGFyYW0sCiAgRGVsZXRlLAp9IGZyb20gJ0BuZXN0anMvY29tbW9uJzsKaW1wb3J0IHsgUHJvZHVjdFNlcnZpY2UgfSBmcm9tICcuL3Byb2R1Y3Quc2VydmljZSc7CmltcG9ydCB7IENyZWF0ZVByb2R1Y3REVE8gfSBmcm9tICcuL2R0by9jcmVhdGUtcHJvZHVjdC5kdG8nOwppbXBvcnQgeyBQcm9kdWN0IH0gZnJvbSAnLi9wcm9kdWN0LmVudGl0eSc7CgpAQ29udHJvbGxlcigncHJvZHVjdCcpCmV4cG9ydCBjbGFzcyBQcm9kdWN0Q29udHJvbGxlciB7CiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcm9kdWN0U2VydmljZTogUHJvZHVjdFNlcnZpY2UpIHt9CgogIEBQb3N0KCdjcmVhdGUnKQogIHB1YmxpYyBhc3luYyBjcmVhdGVQcm9kdWN0KAogICAgQEJvZHkoKSBjcmVhdGVQcm9kdWN0RHRvOiBDcmVhdGVQcm9kdWN0RFRPLAogICk6IFByb21pc2UmYW1wO2x0O1Byb2R1Y3QmYW1wO2d0OyB7CiAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgdGhpcy5wcm9kdWN0U2VydmljZS5jcmVhdGVQcm9kdWN0KGNyZWF0ZVByb2R1Y3REdG8pOwogICAgcmV0dXJuIHByb2R1Y3Q7CiAgfQoKICBAR2V0KCdhbGwnKQogIHB1YmxpYyBhc3luYyBnZXRQcm9kdWN0cygpOiBQcm9taXNlJmFtcDtsdDtQcm9kdWN0W10mYW1wO2d0OyB7CiAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IHRoaXMucHJvZHVjdFNlcnZpY2UuZ2V0UHJvZHVjdHMoKTsKICAgIHJldHVybiBwcm9kdWN0czsKICB9CgogIEBHZXQoJy86cHJvZHVjdElkJykKICBwdWJsaWMgYXN5bmMgZ2V0UHJvZHVjdChAUGFyYW0oJ3Byb2R1Y3RJZCcpIHByb2R1Y3RJZDogbnVtYmVyKSB7CiAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgdGhpcy5wcm9kdWN0U2VydmljZS5nZXRQcm9kdWN0KHByb2R1Y3RJZCk7CiAgICByZXR1cm4gcHJvZHVjdDsKICB9CgogIEBQYXRjaCgnL2VkaXQvOnByb2R1Y3RJZCcpCiAgcHVibGljIGFzeW5jIGVkaXRQcm9kdWN0KAogICAgQEJvZHkoKSBjcmVhdGVQcm9kdWN0RHRvOiBDcmVhdGVQcm9kdWN0RFRPLAogICAgQFBhcmFtKCdwcm9kdWN0SWQnKSBwcm9kdWN0SWQ6IG51bWJlciwKICApOiBQcm9taXNlJmFtcDtsdDtQcm9kdWN0JmFtcDtndDsgewogICAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IHRoaXMucHJvZHVjdFNlcnZpY2UuZWRpdFByb2R1Y3QoCiAgICAgIHByb2R1Y3RJZCwKICAgICAgY3JlYXRlUHJvZHVjdER0bywKICAgICk7CiAgICByZXR1cm4gcHJvZHVjdDsKICB9CgogIEBEZWxldGUoJy9kZWxldGUvOnByb2R1Y3RJZCcpCiAgcHVibGljIGFzeW5jIGRlbGV0ZVByb2R1Y3QoQFBhcmFtKCdwcm9kdWN0SWQnKSBwcm9kdWN0SWQ6IG51bWJlcikgewogICAgY29uc3QgZGVsZXRlZFByb2R1Y3QgPSBhd2FpdCB0aGlzLnByb2R1Y3RTZXJ2aWNlLmRlbGV0ZVByb2R1Y3QocHJvZHVjdElkKTsKICAgIHJldHVybiBkZWxldGVkUHJvZHVjdDsKICB9Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGZpbGUgYWJvdmUsIHdlIGltcG9ydGVkIHRoZSBuZWNlc3NhcnkgbW9kdWxlcyB0byBoYW5kbGUgdGhlIEhUVFAgcmVxdWVzdHMgYW5kIHByb2NlZWRlZCB0byBpbmplY3QgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2R1Y3RTZXJ2aWNlJmx0Oy9jb2RlJmd0OyB0aGF0IHdhcyBjcmVhdGVkIGVhcmxpZXIgaW50byB0aGUgY29udHJvbGxlciB0aHJvdWdoIHRoZSBjb25zdHJ1Y3RvciB0byBtYWtlIHVzZSBvZiB0aGUgZnVuY3Rpb25zIHRoYXQgYXJlIGFscmVhZHkgZGVmaW5lZCB3aXRoaW4gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdFNlcnZpY2UmbHQ7L2NvZGUmZ3Q7LiBOZXh0LCB3ZSBjcmVhdGVkIHRoZSBmb2xsb3dpbmcgYXN5bmNocm9ub3VzIG1ldGhvZHM6Jmx0Oy9wJmd0OwoKJmx0O3VsJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjcmVhdGVQcm9kdWN0KCkmbHQ7L2NvZGUmZ3Q7OiBUaGlzIG1ldGhvZCB3aWxsIGJlIHVzZWQgdG8gcHJvY2VzcyBhIFBPU1QgSFRUUCByZXF1ZXN0IHNlbnQgZnJvbSB0aGUgY2xpZW50LXNpZGUgdG8gY3JlYXRlIGEgbmV3IHByb2R1Y3QgYW5kIHBlcnNpc3QgaXQgaW4gdGhlIGRhdGFiYXNlLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dldFByb2R1Y3RzKCkmbHQ7L2NvZGUmZ3Q7OiBUaGlzIG1ldGhvZCB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBmZXRjaGluZyB0aGUgZW50aXJlIGxpc3Qgb2YgcHJvZHVjdHMgZnJvbSB0aGUgZGF0YWJhc2UuJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Z2V0UHJvZHVjdCgpJmx0Oy9jb2RlJmd0OzogVGhpcyBtZXRob2QgdGFrZXMgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb2R1Y3RJZCZsdDsvY29kZSZndDsgYXMgYSBwYXJhbWV0ZXIgYW5kIHVzZXMgaXQgdG8gcmV0cmlldmUgdGhlIGRldGFpbHMgb2YgdGhlIHByb2R1Y3Qgd2l0aCB0aGF0IHVuaXF1ZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0SWQmbHQ7L2NvZGUmZ3Q7IGZyb20gdGhlIGRhdGFiYXNlLiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2VkaXRQcm9kdWN0KCkmbHQ7L2NvZGUmZ3Q7OiBUaGlzIG1ldGhvZCBpcyB1c2VkIGZvciBlZGl0aW5nIHRoZSBkZXRhaWxzIG9mIGEgcGFydGljdWxhciBwcm9kdWN0LiZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2RlbGV0ZVByb2R1Y3QoKSZsdDsvY29kZSZndDs6IFRoaXMgbWV0aG9kIGFsc28gYWNjZXB0cyB0aGUgdW5pcXVlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb2R1Y3RJZCZsdDsvY29kZSZndDsgdG8gaWRlbnRpZnkgYSBwYXJ0aWN1bGFyIHByb2R1Y3QgYW5kIGRlbGV0ZSBpdCBmcm9tIHRoZSBkYXRhYmFzZS4mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7QW5vdGhlciBpbXBvcnRhbnQgdGhpbmcgdG8gbm90ZSBoZXJlIGlzIHRoYXQgZWFjaCBvZiB0aGUgYXN5bmNocm9ub3VzIG1ldGhvZHMgd2UgZGVmaW5lZCBoYXMgYSBtZXRhZGF0YSBkZWNvcmF0b3IgYXMgdGhlIEhUVFAgdmVyYi4gVGhleSB0YWtlIGluIGEgcHJlZml4IHRoYXQgTmVzdC5qcyB1c2VzIHRvIGZ1cnRoZXIgaWRlbnRpZnkgYW5kIHBvaW50IHRvIHRoZSBtZXRob2QgdGhhdCBzaG91bGQgcHJvY2VzcyBhIHJlcXVlc3QgYW5kIHJlc3BvbmQgYWNjb3JkaW5nbHkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Rm9yIGluc3RhbmNlLCB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdENvbnRyb2xsZXImbHQ7L2NvZGUmZ3Q7IHRoYXQgd2UgY3JlYXRlZCBoYXMgYSBwcmVmaXggb2YgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cHJvZHVjdCZsdDsvY29kZSZndDsgYW5kIGEgbWV0aG9kIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NyZWF0ZVByb2R1Y3QoKSZsdDsvY29kZSZndDsgdGhhdCB0YWtlcyBpbiB0aGUgcHJlZml4ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NyZWF0ZSZsdDsvY29kZSZndDsuIFRoaXMgbWVhbnMgdGhhdCBhbnkgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7R0VUJmx0Oy9jb2RlJmd0OyByZXF1ZXN0IGRpcmVjdGVkIHRvICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb2R1Y3QvY3JlYXRlJmx0Oy9jb2RlJmd0OyAoJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aHR0cDovL2xvY2FsaG9zdDozMDAwL3Byb2R1Y3QvY3JlYXRlJmx0Oy9jb2RlJmd0Oykgd2lsbCBiZSBoYW5kbGVkIGJ5IHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjcmVhdGVQcm9kdWN0KCkmbHQ7L2NvZGUmZ3Q7IG1ldGhvZC4gVGhpcyBwcm9jZXNzIGlzIGFsc28gdGhlIHNhbWUgZm9yIG90aGVyIG1ldGhvZHMgZGVmaW5lZCB3aXRoaW4gdGhpcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9kdWN0Q29udHJvbGxlciZsdDsvY29kZSZndDsuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O1VwZGF0aW5nIHRoZSBwcm9kdWN0IG1vZHVsZSZsdDsvaDMmZ3Q7CgombHQ7cCZndDtOb3cgdGhhdCB0aGUgY29udHJvbGxlciBhbmQgc2VydmljZSBoYXZlIGJlZW4gY3JlYXRlZCBhbmQgYXV0b21hdGljYWxseSBhZGRlZCB0byB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdE1vZHVsZSZsdDsvY29kZSZndDsgd2l0aCB0aGUgdXNlIG9mIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtuZXN0Jmx0Oy9jb2RlJmd0OyBjb21tYW5kLCB3ZSBuZWVkIHRvIHVwZGF0ZSB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdE1vZHVsZSZsdDsvY29kZSZndDsuIE9wZW4gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Li9zcmMvcHJvZHVjdC9wcm9kdWN0Lm1vZHVsZS50cyZsdDsvY29kZSZndDsgYW5kIHVwZGF0ZSBpdHMgY29udGVudCB3aXRoIHRoZSBmb2xsb3dpbmcgY29kZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ltcG9ydCB7IE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJzsKaW1wb3J0IHsgUHJvZHVjdENvbnRyb2xsZXIgfSBmcm9tICcuL3Byb2R1Y3QuY29udHJvbGxlcic7CmltcG9ydCB7IFByb2R1Y3RTZXJ2aWNlIH0gZnJvbSAnLi9wcm9kdWN0LnNlcnZpY2UnOwppbXBvcnQgeyBUeXBlT3JtTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy90eXBlb3JtJzsKaW1wb3J0IHsgUHJvZHVjdFJlcG9zaXRvcnkgfSBmcm9tICcuL3Byb2R1Y3QucmVwb3NpdG9yeSc7CgpATW9kdWxlKHsKICBpbXBvcnRzOiBbVHlwZU9ybU1vZHVsZS5mb3JGZWF0dXJlKFtQcm9kdWN0UmVwb3NpdG9yeV0pXSwgLy8gYWRkIHRoaXMKICBjb250cm9sbGVyczogW1Byb2R1Y3RDb250cm9sbGVyXSwKICBwcm92aWRlcnM6IFtQcm9kdWN0U2VydmljZV0sCn0pCgpleHBvcnQgY2xhc3MgUHJvZHVjdE1vZHVsZSB7fQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtIZXJlLCB3ZSBwYXNzZWQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2R1Y3RSZXBvc2l0b3J5Jmx0Oy9jb2RlJmd0OyBjbGFzcyB0byB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7VHlwZU9ybS5mb3JGZWF0dXJlKCkmbHQ7L2NvZGUmZ3Q7IG1ldGhvZC4gVGhpcyB3aWxsIG5vdyBlbmFibGUgdGhlIHVzYWdlIG9mIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9kdWN0UmVwb3NpdG9yeSZsdDsvY29kZSZndDsgY2xhc3MuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIGFwcGxpY2F0aW9uIGlzIG5vdyByZWFkeSBhbmQgd2UgY2FuIHJ1biBpdCB0byB0ZXN0IGFsbCB0aGUgZW5kcG9pbnRzIGNyZWF0ZWQgc28gZmFyLiBSdW4gdGhlIGZvbGxvd2luZyBmcm9tIHRoZSB0ZXJtaW5hbDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O25wbSBydW4gc3RhcnQ6ZGV2CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RoaXMgd2lsbCBzdGFydCB0aGUgYXBwbGljYXRpb24gb24gJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vbG9jYWxob3N0OjMwMDAmcXVvdDsmZ3Q7aHR0cDovL2xvY2FsaG9zdDozMDAwJmx0Oy9hJmd0Oy4gQXQgdGhpcyBwb2ludCwgeW91IGNhbiB1c2UgYSB0b29sIGxpa2UgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3d3dy5wb3N0bWFuLmNvbS8mcXVvdDsmZ3Q7UG9zdG1hbiZsdDsvYSZndDsgdG8gdGVzdCB0aGUgQVBJLiBQb3N0bWFuIGlzIGEgdGVzdGluZyB0b29sIHVzZWQgdG8gY29uZmlybSBhbmQgY2hlY2sgdGhlIGJlaGF2aW9yIG9mIHlvdXIgQVBJIGJlZm9yZSBkZXBsb3lpbmcgdG8gcHJvZHVjdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7VXNpbmcgdGhlIGFwcGxpY2F0aW9uJmx0Oy9oMiZndDsKCiZsdDtoMyZndDtDcmVhdGUgYSBwcm9kdWN0Jmx0Oy9oMyZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtY3JlYXRlLXByb2R1Y3QucG5nJnF1b3Q7IGFsdD0mcXVvdDtDcmVhdGUgcHJvZHVjdCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0hlcmUsIHdlIHNlbmQgYSBQT1NUIEhUVFAgcmVxdWVzdCB0byAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtodHRwOi8vbG9jYWxob3N0OjMwMDAvcHJvZHVjdC9jcmVhdGUmbHQ7L2NvZGUmZ3Q7IGVuZHBvaW50IHdpdGggdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25hbWUmbHQ7L2NvZGUmZ3Q7LCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtkZXNjcmlwdGlvbiZsdDsvY29kZSZndDssIGFuZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcmljZSZsdDsvY29kZSZndDsgb2YgYSBwcm9kdWN0LiBUaGUgY3JlYXRlZCBwcm9kdWN0IHdhcyByZXR1cm5lZCBhcyBhIHJlc3BvbnNlLiZsdDsvcCZndDsKCiZsdDtoMyZndDtHZXQgcHJvZHVjdHMmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMS1nZXQtcHJvZHVjdHMucG5nJnF1b3Q7IGFsdD0mcXVvdDtHZXQgcHJvZHVjdHMmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtBIEdFVCBIVFRQIHJlcXVlc3QgY2FsbCB3YXMgbWFkZSB0byAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtodHRwOi8vbG9jYWxob3N0OjMwMDAvcHJvZHVjdC9hbGwmbHQ7L2NvZGUmZ3Q7IHRvIHJldHJpZXZlIHRoZSBlbnRpcmUgbGlzdCBvZiBwcm9kdWN0cyBjcmVhdGVkLiZsdDsvcCZndDsKCiZsdDtoMyZndDtHZXQgcHJvZHVjdCZsdDsvaDMmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTAxLWdldC1wcm9kdWN0LnBuZyZxdW90OyBhbHQ9JnF1b3Q7R2V0IHByb2R1Y3QmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUbyByZXRyaWV2ZSB0aGUgZGV0YWlscyBvZiBhIHNpbmdsZSBwcm9kdWN0LCB3ZSBzZW50IGEgR0VUIEhUVFAgcmVxdWVzdCB0byB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aHR0cDovL2xvY2FsaG9zdDozMDAwL3Byb2R1Y3QvMiZsdDsvY29kZSZndDsgZW5kcG9pbnQuIFBsZWFzZSBub3RlIHRoYXQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7MiZsdDsvY29kZSZndDsgaXMgdGhlIHVuaXF1ZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0SWQmbHQ7L2NvZGUmZ3Q7IG9mIHRoZSBwcm9kdWN0IHRoYXQgd2UgYXJlIGludGVyZXN0ZWQgaW4uIEZlZWwgZnJlZSB0byB0cnkgb3RoZXIgdmFsdWVzLiZsdDsvcCZndDsKCiZsdDtoMyZndDtFZGl0IGEgcHJvZHVjdCZsdDsvaDMmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTAxLWVkaXQtcHJvZHVjdC5wbmcmcXVvdDsgYWx0PSZxdW90O0VkaXQgcHJvZHVjdCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0hlcmUsIGEgUEFUQ0ggSFRUUCByZXF1ZXN0IHdhcyBzZW50IHRvICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wcm9kdWN0L2VkaXQvMiZsdDsvY29kZSZndDsgZW5kcG9pbnQgYW5kIHdlIHVwZGF0ZWQgdGhlIGRldGFpbHMgb2YgdGhlIHByb2R1Y3QgaWRlbnRpZmllZCB3aXRoIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0SWQmbHQ7L2NvZGUmZ3Q7IG9mICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OzImbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtoMiZndDtXcml0aW5nIHRlc3RzIGZvciB0aGUgYXBwbGljYXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgb3VyIEFQSSBpcyB3b3JraW5nIGFzIGV4cGVjdGVkLCBpbiB0aGlzIHNlY3Rpb24sIHdl4oCZbGwgZm9jdXMgb24gd3JpdGluZyB0ZXN0cyBmb3IgdGhlIG1ldGhvZHMgZGVmaW5lZCBpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdFNlcnZpY2UmbHQ7L2NvZGUmZ3Q7IGNsYXNzIHRoYXQgd2FzIGNyZWF0ZWQgZWFybGllci4gSXQgZmVlbHMgYXBwcm9wcmlhdGUgdG8gb25seSB0ZXN0IHRoaXMgcGFydCBvZiB0aGUgYXBwbGljYXRpb24gYXMgaXQgaGFuZGxlcyBtb3N0IG9mIHRoZSBidXNpbmVzcyBsb2dpYy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOZXN0LmpzIGNvbWVzIHdpdGggYSBidWlsdC1pbiB0ZXN0aW5nIGluZnJhc3RydWN0dXJlLCB3aGljaCBtZWFucyB3ZSBkb27igJl0IGhhdmUgdG8gc2V0IHVwIGEgbG90IG9mIGNvbmZpZ3VyYXRpb24gaW4gdGVybXMgb2YgdGVzdGluZy4gVGhvdWdoIE5lc3QuanMgaXMgYWdub3N0aWMgdG8gdGVzdGluZyB0b29scywgaXQgcHJvdmlkZXMgaW50ZWdyYXRpb24gd2l0aCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vamVzdGpzLmlvLyZxdW90OyZndDtKZXN0Jmx0Oy9hJmd0OyBvdXQgb2YgdGhlIGJveC4gSmVzdCB3aWxsIHByb3ZpZGUgYXNzZXJ0IGZ1bmN0aW9ucyBhbmQgdGVzdC1kb3VibGUgdXRpbGl0aWVzIHRoYXQgaGVscCB3aXRoIG1vY2tpbmcuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q3VycmVudGx5LCB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7cHJvZHVjdC5zZXJ2aWNlLnNwZWMudHMmbHQ7L2NvZGUmZ3Q7IGZpbGUgaGFzIHRoZSBmb2xsb3dpbmcgY29kZS4mbHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ltcG9ydCB7IFRlc3QsIFRlc3RpbmdNb2R1bGUgfSBmcm9tICdAbmVzdGpzL3Rlc3RpbmcnOwppbXBvcnQgeyBQcm9kdWN0U2VydmljZSB9IGZyb20gJy4vcHJvZHVjdC5zZXJ2aWNlJzsKCmRlc2NyaWJlKCdQcm9kdWN0U2VydmljZScsICgpID0mYW1wO2d0OyB7CiAgbGV0IHNlcnZpY2U6IFByb2R1Y3RTZXJ2aWNlOwoKICBiZWZvcmVFYWNoKGFzeW5jICgpID0mYW1wO2d0OyB7CiAgICBjb25zdCBtb2R1bGU6IFRlc3RpbmdNb2R1bGUgPSBhd2FpdCBUZXN0LmNyZWF0ZVRlc3RpbmdNb2R1bGUoewogICAgICBwcm92aWRlcnM6IFtQcm9kdWN0U2VydmljZV0sCiAgICB9KS5jb21waWxlKCk7CiAgICBzZXJ2aWNlID0gbW9kdWxlLmdldCZhbXA7bHQ7UHJvZHVjdFNlcnZpY2UmYW1wO2d0OyhQcm9kdWN0U2VydmljZSk7CiAgfSk7CgogIGl0KCdzaG91bGQgYmUgZGVmaW5lZCcsICgpID0mYW1wO2d0OyB7CiAgICBleHBlY3Qoc2VydmljZSkudG9CZURlZmluZWQoKTsKICB9KTsKfSk7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1dlIHdpbGwgYWRkIG1vcmUgdGVzdHMgdG8gbWFrZSB0aGlzIGZ1bGx5IGNvdmVyIGFsbCB0aGUgbWV0aG9kcyBkZWZpbmVkIHdpdGhpbiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdFNlcnZpY2UmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtoMyZndDtXcml0aW5nIGEgdGVzdCBmb3IgdGhlIOKAmGNyZWF0ZeKAmSBhbmQg4oCYZ2V04oCZIHByb2R1Y3RzIG1ldGhvZHMmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7UmVtZW1iZXIsIHdlIGRpZCBub3Qgc3RhcnQgdGhpcyBwcm9qZWN0IHVzaW5nIHRoZSB0ZXN0LWRyaXZlbiBkZXZlbG9wbWVudCBhcHByb2FjaC4gU28sIHdl4oCZbGwgd3JpdGUgdGhlIHRlc3RzIHRvIGVuc3VyZSB0aGF0IGFsbCBidXNpbmVzcyBsb2dpY3Mgd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9kdWN0U2VydmljZSZsdDsvY29kZSZndDsgcmVjZWl2ZXMgdGhlIGFwcHJvcHJpYXRlIHBhcmFtZXRlcnMgYW5kIHJldHVybiB0aGUgZXhwZWN0ZWQgcmVzcG9uc2UuIFRvIHN0YXJ0LCBvcGVuIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0LnNlcnZpY2Uuc3BlYy50cyZsdDsvY29kZSZndDsgZmlsZSBhbmQgcmVwbGFjZSBpdHMgY29udGVudCB3aXRoIHRoZSBmb2xsb3dpbmc6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtpbXBvcnQgeyBUZXN0LCBUZXN0aW5nTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy90ZXN0aW5nJzsKaW1wb3J0IHsgUHJvZHVjdFNlcnZpY2UgfSBmcm9tICcuL3Byb2R1Y3Quc2VydmljZSc7CmltcG9ydCB7IFByb2R1Y3RSZXBvc2l0b3J5IH0gZnJvbSAnLi9wcm9kdWN0LnJlcG9zaXRvcnknOwppbXBvcnQgeyBOb3RGb3VuZEV4Y2VwdGlvbiB9IGZyb20gJ0BuZXN0anMvY29tbW9uJzsKCmRlc2NyaWJlKCdQcm9kdWN0U2VydmljZScsICgpID0mYW1wO2d0OyB7CiAgbGV0IHByb2R1Y3RTZXJ2aWNlOwogIGxldCBwcm9kdWN0UmVwb3NpdG9yeTsKICBjb25zdCBtb2NrUHJvZHVjdFJlcG9zaXRvcnkgPSAoKSA9JmFtcDtndDsgKHsKICAgIGNyZWF0ZVByb2R1Y3Q6IGplc3QuZm4oKSwKICAgIGZpbmQ6IGplc3QuZm4oKSwKICAgIGZpbmRPbmU6IGplc3QuZm4oKSwKICAgIGRlbGV0ZTogamVzdC5mbigpLAogIH0pOwoKICBiZWZvcmVFYWNoKGFzeW5jICgpID0mYW1wO2d0OyB7CiAgICBjb25zdCBtb2R1bGU6IFRlc3RpbmdNb2R1bGUgPSBhd2FpdCBUZXN0LmNyZWF0ZVRlc3RpbmdNb2R1bGUoewogICAgICBwcm92aWRlcnM6IFsKICAgICAgICBQcm9kdWN0U2VydmljZSwKICAgICAgICB7CiAgICAgICAgICBwcm92aWRlOiBQcm9kdWN0UmVwb3NpdG9yeSwKICAgICAgICAgIHVzZUZhY3Rvcnk6IG1vY2tQcm9kdWN0UmVwb3NpdG9yeSwKICAgICAgICB9LAogICAgICBdLAogICAgfSkuY29tcGlsZSgpOwogICAgcHJvZHVjdFNlcnZpY2UgPSBhd2FpdCBtb2R1bGUuZ2V0JmFtcDtsdDtQcm9kdWN0U2VydmljZSZhbXA7Z3Q7KFByb2R1Y3RTZXJ2aWNlKTsKICAgIHByb2R1Y3RSZXBvc2l0b3J5ID0gYXdhaXQgbW9kdWxlLmdldCZhbXA7bHQ7UHJvZHVjdFJlcG9zaXRvcnkmYW1wO2d0OyhQcm9kdWN0UmVwb3NpdG9yeSk7CiAgfSk7CgogIGRlc2NyaWJlKCdjcmVhdGVQcm9kdWN0JywgKCkgPSZhbXA7Z3Q7IHsKICAgIGl0KCdzaG91bGQgc2F2ZSBhIHByb2R1Y3QgaW4gdGhlIGRhdGFiYXNlJywgYXN5bmMgKCkgPSZhbXA7Z3Q7IHsKICAgICAgcHJvZHVjdFJlcG9zaXRvcnkuY3JlYXRlUHJvZHVjdC5tb2NrUmVzb2x2ZWRWYWx1ZSgnc29tZVByb2R1Y3QnKTsKICAgICAgZXhwZWN0KHByb2R1Y3RSZXBvc2l0b3J5LmNyZWF0ZVByb2R1Y3QpLm5vdC50b0hhdmVCZWVuQ2FsbGVkKCk7CiAgICAgIGNvbnN0IGNyZWF0ZVByb2R1Y3REdG8gPSB7CiAgICAgICAgbmFtZTogJ3NhbXBsZSBuYW1lJywKICAgICAgICBkZXNjcmlwdGlvbjogJ3NhbXBsZSBkZXNjcmlwdGlvbicsCiAgICAgICAgcHJpY2U6ICdzYW1wbGUgcHJpY2UnLAogICAgICB9OwogICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5jcmVhdGVQcm9kdWN0KGNyZWF0ZVByb2R1Y3REdG8pOwogICAgICBleHBlY3QocHJvZHVjdFJlcG9zaXRvcnkuY3JlYXRlUHJvZHVjdCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoCiAgICAgICAgY3JlYXRlUHJvZHVjdER0bywKICAgICAgKTsKICAgICAgZXhwZWN0KHJlc3VsdCkudG9FcXVhbCgnc29tZVByb2R1Y3QnKTsKICAgIH0pOwogIH0pOwoKICBkZXNjcmliZSgnZ2V0UHJvZHVjdHMnLCAoKSA9JmFtcDtndDsgewogICAgaXQoJ3Nob3VsZCBnZXQgYWxsIHByb2R1Y3RzJywgYXN5bmMgKCkgPSZhbXA7Z3Q7IHsKICAgICAgcHJvZHVjdFJlcG9zaXRvcnkuZmluZC5tb2NrUmVzb2x2ZWRWYWx1ZSgnc29tZVByb2R1Y3RzJyk7CiAgICAgIGV4cGVjdChwcm9kdWN0UmVwb3NpdG9yeS5maW5kKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpOwogICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5nZXRQcm9kdWN0cygpOwogICAgICBleHBlY3QocHJvZHVjdFJlcG9zaXRvcnkuZmluZCkudG9IYXZlQmVlbkNhbGxlZCgpOwogICAgICBleHBlY3QocmVzdWx0KS50b0VxdWFsKCdzb21lUHJvZHVjdHMnKTsKICAgIH0pOwogIH0pOwp9KTsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Rmlyc3QsIHdlIGltcG9ydGVkIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtUZXN0Jmx0Oy9jb2RlJmd0OyBhbmQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7VGVzdGluZ01vZHVsZSZsdDsvY29kZSZndDsgcGFja2FnZXMgZnJvbSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtAbmVzdGpzL3Rlc3RpbmcmbHQ7L2NvZGUmZ3Q7IG1vZHVsZS4gVGhpcyBwcm92aWRlcyB0aGUgbWV0aG9kICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NyZWF0ZVRlc3RpbmdNb2R1bGUmbHQ7L2NvZGUmZ3Q7LCB3aGljaCBjcmVhdGVzIGEgdGVzdGluZyBtb2R1bGUgdGhhdCB3aWxsIGFjdCBhcyB0aGUgbW9kdWxlIGRlZmluZWQgZWFybGllciB3aXRoaW4gdGhlIHRlc3QuIEluIHRoaXMgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGVzdGluZ01vZHVsZSZsdDsvY29kZSZndDsgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Byb3ZpZGVycyZsdDsvY29kZSZndDsgYXJyYXkgaXMgY29tcG9zZWQgb2YgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7UHJvZHVjdFNlcnZpY2UmbHQ7L2NvZGUmZ3Q7IGFuZCBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O21vY2tQcm9kdWN0UmVwb3NpdG9yeSZsdDsvY29kZSZndDsgdG8gbW9jayB0aGUgY3VzdG9tICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O1Byb2R1Y3RSZXBvc2l0b3J5Jmx0Oy9jb2RlJmd0OyB1c2luZyBhIGZhY3RvcnkuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7V2UgdGhlbiBjcmVhdGVkIHR3byBkaWZmZXJlbnQgY29tcG9uZW50cyBvZiB0aGUgdGVzdCBzdWl0ZSB0byBlbnN1cmUgdGhhdCB3ZSBjYW4gY3JlYXRlIGEgcHJvZHVjdCBhbmQgcmV0cmlldmUgdGhlIGxpc3RzIG9mIHByb2R1Y3RzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0xldOKAmXMgYWRkIGEgY291cGxlIG1vcmUgc2NyaXB0cyB0byB0ZXN0IHRoZSBmdW5jdGlvbmFsaXR5IG9mIHJldHJpZXZpbmcgYW5kIGRlbGV0aW5nIGEgc2luZ2xlIHByb2R1Y3Qgd2l0aGluIHRoZSBhcHBsaWNhdGlvbi4gU3RpbGwgd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwcm9kdWN0LnNlcnZpY2Uuc3BlYy50cyZsdDsvY29kZSZndDsgZmlsZSwgdXBkYXRlIGl0IGJ5IGFkZGluZyB0aGUgZm9sbG93aW5nIGNvZGUganVzdCBiZWxvdyBvdXIgZXhpc3RpbmcgdGVzdCBzY3JpcHQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtpbXBvcnQgeyBUZXN0LCBUZXN0aW5nTW9kdWxlIH0gZnJvbSAnQG5lc3Rqcy90ZXN0aW5nJzsKaW1wb3J0IHsgUHJvZHVjdFNlcnZpY2UgfSBmcm9tICcuL3Byb2R1Y3Quc2VydmljZSc7CmltcG9ydCB7IFByb2R1Y3RSZXBvc2l0b3J5IH0gZnJvbSAnLi9wcm9kdWN0LnJlcG9zaXRvcnknOwppbXBvcnQgeyBOb3RGb3VuZEV4Y2VwdGlvbiB9IGZyb20gJ0BuZXN0anMvY29tbW9uJzsKCmRlc2NyaWJlKCdQcm9kdWN0U2VydmljZScsICgpID0mYW1wO2d0OyB7CiAgLi4uCiAgZGVzY3JpYmUoJ2dldFByb2R1Y3QnLCAoKSA9JmFtcDtndDsgewogICAgaXQoJ3Nob3VsZCByZXRyaWV2ZSBhIHByb2R1Y3Qgd2l0aCBhbiBJRCcsIGFzeW5jICgpID0mYW1wO2d0OyB7CiAgICAgIGNvbnN0IG1vY2tQcm9kdWN0ID0gewogICAgICAgIG5hbWU6ICdUZXN0IG5hbWUnLAogICAgICAgIGRlc2NyaXB0aW9uOiAnVGVzdCBkZXNjcmlwdGlvbicsCiAgICAgICAgcHJpY2U6ICdUZXN0IHByaWNlJywKICAgICAgfTsKICAgICAgcHJvZHVjdFJlcG9zaXRvcnkuZmluZE9uZS5tb2NrUmVzb2x2ZWRWYWx1ZShtb2NrUHJvZHVjdCk7CiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmdldFByb2R1Y3QoMSk7CiAgICAgIGV4cGVjdChyZXN1bHQpLnRvRXF1YWwobW9ja1Byb2R1Y3QpOwogICAgICBleHBlY3QocHJvZHVjdFJlcG9zaXRvcnkuZmluZE9uZSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoMSk7CiAgICB9KTsKCiAgICBpdCgndGhyb3dzIGFuIGVycm9yIGFzIGEgcHJvZHVjdCBpcyBub3QgZm91bmQnLCAoKSA9JmFtcDtndDsgewogICAgICBwcm9kdWN0UmVwb3NpdG9yeS5maW5kT25lLm1vY2tSZXNvbHZlZFZhbHVlKG51bGwpOwogICAgICBleHBlY3QocHJvZHVjdFNlcnZpY2UuZ2V0UHJvZHVjdCgxKSkucmVqZWN0cy50b1Rocm93KE5vdEZvdW5kRXhjZXB0aW9uKTsKICAgIH0pOwogIH0pOwoKICBkZXNjcmliZSgnZGVsZXRlUHJvZHVjdCcsICgpID0mYW1wO2d0OyB7CiAgICBpdCgnc2hvdWxkIGRlbGV0ZSBwcm9kdWN0JywgYXN5bmMgKCkgPSZhbXA7Z3Q7IHsKICAgICAgcHJvZHVjdFJlcG9zaXRvcnkuZGVsZXRlLm1vY2tSZXNvbHZlZFZhbHVlKDEpOwogICAgICBleHBlY3QocHJvZHVjdFJlcG9zaXRvcnkuZGVsZXRlKS5ub3QudG9IYXZlQmVlbkNhbGxlZCgpOwogICAgICBhd2FpdCBwcm9kdWN0U2VydmljZS5kZWxldGVQcm9kdWN0KDEpOwogICAgICBleHBlY3QocHJvZHVjdFJlcG9zaXRvcnkuZGVsZXRlKS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgxKTsKICAgIH0pOwogIH0pOwp9KTsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VG8gZ2V0IGEgcGFydGljdWxhciBwcm9kdWN0LCB3ZSBzaW1wbHkgY3JlYXRlZCBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O21vY2tQcm9kdWN0Jmx0Oy9jb2RlJmd0OyB3aXRoIHNvbWUgZGVmYXVsdCBkZXRhaWxzIGFuZCB2ZXJpZmllZCB0aGF0IHdlIGNhbiByZXRyaWV2ZSBhbmQgZGVsZXRlIGEgcHJvZHVjdC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtDaGVjayAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9DSVJDTEVDSS1HV1AvbmVzdC1zdGFydGVyLXRlc3RpbmcvYmxvYi9tYXN0ZXIvc3JjL3Byb2R1Y3QvcHJvZHVjdC5zZXJ2aWNlLnNwZWMudHMmcXVvdDsmZ3Q7aGVyZSBvbiBHaXRIdWImbHQ7L2EmZ3Q7IGZvciB0aGUgY29tcGxldGUgdGVzdCBzY3JpcHQuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1J1bm5pbmcgdGhlIHRlc3QgbG9jYWxseSZsdDsvaDImZ3Q7CgombHQ7cCZndDtCZWZvcmUgcnVubmluZyB0aGUgdGVzdCwgeW91IHNob3VsZCBkZWxldGUgdGhlIHRlc3QgZmlsZSBjcmVhdGVkIGZvciB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7QXBwQ29udHJvbGxlciZsdDsvY29kZSZndDsgbG9jYXRlZCBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzcmMvYXBwLmNvbnRyb2xsZXIuc3BlYy50cyZsdDsvY29kZSZndDssIHlvdSBjYW4gY3JlYXRlIHRoaXMgbWFudWFsbHkgbGF0ZXIgaWYgeW91IHdpc2ggdG8gd3JpdGUgYSB0ZXN0IGZvciBpdC4gTm93LCBnbyBhaGVhZCBhbmQgcnVuIHRoZSB0ZXN0IHdpdGg6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtucG0gcnVuIHRlc3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7WW91IHdpbGwgc2VlIHRoZSBmb2xsb3dpbmcgb3V0cHV0LiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7IFBBU1MgIHNyYy9wcm9kdWN0L3Byb2R1Y3Quc2VydmljZS5zcGVjLnRzCiAgUHJvZHVjdFNlcnZpY2UKICAgIGNyZWF0ZVByb2R1Y3QKICAgICAg4pyTIHNob3VsZCBzYXZlIGEgcHJvZHVjdCBpbiB0aGUgZGF0YWJhc2UgKDExbXMpCiAgICBnZXRQcm9kdWN0cwogICAgICDinJMgc2hvdWxkIGdldCBhbGwgcHJvZHVjdHMgKDJtcykKICAgIGdldFByb2R1Y3QKICAgICAg4pyTIHNob3VsZCByZXRyaWV2ZSBhIHByb2R1Y3Qgd2l0aCBhbiBJRCAoMm1zKQogICAgICDinJMgdGhyb3dzIGFuIGVycm9yIGFzIGEgcHJvZHVjdCBpcyBub3QgZm91bmQgKDRtcykKICAgIGRlbGV0ZVByb2R1Y3QKICAgICAg4pyTIHNob3VsZCBkZWxldGUgcHJvZHVjdCAoMm1zKQoKVGVzdCBTdWl0ZXM6IDEgcGFzc2VkLCAxIHRvdGFsClRlc3RzOiAgICAgICA1IHBhc3NlZCwgNSB0b3RhbApTbmFwc2hvdHM6ICAgMCB0b3RhbApUaW1lOiAgICAgICAgMS45NTFzLCBlc3RpbWF0ZWQgM3MKUmFuIGFsbCB0ZXN0IHN1aXRlcy4KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMS10ZXN0LXJlc3VsdC10ZXJtaW5hbC5wbmcmcXVvdDsgYWx0PSZxdW90O1Rlc3QgcmVzdWx0IHRlcm1pbmFsJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0F1dG9tYXRpbmcgdGhlIHRlc3RzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0F0IHRoaXMgcG9pbnQsIHdlIGhhdmUgZnVsbHkgYnVpbHQgYSBjb21wbGV0ZSB3b3JraW5nIFJFU1RmdWwgQVBJIHdpdGggTmVzdC5qcyBhbmQgd3JvdGUgdGhlIHRlc3RzIGZvciBpdHMgYnVzaW5lc3MgbG9naWMuIFRoZSBuZXh0IHRoaW5nIHRvIGRvIGlzIHRvIGFkZCB0aGUgY29uZmlndXJhdGlvbiBmaWxlIHRvIHNldCB1cCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2NvbnRpbnVvdXMtaW50ZWdyYXRpb24vJnF1b3Q7Jmd0O2NvbnRpbnVvdXMgaW50ZWdyYXRpb24mbHQ7L2EmZ3Q7IHdpdGggQ2lyY2xlQ0kuIFRoaXMgd2lsbCBoZWxwIGVuc3VyZSB0aGF0IGEgc3Vic2VxdWVudCB1cGRhdGUgb24gb3VyIGNvZGUgd2lsbCBub3QgYnJlYWsgYW55IGV4aXN0aW5nIGZ1bmN0aW9uYWxpdHkgYXMgb3VyIHRlc3RzIHdpbGwgcnVuIGF1dG9tYXRpY2FsbHkgb25jZSB3ZSBwdXNoIHRvIGEgR2l0SHViIHJlcG9zaXRvcnkuIFRoZSByZXBvc2l0b3J5IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgbmV4dCBzZWN0aW9uLiBUbyBiZWdpbiwgY3JlYXRlIGEgZm9sZGVyIGNhbGxlZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuY2lyY2xlY2kmbHQ7L2NvZGUmZ3Q7IGFuZCBjcmVhdGUgYSBuZXcgZmlsZSBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OyB3aXRoaW4gaXQuIE9wZW4gdGhlIG5ldyBmaWxlIGFuZCBwYXN0ZSB0aGUgZm9sbG93aW5nIGNvZGUgaW50byBpdDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246IDIuMQpvcmJzOgogIG5vZGU6IGNpcmNsZWNpL25vZGVAMy4wLjAKam9iczoKICBidWlsZC1hbmQtdGVzdDoKICAgIGV4ZWN1dG9yOgogICAgICBuYW1lOiBub2RlL2RlZmF1bHQKICAgIHN0ZXBzOgogICAgICAtIGNoZWNrb3V0CiAgICAgIC0gbm9kZS9pbnN0YWxsLXBhY2thZ2VzCiAgICAgIC0gcnVuOgogICAgICAgICAgY29tbWFuZDogbnBtIHJ1biB0ZXN0CndvcmtmbG93czoKICBidWlsZC1hbmQtdGVzdDoKICAgIGpvYnM6CiAgICAgIC0gYnVpbGQtYW5kLXRlc3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SGVyZSwgd2Ugc3BlY2lmaWVkIHRoZSB2ZXJzaW9uIG9mIENpcmNsZUNJIHRvIHVzZSBhbmQgdXNlZCBDaXJjbGVDSSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2NpcmNsZWNpL25vZGUmcXVvdDsmZ3Q7Tm9kZSBvcmImbHQ7L2EmZ3Q7IHRvIHNldCB1cCBhbmQgaW5zdGFsbCBOb2RlLmpzLiBXZSB0aGVuIHByb2NlZWRlZCB0byBpbnN0YWxsIGFsbCB0aGUgZGVwZW5kZW5jaWVzIGZvciB0aGUgcHJvamVjdC4gVGhlIGZpbmFsIGNvbW1hbmQgaXMgdGhlIGFjdHVhbCB0ZXN0IGNvbW1hbmQsIHdoaWNoIHJ1bnMgb3VyIHRlc3QuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0NyZWF0ZSBhIEdpdEh1YiByZXBvc2l0b3J5Jmx0Oy9oMyZndDsKCiZsdDtwJmd0O1RvIGZhY2lsaXRhdGUgdGhlIGNvbnRpbnVvdXMgaW50ZWdyYXRpb24gcHJvY2VzcywgbmF2aWdhdGUgdG8gR2l0SHViLCBhbmQgY3JlYXRlIGEgbmV3IHJlcG9zaXRvcnkgd2l0aCBhIHNpbWlsYXIgbmFtZSB0byB5b3VyIHByb2plY3QsIGluIHRoaXMgY2FzZSwgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bmVzdC1zdGFydGVyLXRlc3RpbmcmbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtcmVwb3NpdG9yeS1wYWdlLnBuZyZxdW90OyBhbHQ9JnF1b3Q7UmVwb3NpdG9yeSBwYWdlJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgaW5pdGlhbGl6ZSBHaXQgbG9jYWxseSBieSBydW5uaW5nIHRoaXMgY29tbWFuZCBmcm9tIHRoZSByb290IGRpcmVjdG9yeSBvZiB5b3VyIHByb2plY3Q6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtnaXQgaW5pdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtOb3cgY29tbWl0IGFsbCB5b3VyIGNoYW5nZXMsIGFkZCB0aGUgcmVwb3NpdG9yeSwgYW5kIHB1c2ggdGhlIHByb2plY3QgdG8gR2l0SHViIHdpdGg6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtnaXQgYWRkIC4KZ2l0IGNvbW1pdCAtbSAmcXVvdDtJbml0aWFsIGNvbW1pdCZxdW90OwpnaXQgcmVtb3RlIGFkZCBvcmlnaW4gaHR0cHM6Ly9naXRodWIuY29tLyZhbXA7bHQ7eW91cl91c2VybmFtZSZhbXA7Z3Q7LyZhbXA7bHQ7cmVwb19uYW1lJmFtcDtndDsgKEluIG15IGNhc2UgYGh0dHBzOi8vZ2l0aHViLmNvbS95ZW1pd2ViYnkvbmVzdC1zdGFydGVyLXRlc3RpbmdgKQpnaXQgcHVzaCAtdSBvcmlnaW4gbWFzdGVyCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O09uY2UgdGhpcyBwcm9jZXNzIGlzIGNvbXBsZXRlLCB5b3Ugd2lsbCBoYXZlIHlvdXIgbG9jYWwgcmVwb3NpdG9yeSBsaW5rZWQgdG8geW91ciByZW1vdGUgcmVwb3NpdG9yeSBvbiBHaXRIdWIuJmx0Oy9wJmd0OwoKJmx0O2gzJmd0O0FkZCBwcm9qZWN0Jmx0Oy9oMyZndDsKCiZsdDtwJmd0O0NyZWF0ZSBhbiBhY2NvdW50IG9uIENpcmNsZUNJIGJ5IG5hdmlnYXRpbmcgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9zaWdudXAvJnF1b3Q7Jmd0O3RvIHRoaXMgcGFnZSZsdDsvYSZndDsuIE5leHQsIGlmIHlvdeKAmXJlIHBhcnQgb2YgYW55IG9yZ2FuaXphdGlvbiwgeW91IHdpbGwgbmVlZCB0byBzZWxlY3QgdGhlIG9yZ2FuaXphdGlvbiB5b3Ugd2lzaCB0byB3b3JrIHVuZGVyIHRvIHNldCB1cCB5b3VyIHJlcG9zaXRvcnkgd2l0aCBDaXJjbGVDSS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtPbmNlIHlvdeKAmXJlIG9uIHRoZSBwcm9qZWN0IHBhZ2UsIGZpbmQgdGhlIHByb2plY3QgdGhhdCB3ZSBjcmVhdGVkIG9uIEdpdEh1YiBlYXJsaWVyIGFuZCBjbGljayAmbHQ7c3Ryb25nJmd0O1NldCBVcCBQcm9qZWN0Jmx0Oy9zdHJvbmcmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtdGVzdC1wcm9qZWN0LXBhZ2UucG5nJnF1b3Q7IGFsdD0mcXVvdDtQcm9qZWN0IHBhZ2UmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgc2hvdyB5b3UgYSBjb25maWd1cmF0aW9uIHBhZ2Ugd2l0aCB0aGUgZGV0YWlscyBmcm9tIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb25maWcueW1sJmx0Oy9jb2RlJmd0OyBmaWxlIHRoYXQgd2FzIGNyZWF0ZWQgZWFybGllci4gTm93IGNsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMS1zdGFydC1idWlsZGluZy1wYWdlLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgYnVpbGRpbmcgcGFnZSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0ZvbGxvdyB0aGUgcHJvbXB0IGFuZCBjbGljayAmbHQ7c3Ryb25nJmd0O0FkZCBNYW51YWxseSZsdDsvc3Ryb25nJmd0Oywgc2luY2Ugd2UgaW5jbHVkZWQgdGhlIGNvbmZpZ3VyYXRpb24gZmlsZSBhbHJlYWR5LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtYWRkLW1hbnVhbGx5LXBhZ2UucG5nJnF1b3Q7IGFsdD0mcXVvdDtBZGQgbWFudWFsbHkgcGFnZSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsgb24gdGhlIG5leHQgcHJvbXB0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtc3RhcnQtYnVpbGRpbmctcHJvbXB0LnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgYnVpbGRpbmcgcHJvbXB0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7WW91IHdpbGwgYmUgdGFrZW4gdG8gdGhlIHBpcGVsaW5lcyBwYWdlIHdoZXJlIHlvdSBjYW4gdmlldyB5b3VyIG5ld2x5IHJ1bm5pbmcgYnVpbGQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMS1waXBlbGluZS1wYWdlLnBuZyZxdW90OyBhbHQ9JnF1b3Q7UGlwZWxpbmUgcGFnZSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIHNlZSB5b3VyIHBpcGVsaW5lIHN0YXJ0IHRvIHJ1biBhdXRvbWF0aWNhbGx5IGFuZCBwYXNzISZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDEtYnVpbGQtcGFnZS5wbmcmcXVvdDsgYWx0PSZxdW90O0J1aWxkIHBhZ2UmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtZb3UgY2FuIGFsc28gY2xpY2sgb24gdGhlIHdvcmtmbG93IHRvIHNlZSB0aGUgZGV0YWlscyBvZiB0aGUgYnVpbGQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wMS10ZXN0LXJlc3VsdC1wYWdlLnBuZyZxdW90OyBhbHQ9JnF1b3Q7VGVzdCByZXN1bHQgcGFnZSZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoaXMgaXMgZ3JlYXQuIEFsbCB0aGUgdGVzdHMgcmFuIHN1Y2Nlc3NmdWxseSBhbmQgc2hvd2VkIG91dHB1dHMgc2ltaWxhciB0byB3aGF0IHdlIGhhZCB3aGVuIHRoZSB0ZXN0IHdhcyBydW4gbG9jYWxseS4gU3Vic2VxdWVudGx5LCBhbGwgeW91IGhhdmUgdG8gZG8gaXMgYWRkIG1vcmUgZmVhdHVyZXMgdG8geW91ciBwcm9qZWN0LCB3cml0ZSBtb3JlIHRlc3RzLCBhbmQgcHVzaCB0byBHaXRIdWIuIFRoZSBjb250aW51b3VzIGludGVncmF0aW9uIHBpcGVsaW5lIHdpbGwgYXV0b21hdGljYWxseSBydW4gYW5kIHRoZSB0ZXN0cyB3aWxsIGJlIGV4ZWN1dGVkLiZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25jbHVzaW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O05lc3QuanMgZW5jb3VyYWdlcyBhbmQgZW5mb3JjZXMgZXhjZWxsZW50IHN0cnVjdHVyZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy4gSXQgaGVscHMgaW4gb3JnYW5pemluZyB0aGluZ3MgYW5kIGZvbGxvd2luZyBiZXN0IHByYWN0aWNlcy4gSW4gdGhpcyB0dXRvcmlhbCwgd2UgbGVhcm5lZCBob3cgdG8gYnVpbGQgUkVTVGZ1bCBBUElzIHdpdGggTmVzdC5qcyBhbmQgdGVzdCBmdW5jdGlvbmFsaXR5IHVzaW5nIFBvc3RtYW4uIEZpbmFsbHksIHdlIHdyb3RlIGEgY291cGxlIG9mIHRlc3RzIGFuZCBhdXRvbWF0ZWQgdGhlbSB1c2luZyBDaXJjbGVDSS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtXZSBmb2N1c2VkIG1haW5seSBvbiB0ZXN0aW5nIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtQcm9kdWN0U2VydmljZSZsdDsvY29kZSZndDsuIFRoZSBrbm93bGVkZ2UgZ2FpbmVkIGZyb20gaGVyZSB3aGlsZSB3cml0aW5nIHRoYXQgdGVzdCBzdWl0ZSBjYW4gYmUgZWFzaWx5IGV4dGVuZGVkIHRvIG90aGVyIHBhcnRzIG9mIHRoZSBhcHBsaWNhdGlvbiBpZiB5b3Ugd291bGQgbGlrZSB0byBleHBsb3JlIGZ1cnRoZXIuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIGNvbXBsZXRlIHNvdXJjZSBjb2RlIGZvciB0aGlzIGFwcGxpY2F0aW9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL0NJUkNMRUNJLUdXUC9uZXN0LXN0YXJ0ZXItdGVzdGluZyZxdW90OyZndDtpcyBoZXJlIG9uIEdpdEh1YiZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O2hyIC8mZ3Q7CgombHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vdHdpdHRlci5jb20veWVtaXdlYmJ5JnF1b3Q7Jmd0O09sdXllbWkmbHQ7L2EmZ3Q7IGlzIGEgdGVjaCBlbnRodXNpYXN0LCBwcm9ncmFtbWluZyBmcmVhaywgYW5kIGEgd2ViIGRldmVsb3BtZW50IGp1bmtpZSB3aG8gbG92ZXMgdG8gZW1icmFjZSBuZXcgdGVjaG5vbG9neS4mbHQ7L3AmZ3Q7CjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPk1vYmlsZSBhbmQgYnJvd3NlciB0ZXN0aW5nIG9uIENpcmNsZUNJOiBzaW1wbGUgc2V0dXAsIGVhc3kgbWFuYWdlbWVudCwgaW5jcmVhc2VkIGNvbmZpZGVuY2U8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvbW9iaWxlLWFuZC1icm93c2VyLXRlc3Rpbmctb24tY2lyY2xlY2ktc2ltcGxlLXNldHVwLWVhc3ktbWFuYWdlbWVudC1pbmNyZWFzZWQtY29uZmlkZW5jZS88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+TW9uLCAyMiBKdW4gMjAyMCAwNTo1NDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9tb2JpbGUtYW5kLWJyb3dzZXItdGVzdGluZy1vbi1jaXJjbGVjaS1zaW1wbGUtc2V0dXAtZWFzeS1tYW5hZ2VtZW50LWluY3JlYXNlZC1jb25maWRlbmNlLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPk1vcmdhbiBIZW5uZXNzeTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDtUZXN0aW5nIGlzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgcGllY2VzIG9mIHRoZSBkZXZlbG9wbWVudCBsaWZlY3ljbGUsIGJ1dCBpdCBjYW4gYmUgZXh0cmVtZWx5IHRyaWNreSBmb3IgY29tcGFuaWVzIHdpdGggYXBwbGljYXRpb25zIHRoYXQgcnVuIG9uIG1hbnkgZGlmZmVyZW50IGRldmljZXMgb3IgYnJvd3NlcnMuIFBsdXMsIHdyaXRpbmcgdGVzdHMgY2FuIHJlcXVpcmUgYSBodWdlIHRpbWUgaW52ZXN0bWVudCwgd2hpY2ggY2FuIGJlIGEgY2hhbGxlbmdlIGZvciB0ZWFtcyB0cnlpbmcgdG8gZ2V0IHRvIG1hcmtldCBxdWlja2x5LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoYXTigJlzIHdoeSBtYW55IHRlYW1zIHR1cm4gdG8gQ0kvQ0QgdG8gYXV0b21hdGUgYW5kIHN0cmVhbWxpbmUgdGVzdGluZy4gU3RpbGwsIHdyaXRpbmcgZXh0ZW5zaXZlLCB2YWx1YWJsZSB0ZXN0cyBjYW4gYmUgZGlmZmljdWx0LiBUbyBoZWxwIHNvbHZlIHRoaXMgY2hhbGxlbmdlLCB3ZeKAmXZlIHBhcnRuZXJlZCB3aXRoIGEgdmFyaWV0eSBvZiB0ZXN0aW5nIHRvb2xzIHRvIGNyZWF0ZSBwcmUtYnVpbHQgaW50ZWdyYXRpb25zIGZvciBDaXJjbGVDSSB1c2Vycy4gVGhlc2UgYnJvd3NlciBhbmQgbW9iaWxlIHRlc3RpbmcgaW50ZWdyYXRpb25zIGFsbG93IHVzZXJzIHRvIHNhdmUgdGltZSBhbmQgZWZmb3J0IG9uIGJvdGggdGVzdCBjcmVhdGlvbiBhbmQgbWFuYWdlbWVudC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtPdXIgZXh0ZW5zaXZlIGxpc3Qgb2YgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzLyZxdW90OyZndDtvcmJzJmx0Oy9hJmd0OyBoZWxwIHRlYW1zIHNldCB1cCByZWxpYWJsZSB0ZXN0aW5nIHdpdGggbGVzcyBlZmZvcnQuIFdpdGggc28gbWFueSB0ZXN0aW5nIHRvb2xzIGFuZCBwaGlsb3NvcGhpZXMgb24gdGhlIG1hcmtldCB0b2RheSwgd2Ugd2FudCB0byBnaXZlIHRlYW1zIHRoZSBmbGV4aWJpbGl0eSB0aGV5IG5lZWQgdG8gcGljayB0aGUgdG9vbHMgdGhhdCB3b3JrIGJlc3QgZm9yIHRoZW0uIFVsdGltYXRlbHksIHRoZXNlIHByZS1idWlsdCBpbnRlZ3JhdGlvbnMgYXJlIG1lYW50IHRvIGhlbHAgdGVhbXMgc2V0IHVwIHNvcGhpc3RpY2F0ZWQgdGVzdGluZyBxdWlja2x5IGFuZCBlYXNpbHksIHNvIHRoZXkgY2FuIGZvY3VzIG9uIGRldmVsb3BtZW50LiZsdDsvcCZndDsKCiZsdDtwJmd0O0NoZWNrIG91dCBvdXIgd2ViIGFuZCBtb2JpbGUgdGVzdGluZyBvcmJzIHRvIGhlbHAgZmFjaWxpdGF0ZSBhbmQgbWFuYWdlIGJyb3dzZXIgYW5kIG1vYmlsZSBlbnZpcm9ubWVudCB0ZXN0aW5nIGRpcmVjdGx5IGZyb20geW91ciBDSS9DRCBwaXBlbGluZTombHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7QnJvd3NlciB0ZXN0aW5nIGludGVncmF0aW9ucyZsdDsvaDImZ3Q7CgombHQ7dGFibGUmZ3Q7CiAgJmx0O3RoZWFkJmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGgmZ3Q7T3JiIGxpbmsmbHQ7L3RoJmd0OwogICAgICAmbHQ7dGgmZ3Q7T3JiIGRlc2NyaXB0aW9uJmx0Oy90aCZndDsKICAgICZsdDsvdHImZ3Q7CiAgJmx0Oy90aGVhZCZndDsKICAmbHQ7dGJvZHkmZ3Q7CiAgICAmbHQ7dHImZ3Q7CiAgICAgICZsdDt0ZCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2N5cHJlc3MtaW8vY3lwcmVzcyZxdW90OyZndDtDeXByZXNzJmx0Oy9hJmd0OyZsdDsvdGQmZ3Q7CiAgICAgICZsdDt0ZCZndDtSdW4gQ3lwcmVzcy5pbyBlbmQtdG8tZW5kIGJyb3dzZXIgdGVzdHMgd2l0aG91dCBzcGVuZGluZyB0aW1lIGNvbmZpZ3VyaW5nIENpcmNsZUNJLiBUaGlzIG9yYiByZWNvcmRzIHJlc3VsdHMgb24gdGhlIEN5cHJlc3MgRGFzaGJvYXJkIGFuZCBsb2FkIGJhbGFuY2UgdGVzdHMgaW4gcGFyYWxsZWwgbW9kZS4mbHQ7L3RkJmd0OwogICAgJmx0Oy90ciZndDsKICAgICZsdDt0ciZndDsKICAgICAgJmx0O3RkJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vb3Jicy9yZWdpc3RyeS9vcmIvc2F1Y2VsYWJzL3NhdWNlLWNvbm5lY3QmcXVvdDsmZ3Q7U2F1Y2UgTGFicyZsdDsvYSZndDsmbHQ7L3RkJmd0OwogICAgICAmbHQ7dGQmZ3Q7QXV0b21hdGljYWxseSBzZXQgdXAgYSBidWlsdC1pbiBodHRwIHByb3h5IGFsbG93aW5nIGVhc3kgYWNjZXNzIHRvIGRldi9xYSBzaXRlcyB0aGF0IGxpdmUgYmVoaW5kIGEgZmlyZXdhbGwuIFRoZSBwcm94eSBzdGFydHMgYXMgYSBiYWNrZ3JvdW5kIHRhc2sgYXQgdGhlIGJlZ2lubmluZyBvZiBidWlsZHMgYW5kIGVuZHMgdGhlIGNvbm5lY3Rpb24gYXQgdGhlIGVuZC4mbHQ7L3RkJmd0OwogICAgJmx0Oy90ciZndDsKICAgICZsdDt0ciZndDsKICAgICAgJmx0O3RkJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vb3Jicy9yZWdpc3RyeS9vcmIvcmFpbmZvcmVzdC1xYS9yYWluZm9yZXN0JnF1b3Q7Jmd0O1JhaW5mb3Jlc3RRQSZsdDsvYSZndDsmbHQ7L3RkJmd0OwogICAgICAmbHQ7dGQmZ3Q7SW50ZWdyYXRlIGFuZCBydW4gUmFpbmZvcmVzdFFBIHRlc3QgY2FzZXMgd2l0aCBlYWNoIGNvbW1pdC4mbHQ7L3RkJmd0OwogICAgJmx0Oy90ciZndDsKICAgICZsdDt0ciZndDsKICAgICAgJmx0O3RkJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vb3Jicy9yZWdpc3RyeS9vcmIvbGFtYmRhdGVzdC9sYW1iZGEtdHVubmVsJnF1b3Q7Jmd0O0xhbWJkYVRlc3QmbHQ7L2EmZ3Q7Jmx0Oy90ZCZndDsKICAgICAgJmx0O3RkJmd0O1BlcmZvcm0gYXV0b21hdGVkIGNyb3NzLWJyb3dzZXIgdGVzdGluZyBvbiAyMDAwKyBicm93c2VycyAmYW1wO2FtcDsgT1MgYnkgaW50ZWdyYXRpbmcgd2l0aCBMYW1iZGFUZXN0IGluIHlvdXIgQ0kvQ0QgcGlwZWxpbmUuJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgICAmbHQ7dHImZ3Q7CiAgICAgICZsdDt0ZCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2thdGFsb24va2F0YWxvbi1zdHVkaW8mcXVvdDsmZ3Q7S2F0YWxvbiZsdDsvYSZndDsmbHQ7L3RkJmd0OwogICAgICAmbHQ7dGQmZ3Q7UnVuIGF1dG9tYXRlZCB0ZXN0cyBmb3IgYW55IGJyb3dzZXIgaW4gQ0kvQ0Qgd2l0aCB0aGlzIHNlYW1sZXNzIGludGVncmF0aW9uIGJldHdlZW4gS2F0YWxvbiBhbmQgQ2lyY2xlQ0kuIFRoZSBLYXRhbG9uIG9yYiBhbGxvd3MgZm9yIGNyb3NzLWJyb3dzZXIgYW5kIGNyb3NzLXBsYXRmb3JtIHRlc3Rpbmcgd2l0aCBhIHBvd2VyZnVsIGVuZC10by1lbmQgdGVzdGluZyBmcmFtZXdvcmsuJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgICAmbHQ7dHImZ3Q7CiAgICAgICZsdDt0ZCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2hhcHBvL2hhcHBvJnF1b3Q7Jmd0O0hhcHBvJmx0Oy9hJmd0OyZsdDsvdGQmZ3Q7CiAgICAgICZsdDt0ZCZndDtJbnRlZ3JhdGUgc2NyZWVuc2hvdCB0ZXN0cyB2aWEgSGFwcG8uaW8gZGlyZWN0bHkgaW4geW91ciBDSS9DRCBwaXBlbGluZSZsdDsvdGQmZ3Q7CiAgICAmbHQ7L3RyJmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGQmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9jbG91ZGJlYXQvb3h5Z2VuJnF1b3Q7Jmd0O094eWdlbiZsdDsvYSZndDsmbHQ7L3RkJmd0OwogICAgICAmbHQ7dGQmZ3Q7UnVuIGludGVncmF0aW9uIGFuZCBlbmQtdG8tZW5kIHRlc3RzIHVzaW5nIE94eWdlbiBhcyBhIHBhcnQgb2YgeW91ciBDaXJjbGVDSSBidWlsZCBwcm9jZXNzLiZsdDsvdGQmZ3Q7CiAgICAmbHQ7L3RyJmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGQmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9naG9zdGluc3BlY3Rvci90ZXN0LXJ1bm5lciZxdW90OyZndDtHaG9zdCBJbnNwZWN0b3ImbHQ7L2EmZ3Q7Jmx0Oy90ZCZndDsKICAgICAgJmx0O3RkJmd0O0V4ZWN1dGUgR2hvc3QgSW5zcGVjdG9yIGJyb3dzZXIgdGVzdHMgb24geW91ciBDaXJjbGVDSSBwcm9qZWN0cy4mbHQ7L3RkJmd0OwogICAgJmx0Oy90ciZndDsKICAgICZsdDt0ciZndDsKICAgICAgJmx0O3RkJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vb3Jicy9yZWdpc3RyeS9vcmIvdGVzdGltaW8vcnVubmVyJnF1b3Q7Jmd0O1Rlc3RpbSZsdDsvYSZndDsmbHQ7L3RkJmd0OwogICAgICAmbHQ7dGQmZ3Q7UnVuIFRlc3RpbSBlbmQtdG8tZW5kLCBjcm9zcy1icm93c2VyIFVJIHRlc3RzIGF0IGNvZGUgY29tbWl0IG9yIG1lcmdlLCB3aXRob3V0IHNwZW5kaW5nIHRpbWUgY29uZmlndXJpbmcgQ2lyY2xlQ0kuIFRoZSBUZXN0aW0gb3JiIGFsbG93cyB0ZWFtcyB0byBiZW5lZml0IGZyb20gQUktc3RhYmlsaXplZCB0ZXN0cyB3aXRob3V0IGxlYXZpbmcgdGhlaXIgQ2lyY2xlQ0kgd29ya2Zsb3cuJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgJmx0Oy90Ym9keSZndDsKJmx0Oy90YWJsZSZndDsKCiZsdDtoMiZndDtNb2JpbGUgdGVzdGluZyBpbnRlZ3JhdGlvbnMmbHQ7L2gyJmd0OwoKJmx0O3RhYmxlJmd0OwogICZsdDt0aGVhZCZndDsKICAgICZsdDt0ciZndDsKICAgICAgJmx0O3RoJmd0O09yYiBsaW5rJmx0Oy90aCZndDsKICAgICAgJmx0O3RoJmd0O09yYiBkZXNjcmlwdGlvbiZsdDsvdGgmZ3Q7CiAgICAmbHQ7L3RyJmd0OwogICZsdDsvdGhlYWQmZ3Q7CiAgJmx0O3Rib2R5Jmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGQmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9zYXVjZWxhYnMvc2F1Y2UtY29ubmVjdCZxdW90OyZndDtTYXVjZSBMYWJzJmx0Oy9hJmd0OyZsdDsvdGQmZ3Q7CiAgICAgICZsdDt0ZCZndDtBdXRvbWF0aWNhbGx5IHNldCB1cCBhIGJ1aWx0LWluIGh0dHAgcHJveHkgYWxsb3dpbmcgZWFzeSBhY2Nlc3MgdG8gZGV2L3FhIHNpdGVzIHRoYXQgbGl2ZSBiZWhpbmQgYSBmaXJld2FsbC4gVGhlIHByb3h5IHN0YXJ0cyBhcyBhIGJhY2tncm91bmQgdGFzayBhdCB0aGUgYmVnaW5uaW5nIG9mIGJ1aWxkcyBhbmQgZW5kcyB0aGUgY29ubmVjdGlvbiBhdCB0aGUgZW5kLiZsdDsvdGQmZ3Q7CiAgICAmbHQ7L3RyJmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGQmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9yYWluZm9yZXN0LXFhL3JhaW5mb3Jlc3QmcXVvdDsmZ3Q7UmFpbmZvcmVzdFFBJmx0Oy9hJmd0OyZsdDsvdGQmZ3Q7CiAgICAgICZsdDt0ZCZndDtJbnRlZ3JhdGUgYW5kIHJ1biBSYWluZm9yZXN0UUEgdGVzdCBjYXNlcyB3aXRoIGVhY2ggY29tbWl0LiZsdDsvdGQmZ3Q7CiAgICAmbHQ7L3RyJmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGQmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9rYXRhbG9uL2thdGFsb24tc3R1ZGlvJnF1b3Q7Jmd0O0thdGFsb24mbHQ7L2EmZ3Q7Jmx0Oy90ZCZndDsKICAgICAgJmx0O3RkJmd0O0NyZWF0ZSBhbmQgcnVuIG1vYmlsZSB0ZXN0cyBpbiBDSS9DRCB0aHJvdWdoIHRoaXMgc2VhbWxlc3MgaW50ZWdyYXRpb24gYmV0d2VlbiBLYXRhbG9uIGFuZCBDaXJjbGVDSS4gVGhlIEthdGFsb24gb3JiIGVuYWJsZXMgdGVzdGluZyBvbiBhbGwgb3BlcmF0aW5nIHN5c3RlbXMgYW5kIGVudmlyb25tZW50cyB3aXRoIGFuIEFwcGl1bS1jb21wbGlhbnQgdGVzdGluZyBmcmFtZXdvcmsuJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgICAmbHQ7dHImZ3Q7CiAgICAgICZsdDt0ZCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL25vd3NlY3VyZS9jaS1hdXRvLW9yYiZxdW90OyZndDtOb3dTZWN1cmUmbHQ7L2EmZ3Q7Jmx0Oy90ZCZndDsKICAgICAgJmx0O3RkJmd0O0ludGVncmF0ZSBDaXJjbGVDSSB3b3JrZmxvd3Mgd2l0aCB0aGUgTm93U2VjdXJlIG9yYiB0byBhdXRvbWF0aWNhbGx5IGtpY2tvZmYgc2VjdXJpdHkgJmFtcDthbXA7IHByaXZhY3kgdGVzdHMgd2l0aCBldmVyeSBtb2JpbGUgYXBwIGJ1aWxkLiZsdDsvdGQmZ3Q7CiAgICAmbHQ7L3RyJmd0OwogICAgJmx0O3RyJmd0OwogICAgICAmbHQ7dGQmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9nZW55bW90aW9uL2dlbnltb3Rpb24tc2FhcyZxdW90OyZndDtHZW55bW90aW9uJmx0Oy9hJmd0OyZsdDsvdGQmZ3Q7CiAgICAgICZsdDt0ZCZndDtTdGFydCBHZW55bW90aW9uIEFuZHJvaWQgdmlydHVhbCBkZXZpY2UsIGNvbm5lY3QgdGhyb3VnaCBBREIgYW5kIHN0b3AgZGV2aWNlIG9uIEdlbnltb3Rpb24gQ2xvdWQgU2FhUyBmb3IgbW9iaWxlIGF1dG9tYXRpb24gdGVzdGluZyAod2ViICZhbXA7YW1wOyBuYXRpdmUgYXBwbGljYXRpb25zKS4mbHQ7L3RkJmd0OwogICAgJmx0Oy90ciZndDsKICAgICZsdDt0ciZndDsKICAgICAgJmx0O3RkJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vb3Jicy9yZWdpc3RyeS9vcmIvY2xvdWRiZWF0L294eWdlbiZxdW90OyZndDtPeHlnZW4mbHQ7L2EmZ3Q7Jmx0Oy90ZCZndDsKICAgICAgJmx0O3RkJmd0O0ludGVncmF0ZSBzY3JlZW5zaG90IHRlc3RzIHZpYSBIYXBwby5pbyBkaXJlY3RseSBpbiB5b3VyIENJL0NEIHBpcGVsaW5lJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgICAmbHQ7dHImZ3Q7CiAgICAgICZsdDt0ZCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2Nsb3VkYmVhdC9veHlnZW4mcXVvdDsmZ3Q7T3h5Z2VuJmx0Oy9hJmd0OyZsdDsvdGQmZ3Q7CiAgICAgICZsdDt0ZCZndDtSdW4gaW50ZWdyYXRpb24gYW5kIGVuZC10by1lbmQgdGVzdHMgdXNpbmcgT3h5Z2VuIGFzIGEgcGFydCBvZiB5b3VyIENpcmNsZUNJIGJ1aWxkIHByb2Nlc3MuJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgICAmbHQ7dHImZ3Q7CiAgICAgICZsdDt0ZCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL3Rlc3RmYWlyeS91cGxvYWRlciZxdW90OyZndDtUZXN0ZmFpcnkmbHQ7L2EmZ3Q7Jmx0Oy90ZCZndDsKICAgICAgJmx0O3RkJmd0O1VwbG9hZCBBbmRyb2lkIGFuZCBpT1MgYXBwcyB0byBUZXN0RmFpcnkgYW5kIGVhc2lseSBkaXN0cmlidXRlIHRoZW0gdG8gdXNlcnMuJmx0Oy90ZCZndDsKICAgICZsdDsvdHImZ3Q7CiAgJmx0Oy90Ym9keSZndDsKJmx0Oy90YWJsZSZndDsKCiZsdDtwJmd0OyZsdDticiAvJmd0OyZsdDsvcCZndDsKCiZsdDtibG9ja3F1b3RlJmd0OwogICZsdDtwJmd0O+KAnENpcmNsZUNJIGlzIGdyZWF0IGZvciB0aGUgdW5pcXVlIG1vYmlsZS1zcGVjaWZpYyByZXF1aXJlbWVudHMgb2YgbW9iaWxlIERldk9wcyB0ZWFtcy4gVGhleSBwcm92aWRlIGtleSBjYXBhYmlsaXRpZXMgdG8gZW5hYmxlIG5vdCBqdXN0IGFuIGVmZmljaWVudCBkZXYgbGlmZWN5Y2xlLCBidXQgYWxzbyBjb21wbGV0ZSB0aGUgQXBwbGUgQXBwU3RvcmXihKIgYW5kIEdvb2dsZSBQbGF54oSiIHN1Ym1pc3Npb24gcHJvY2Vzc2VzLiBPdXIgbW9iaWxlIGN1c3RvbWVycyBsZXZlcmFnZSBDaXJjbGVDSSB3aXRoIG91ciBOb3dTZWN1cmUgb3JiIGluIHRoZWlyIERldlNlY09wcyBwcm9jZXNzIHRvIGVuc3VyZSBzZWN1cml0eSBpcyBidWlsdCBpbi7igJwgQnJpYW4gQy4gUmVlZCwgQ2hpZWYgTW9iaWxpdHkgT2ZmaWNlciwgTm93U2VjdXJlJmx0Oy9wJmd0OwombHQ7L2Jsb2NrcXVvdGUmZ3Q7CgombHQ7YmxvY2txdW90ZSZndDsKICAmbHQ7cCZndDvigJxUaGUgb3JiIGNvbmNlcHQgZnJvbSBDaXJjbGVDSSBoYXMgbWFkZSBpdCBlYXN5IGZvciB1cyB0byBwcm92aWRlIGEgc2VhbWxlc3MgQ0kvQ0QgZXhlY3V0aW9uIHByb2Nlc3MgZm9yIG91ciB1c2Vycy4gV2l0aCBtaW5pbWFsIHNldHVwIHJlcXVpcmVtZW50cywgS2F0YWxvbiB1c2VycyBhcmUgYWJsZSB0byBleHRlbmQgdGhlaXIgdGVzdGluZyBzY29wZSwgZW5hYmxlIGEgaG9saXN0aWMgQ0kvQ0QgcGlwZWxpbmUsIGFuZCBsZXZlcmFnZSB0aGUgcm9idXN0IHRlc3RpbmcgZnJhbWV3b3JrIGZvciB0aGVpciBwcm9qZWN0cy7igJ0gRHp1bmcgTmdvLCBWUCBvZiBQcm9kdWN0LCBLYXRhbG9uLiZsdDsvcCZndDsKJmx0Oy9ibG9ja3F1b3RlJmd0OwoKJmx0O2Jsb2NrcXVvdGUmZ3Q7CiAgJmx0O3AmZ3Q74oCcVGVzdGltIGlzIHRocmlsbGVkIHRvIHBhcnRuZXIgd2l0aCBDaXJjbGVDSSB0byBoZWxwIG1vZGVybiBkZXZlbG9wbWVudCB0ZWFtcyB0ZXN0IGFuZCByZWxlYXNlIGZhc3Rlci4gVGhpcyBpbnRlZ3JhdGlvbiByZW1vdmVzIGZyaWN0aW9uIGJldHdlZW4gZGV2ZWxvcG1lbnQgYW5kIHRlc3QgcHJvY2Vzc2VzIHRvIHJhaXNlIHNvZnR3YXJlIHF1YWxpdHkgYW5kIHNoaXAgZmFzdGVyLuKAnSBPcmVuIFJ1YmluLCBGb3VuZGVyIGFuZCBDRU8sIFRlc3RpbSZsdDsvcCZndDsKJmx0Oy9ibG9ja3F1b3RlJmd0OwoKJmx0O3AmZ3Q7Q3VyaW91cyB0byBsZWFybiBtb3JlPyBWaXNpdCB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5LyZxdW90OyZndDtPcmIgUmVnaXN0cnkmbHQ7L2EmZ3Q7IG9yIGNoZWNrIG91dCB0aGVzZSBvbi1kZW1hbmQgd2ViaW5hcnM6Jmx0Oy9wJmd0OwombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1KLXhiTnRLZ1hmWSZxdW90OyZndDtDaXJjbGVDSSBhbmQgQ3lwcmVzcy5pbzogRWFzaWx5IGludGVncmF0ZSBlbmQgdG8gZW5kIHdlYiBhcHBsaWNhdGlvbiB0ZXN0aW5nJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1PMFVyQmRQbFpjVSZhbXA7YW1wO3Q9JnF1b3Q7Jmd0O0NpcmNsZUNJIGFuZCBLYXRhb246IEF1dG9tYXRpb24gVGVzdGluZyBvbiB0aGUgQ2xvdWQgRGV2T3BzIOKAkyBSZW1vdGUgV29ya2luZyBNYWRlIEVhc2llciZsdDsvYSZndDsmbHQ7L2xpJmd0OwombHQ7L3VsJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5FbWJyYWNpbmcgZ3Jvd3RoIGFuZCBkYXRhOiA1IHRpcHMgZm9yIHByb2R1Y3QgZGVzaWduZXJzPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2VtYnJhY2luZy1ncm93dGgtYW5kLWRhdGEtNS10aXBzLWZvci1wcm9kdWN0LWRlc2lnbmVycy88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+VGh1LCAxOCBKdW4gMjAyMCAwOTowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9lbWJyYWNpbmctZ3Jvd3RoLWFuZC1kYXRhLTUtdGlwcy1mb3ItcHJvZHVjdC1kZXNpZ25lcnMvPC9ndWlkPgogICAgICAgIAogICAgICAgICAgPGRjOmNyZWF0b3I+RGFuIEJlZXJlPC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0O0RhdGEgaGFzIHRoZSBwb3dlciB0byBkZW1vbnN0cmF0ZSB0aGUgaW1wYWN0IGFuZCB2YWx1ZSBvZiBkZXNpZ24g4oCUIGFuIGV2ZXItZ3Jvd2luZyB0b3BpYyBpbiB0aGUgZGVzaWduIHdvcmxkLiBUb29scyBsaWtlIEFtcGxpdHVkZSBhbmQgT3B0aW1pemVseSBjYW4gZW5hYmxlIGRlc2lnbmVycyB0byB1bmRlcnN0YW5kIGFuZCBtZWFzdXJlIHRoZWlyIGltcGFjdC4gQXMgYSBkZXNpZ25lciB3aG8gZW1icmFjZXMgZ3Jvd3RoLCBteSB0ZWFtIGFuZCBJIGhhdmUgbGVhcm5lZCBhIGxvdCBhYm91dCBhcHBseWluZyBhIGdyb3d0aCBtaW5kc2V0IHRvIHNvbWUgb2Ygb3VyIHJlY2VudCBpbml0aWF0aXZlcy4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRlIGdvYWxzIGFuZCBmaW5kIGZvY3VzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0Rlc2lnbiBpcyBmYXIgbW9yZSBpbXBhY3RmdWwgd2hlbiB5b3UgZm9jdXMgb24gYSBnb2FsIGZvciBncm93dGguIEtub3dpbmcgeW91ciBncm93dGggbWV0cmljcyB3aWxsIGRyaXZlIGJ1c2luZXNzIHZhbHVlIGFuZCB3aWxsIGhlbHAgeW91IHVuZGVyc3RhbmQgdGhlIGltcGFjdCBvZiB5b3VyIGV4cGVyaW1lbnRzLiBGbHlpbmcgYmxpbmQgbWFrZXMgaXQgZGlmZmljdWx0IHRvIHBpbnBvaW50IHdoYXTigJlzIGhhcHBlbmluZyBpbiB0aGUgZWNvc3lzdGVtIGFuZCBhcyB0aGUgY29tcGFueSBzY2FsZXMsIHRoaXMgcHJvYmxlbSB3aWxsIHBlcnNpc3QgaW4gbGFyZ2VyIHdheXMuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7UHJpb3JpdGl6ZSB3b3JrIHRoYXQgd2lsbCBkcml2ZSB5b3VyIHRlYW0gdG93YXJkcyBpdHMgZ29hbCBhbmQgbWluaW1pemUgZGlzdHJhY3Rpb25zIGxpa2UgYnVncywgdGVjaCBkZWJ0IGFuZCBvdGhlciBnZW5lcmFsIGNsZWFuIHVwIGNhcmRzLiBBcyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vbGV4cm9tYW4uY29tL2Jsb2cvMjAxOS85LzMwL3ByYWN0aWNpbmctZ3Jvd3RoLWRlc2lnbiZxdW90OyZndDtMZXggUm9tYW4mbHQ7L2EmZ3Q7IHNheXMsIOKAnFdoZW4geW914oCZcmUgdHJ5aW5nIHRvIG1vdmUgc2lnbnVwcywgcmV0ZW50aW9uLCByZXZlbnVlLCByZWZlcnJhbHMsIHlvdSBoYXZlIHRvIGxhc2VyIGZvY3VzIG9uIHRoYXQgdGhpbmcuIE5vdywgYXMgYSBkZXNpZ25lciwgeW91IG1heSBub3QgYmUgbGVhZGluZyBnb2FsIHNldHRpbmcsIGJ1dCBpZiB5b3VyIHRlYW0gaXMgdGFraW5nIG9uIGZpdmUgZ29hbHMsIHlvdeKAmXJlIG5vdCBnb2luZyB0byBoaXQgdGhlbS4gQmVpbmcgYWJsZSB0byBoZWxwIHlvdXIgdGVhbSBmb2N1cyBvbiB0aGUgaGlnaCBpbXBhY3Qgc3R1ZmYgaXMgY3JpdGljYWwgdG8gc3VjY2Vzcy7igJ0mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7RGVmaW5lIHByb2JsZW1zIGFuZCBpbnZlc3RpZ2F0ZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtXb3JrIHdpdGggeW91ciBwcm9kdWN0IG1hbmFnZXIgYW5kIGRhdGEgYW5hbHlzdCB0byBpbnZlc3RpZ2F0ZSBwcm9ibGVtIGFyZWFzIGFuZCBvcHBvcnR1bml0aWVzIHVzaW5nIGFuYWx5dGljcy4gVXNlciBqb3VybmV5IGRyb3Atb2Zmcz8gT3JnYW5pemF0aW9ucyBub3QgYmVjb21pbmcgZW5nYWdlZD8gV2h5PyBXaGF0IGFyZSBzaWducyBvZiBlbmdhZ2VkIGFuZCByZXRhaW5lZCBvcmdhbml6YXRpb25zPyBFYXJseSBvbiBJIGZvdW5kIGl0IGRpZmZpY3VsdCB0byB1bmRlcnN0YW5kIHF1YW50aXRhdGl2ZSBkYXRhIHJlcG9ydHMsIHNvIGRvbuKAmXQgYmUgc2h5IGFib3V0IGFza2luZyBmb3IgaGVscC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtVc2UgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2FtcGxpdHVkZS5jb20mcXVvdDsmZ3Q7QW1wbGl0dWRlJmx0Oy9hJmd0OyB0byB1bmRlcnN0YW5kIGRyb3Atb2ZmIHJhdGVzIGJldHdlZW4gZWFjaCBzdGVwIGluIHRoZSB1c2VyIGpvdXJuZXkgYW5kIGlmIHRoZSBkYXRhIGluZGljYXRlcyB0aGUgcHJvYmxlbSBpcyBiaWcgZW5vdWdoLCBtYWtlIGl0IGEgcHJpb3JpdHkgdG8gZmluZCBhIHNvbHV0aW9uLiBPdXIgdGVhbSB1c2VzICAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL2FtcGxpdHVkZS1pbnN0cnVtZW50YXRpb24vYWNlaGZqaG5taGJtZ2tlZGptamxvYnBnZGljbmhrYnAmcXVvdDsmZ3Q7QW1wbGl0dWRlIEV4dGVuc2lvbiZsdDsvYSZndDsgdG8gY29uZmlybSBldmVudCBhbmQgcHJvcGVydHkgbmFtZXMsIGFuZCBjcmVhdGUgY2hhcnRzIHRvIGFuYWx5emUuIEZ1bm5lbCBBbmFseXNpcywgRXZlbnQgU2VnbWVudGF0aW9uIGFuZCBQYXRoZmluZGVyIGNoYXJ0IHR5cGVzIGFyZSB1c2VmdWwgZm9yIHNob3dpbmcgdXNlciBwYXRocy4gRm9sbG93IHVwIHRoaXMgZGF0YSBpbnZlc3RpZ2F0aW9uIHdpdGggcXVhbGl0YXRpdmUgcmVzZWFyY2ggdG8gYmV0dGVyIHVuZGVyc3RhbmQgcGFpbiBwb2ludHMgYW5kIGdyb3d0aCBvcHBvcnR1bml0aWVzIG9uIHRob3NlIHBhdGhzLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMTctZ3Jvd3RoMS5wbmcmcXVvdDsgYWx0PSZxdW90OyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMTctZ3Jvd3RoMi5wbmcmcXVvdDsgYWx0PSZxdW90OyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1F1YWxpdGF0aXZlIHJlc2VhcmNoIGlzIGFsc28gaGVscGZ1bCBmb3IgZmluZGluZyBhbmVjZG90ZXMgYW5kIGludmVzdGlnYXRpbmcgd2hldGhlciB0aGV5IGFyZSBiYWNrZWQgYnkgZGF0YS4gVGhlc2UgY2FuIGZvcm0gZXhwZXJpbWVudCBpZGVhcyBhbmQgaHlwb3RoZXNlcy4gU29tZSBvZiBvdXIgcXVhbGl0YXRpdmUgcmVzZWFyY2ggc2hvd2VkIHRoYXQgc2V0dXAgYW5kIGNvbmZpZ3VyYXRpb24gb24gQ2lyY2xlQ0kgd2VyZSBwcm9ibGVtYXRpYy4gVXNlcnMgd2VyZSBoaXR0aW5nIGVycm9ycyBvbiB0aGVpciBmaXJzdCBidWlsZCwgbGlrZSBoYXZpbmcgdGhlaXIgY29uZmlnIGZpbGUgbG9jYXRlZCBpbiB0aGUgd3JvbmcgcmVwbyBsb2NhdGlvbiBvciBpbmNvcnJlY3RseSBuYW1pbmcgdGhlIGRpcmVjdG9yeS4gT3VyIGRhdGEgYW5hbHlzdCB0aGVuIGNvbmZpcm1lZCB0aGF0IGVycm9ycyByZWxhdGluZyB0byDigJxubyBjb25maWfigJ0gbWFkZSB1cCB0aGUgbWFqb3JpdHkgb2Ygd2h5IGZpcnN0IFBpcGVsaW5lIHJ1bnMgZmFpbGVkLiZsdDsvcCZndDsKCiZsdDtwJmd0O1VuZGVyc3RhbmQgd2hpY2ggbGV2ZXJzIGFyZSBpbXBhY3RpbmcgbWV0cmljcyBhbmQgdG8gd2hhdCBkZWdyZWUsIHNvIHlvdSBjYW4gYW1wbGlmeSBpbXBhY3QgYW5kIGRyaXZlIGdyb3d0aC4gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PTc5QVBTbjR6c1NvJnF1b3Q7Jmd0O1Bhb2xvIEVydHJlbyZsdDsvYSZndDsgdG91Y2hlcyBvbiB0aGlzIGluIGhpcyBncmVhdCBwcmVzZW50YXRpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0xNy1ncm93dGgzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2RpdiBzdHlsZT0mcXVvdDt0ZXh0LWFsaWduOiBjZW50ZXImcXVvdDsmZ3Q7IENyZWRpdCB0byAKICAgICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj03OUFQU240enNTbyZxdW90OyBzdHlsZT0mcXVvdDtjb2xvcjojMDAwMEVFOyZxdW90OyZndDtQYW9sbyBFcnRyZW8mbHQ7L2EmZ3Q7IGZvciB0aGUgc2xpZGUuCiZsdDsvZGl2Jmd0OwombHQ7cCZndDsmbHQ7YnIgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRlIGFuIGV4cGVyaW1lbnQgYm9hcmQmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Q3JlYXRlIGEgYmFja2xvZyBvciBib2FyZCBvZiBleHBlcmltZW50IGlkZWFzIHdpdGggY29sdW1ucyBiYXNlZCBvbiB5b3VyIGdyb3d0aCBmb2N1cyBhcmVhcyBsaWtlIGFjdGl2YXRpb24sIGVuZ2FnZW1lbnQgYW5kIHJldGVudGlvbi4gQ2FyZHMgYXJlIGJhY2tlZCB1cCB3aXRoIGRhdGEgZnJvbSBxdWFsaXRhdGl2ZSBhbmQgcXVhbnRpdGF0aXZlIHJlc2VhcmNoLCBhbmQgZXZlcnkgdGVhbSBtZW1iZXIgaXMgZW5jb3VyYWdlZCB0byBzdWJtaXQgYW4gaWRlYS4gUHJvdmlkaW5nIGFzIG11Y2ggYmFja2dyb3VuZCBkYXRhIGFzIHBvc3NpYmxlIHdpbGwgaGVscCBmb3JtIGEgaHlwb3RoZXNpcy4gT3VyIGJlc3QgZXhwZXJpbWVudCBjYXJkcyBpbmNsdWRlOiZsdDsvcCZndDsKCiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7UHJvYmxlbTogV2hhdCBwcm9ibGVtIGFyZSB5b3Ugc29sdmluZyBhbmQgaG93IGJpZyBvZiBhIHByb2JsZW0gaXMgaXQ/Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7SHlwb3RoZXNpczogSWYgeW91IGRvIHRoaXMgb25lIHRoaW5nLCB3aGF0IGRvIHlvdSBleHBlY3QgdG8gaGFwcGVuIGFzIGEgcmVzdWx0PyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O01ldHJpY3Mgb2YgU3VjY2VzczogSG93IHdpbGwgeW91IGtub3cgaWYgeW91ciBleHBlcmltZW50IGlzIHN1Y2Nlc3NmdWw/IFdoYXQgb3V0Y29tZXMgYXJlIHlvdSB0cnlpbmcgdG8gcG9zaXRpdmVseSBtb3ZlPyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O09wZW4gUXVlc3Rpb25zOiBXaGF0IHF1ZXN0aW9ucyB3aWxsIGhlbHAgbW92ZSB0aGlzIGV4cGVyaW1lbnQgZm9yd2FyZD8mbHQ7L2xpJmd0OwombHQ7L3VsJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0xNy1ncm93dGg0LnBuZyZxdW90OyBhbHQ9JnF1b3Q7JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0xpbWl0IHRoZSBzY29wZSBhbmQgZGVzaWduJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0xpbWl0IHRoZSBzY29wZSBvZiB0aGUgZXhwZXJpbWVudCBhcyB0aGV5IHdpbGwgdmFyeSBpbiBzaXplLiBJbiBvbmUgb2Ygb3VyIGxhcmdlciBleHBlcmltZW50cywgd2UgZW5hYmxlZCB1c2VycyB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL2dldHRpbmctc3RhcnRlZC8jc2V0dGluZy11cC1jaXJjbGVjaSZxdW90OyZndDthZGQgYSBjb25maWd1cmF0aW9uIGZpbGUmbHQ7L2EmZ3Q7IGRpcmVjdGx5IHRvIHRoZWlyIFZDUyBmcm9tIENpcmNsZUNJLiBXZSBsaW1pdGVkIHRoZSBzY29wZSB0byBhdm9pZCBtYW5hZ2luZyBjb25mbGljdHMgd2l0aCBleGlzdGluZyBicmFuY2hlcyBhbmQgYnJhbmNoIHByb3RlY3Rpb24uIFdlIGFsc28gYXBwbGllZCB0aGVzZSBvdGhlciB0aXBzOiZsdDsvcCZndDsKJmx0O3VsJmd0OwogICZsdDtsaSZndDtVdGlsaXplIGV4aXN0aW5nIGNvbXBvbmVudHMmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtDb3B5IGlzIGltcG9ydGFudC4gV29yayB3aXRoIHlvdXIgY29weXdyaXRlci4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDtEb27igJl0IGRlc2lnbiBmb3IgZXZlcnkgZWRnZSBjYXNlIChvbmUgZXJyb3IgbW9kYWwgdG8gcnVsZSB0aGVtIGFsbCEpJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7UG9saXNoIGxhdGVyJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMiZndDtNZWFzdXJlIHRoZSBpbXBhY3QmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7TWFrZSBzdXJlIHRvIG5hbWUgdXNlciBldmVudHMgYWNjdXJhdGVseSBpbiBBbXBsaXR1ZGUsIGFuZCBhdm9pZCBzZW5kaW5nIHRvbyBtYW55IGV2ZW50cyBpbiBjYXNlIGl0IGxlYWRzIHRvIGNvbXBsZXhpdHkuIExvb2sgYXQgdXNlciBqb3VybmV5cyB0byB1bmRlcnN0YW5kIHRoZSBzdGVwcyBwZW9wbGUgaGF2ZSBhbmQgaGF2ZSBub3QgY29tcGxldGVkLCBhbmQgYXNrIHNwZWNpZmljIHF1ZXN0aW9ucy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtXZeKAmXZlIGJlZW4gdXNpbmcgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3d3dy5vcHRpbWl6ZWx5LmNvbS8mcXVvdDsmZ3Q7T3B0aW1pemVseSZsdDsvYSZndDsgZm9yIGV4cGVyaW1lbnRzLCB3aGljaCBhbGxvd3MgeW91IHRvIGFkZCB5b3VyIHByaW1hcnkgZ29hbHMgYW5kIG1ldHJpY3MuIFdoZW4gZXhwZXJpbWVudHMgYmVjb21lIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQsIHJldmlldyBtZXRyaWMgcGVyZm9ybWFuY2UgYXMgYSB0ZWFtLiBBc2sgd2hhdCB0aGUgZGF0YSBpcyBzaG93aW5nIGFuZCB3aHkgdXNlcnMgYXJlIG1ha2luZyB0aGVzZSBjaG9pY2VzLiBUaGVuLCBpZGVudGlmeSBhcmVhcyBmb3IgaW1wcm92ZW1lbnQgYW5kIHRhbGsgdGhyb3VnaCBhY3Rpb24sIGxpa2Ugd2hldGhlciB5b3Ugc2hvdWxkIGltcGxlbWVudCB0aGUgZmVhdHVyZSBwZXJtYW5lbnRseSBvciBpdGVyYXRlIG9uIHRoZSBleHBlcmltZW50IGFuZCBpbXByb3ZlIGRpc2NvdmVyYWJpbGl0eS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTE3LWdyb3d0aDUucG5nJnF1b3Q7IGFsdD0mcXVvdDsmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Qm9udXM6IFN0YXkgYWxpZ25lZCZsdDsvaDImZ3Q7CgombHQ7cCZndDtBc2sgeW91cnNlbGYgaWYgdGhpcyAgY2hhbmdlIGNvdWxkIGFwcGx5IHRvIG90aGVyIGFyZWFzIG9mIHRoZSBwcm9kdWN0IG9yIGluZGljYXRlIGEgaGVscGZ1bCBjaGFuZ2UgdG8geW91ciBkZXNpZ24gc3lzdGVtLiBEb2N1bWVudCB5b3VyIGxlYXJuaW5ncyBmb3IgdXNlIGluIGZ1dHVyZSBleHBlcmltZW50IHN0cmF0ZWdpZXMsIGZvciBleGFtcGxlLCB3aHkgY29tcG9uZW50IEEgaXMgYSBiZXR0ZXIgbm90aWZpY2F0aW9uIG1lY2hhbmlzbSB0aGFuIGNvbXBvbmVudCBCLiZsdDsvcCZndDsKCiZsdDtoMiZndDtUaGUgcmV3YXJkIG9mIGVtYnJhY2luZyBkYXRhJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0FzIG15IHRlYW0gaGFzIGFwcGxpZWQgdGhlc2UgYXBwcm9hY2hlcyB0byBvdXIgZXhwZXJpbWVudCBwcm9jZXNzLCB3ZeKAmXZlIHNlZW4gcG9zaXRpdmUgcmVzdWx0cy4gV2hlbiB3ZSBlbmFibGVkIHBlb3BsZSB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL2dldHRpbmctc3RhcnRlZC8jc2V0dGluZy11cC1jaXJjbGVjaSZxdW90OyZndDthZGQgYSBjb25maWd1cmF0aW9uIGZpbGUmbHQ7L2EmZ3Q7IGRpcmVjdGx5IHRvIHRoZWlyIFZDUyBmcm9tIENpcmNsZUNJLCBpdCBpbnNwaXJlZCB0aGlzIHZlcnkgYmxvZyBwb3N0IGFuZCBzaG93ZWQgaW1wYWN0IGhpZ2hsaWdodHMgZm9yIG5ldyB1c2VycyBhbmQgb3JnczombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O05ldyBmZWF0dXJlIGFkb3B0aW9uIGJ5ICs1NiUmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtJbmNyZWFzZWQgUGlwZWxpbmUgYWN0aXZhdGlvbiBieSArNDMlJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7SW5jcmVhc2VkIHRoZSBzdWNjZXNzIG9mIGFuIG9yZ+KAmXMgZmlyc3QgUGlwZWxpbmUgYnkgKzE1MCUmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtEZWNyZWFzZWQgY29uZmlnLXJlbGF0ZWQgYnVpbGQgZmFpbHVyZXMgYnkgLTQ3JSZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtFbWJyYWNpbmcgZGF0YSBsZXRzIHlvdSBiYWNrdXAgeW91ciBkZXNpZ24gZGVjaXNpb25zIGFuZCBwcm92ZSB0aGF0IGRlc2lnbiBpdHNlbGYgbWFkZSBhbiBpbXBhY3QuIFdl4oCZZCBsb3ZlIHlvdXIgZmVlZGJhY2sgb24gd2hldGhlciB5b3UgYW5kIHlvdXIgdGVhbSBmaW5kIHRoZXNlIHRpcHMgaGVscGZ1bCEgUmVhY2ggb3V0IG9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly90d2l0dGVyLmNvbS9DaXJjbGVDSSZxdW90OyZndDtUd2l0dGVyJmx0Oy9hJmd0OyBhbmQgc2lnbiB1cCB0byBwYXJ0aWNpcGF0ZSBpbiBmdXR1cmUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9yZXNlYXJjaC8mcXVvdDsmZ3Q7cmVzZWFyY2gmbHQ7L2EmZ3Q7IHNlc3Npb25zIGhlcmUuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT42IG9wdGltaXphdGlvbiB0aXBzIGZvciB5b3VyIENJIGNvbmZpZ3VyYXRpb248L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvc2l4LW9wdGltaXphdGlvbi10aXBzLWZvci15b3VyLWNvbmZpZy88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+VHVlLCAxNiBKdW4gMjAyMCAwOTowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9zaXgtb3B0aW1pemF0aW9uLXRpcHMtZm9yLXlvdXItY29uZmlnLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPkJlbmlzaCBLaGFuPC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtoMiZndDtGcm9tIGNvbmZpZyBkaXNhc3RlciB0byBjb25maWcgYnVpbGQtZmFzdGVyJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7VGhlIGN1c3RvbWVyIGVuZ2luZWVyaW5nIHRlYW0gYXQgQ2lyY2xlQ0kgaGVscHMgdXNlcnMgb3B0aW1pemUgaG93IHRoZWlyIGNvbmZpZ3VyYXRpb24gZmlsZXMgYXJlIHNldCB1cCBldmVyeWRheSAtIHRoZXkgZmluZCB0aGUgbW9zdCB1c2VmdWwgZmVhdHVyZXMgZm9yIHlvdXIgcHJvamVjdHMsIGJhbGFuY2luZyBib3RoIHlvdXIgdGltZSBhbmQgeW91ciBjcmVkaXQgY29uc3VtcHRpb24uIEJ1dCB0ZWFtcyBkb27igJl0IGFsd2F5cyBoYXZlIHRpbWUgdG8gd29yayB3aXRoIGFuIGV4cGVydCB0byBvcHRpbWl6ZSB0aGVpciBjb25maWcuIFRoYXTigJlzIHdoeSwgYWZ0ZXIgcGVyZm9ybWluZyBtYW55IGNvbmZpZyByZXZpZXdzIGZvciAyMCsgb2Ygb3VyIGVudGVycHJpc2UtbGV2ZWwgY3VzdG9tZXJzLCBvdXIgY3VzdG9tZXIgZW5naW5lZXJpbmcgdGVhbSBoYXMgcHV0IHRvZ2V0aGVyIGEgY29uZmlnIG9wdGltaXphdGlvbiBndWlkZSB3aXRoIHRoZWlyIGJlc3QgdGlwcyBhbmQgcmVjb21tZW5kYXRpb25zIHRvIG1ha2UgaXQgZWFzaWVyIGZvciB0ZWFtcyB0byBvcHRpbWl6ZSB0aGVpciBjb25maWcuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SW4gdGhpcyBwb3N0LCB3ZeKAmWxsIGNvdmVyIHNpeCBkaWZmZXJlbnQgd2F5cyB0byBvcHRpbWl6ZSB5b3VyIGNvbmZpZyBmaWxlLiBXZeKAmWxsIHdhbGsgdGhyb3VnaCBiZXN0IHByYWN0aWNlcyBmb3IgcGlja2luZyB0aGUgcmlnaHQgZXhlY3V0b3IsIHBhcmFsbGVsaXppbmcgam9icywgY2FjaGluZywgdXNpbmcgd29ya3NwYWNlcywgc2VjcmV0cyBtYW5hZ2VtZW50LCBhbmQgdXNpbmcgb3JicyBpbiB5b3VyIGNvbmZpZy4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7U2VsZWN0aW5nIHRoZSByaWdodCBleGVjdXRvciZsdDsvaDImZ3Q7CiZsdDtwJmd0O01hbnkgQ0kgcGlwZWxpbmVzIHdvdWxkIGJlbmVmaXQgZnJvbSBjaG9vc2luZyBvbmUgb2Ygb3VyIDIwMjAgZmxlZXQgb2YgbGlnaHRuaW5nLWZhc3QgRG9ja2VyIGNvbnZlbmllbmNlIGltYWdlcy4gUnVubmluZyB3aXRoaW4gYSBkb2NrZXIgY29udGFpbmVyIHVzaW5nIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtkb2NrZXImbHQ7L2NvZGUmZ3Q7IHlhbWwga2V5IHdpbGwgcHJvdmlkZSB0aGUgYmFzaWNzIGF0IHNvbWUgb2YgdGhlIGZhc3Rlc3Qgc3BlZWRzLiZsdDsvcCZndDsKCiZsdDtwJmd0O1dlIHB1Ymxpc2ggdGhlc2UgdG8gdGhlICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2NpbWcvJnF1b3Q7Jmd0O0RvY2tlciBIdWIgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y2ltZyZsdDsvY29kZSZndDsgcHJvZmlsZSZsdDsvYSZndDsuIElmIHlvdXIgYXBwbGljYXRpb24gbmVlZHMgb3RoZXIgdG9vbHMsIGNvbnNpZGVyIHJ1bm5pbmcgYSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL2N1c3RvbS1pbWFnZXMvJnF1b3Q7Jmd0O2N1c3RvbSBEb2NrZXIgaW1hZ2UmbHQ7L2EmZ3Q7LiBIZXJlIGlzIGFuIGV4YW1wbGUgdXNpbmcgb25lIG9mIHRoZSBvbGRlciwgYnVsa2llciBpbWFnZXMgcGlubmVkIHRvIGEgY2VydGFpbiB2ZXJzaW9uIG9mIE5vZGUuIFRoaXMgZXhlY3V0b3IgaXMgZGVmaW5lZCB1bmRlciBlYWNoIGpvYiBieSBzcGVjaWZ5aW5nIGEgRG9ja2VyIGltYWdlLCBzdWNoIGFzIGluIHRoaXMgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGVzdCZsdDsvY29kZSZndDsgam9iOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7dGVzdDoKICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvbm9kZTo5LjkuCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1dpdGggdGhlIG5leHQtZ2VuIENpcmNsZUNJICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2NpbWcvbm9kZSZxdW90OyZndDtOb2RlIGltYWdlJmx0Oy9hJmd0OywgeW91IGNhbiBzaGVkIGxheWVycywgZ2l2aW5nIGEgZmFzdGVyIGJ1aWxkLiBVcGRhdGluZyB0byB0aGUgbmV4dC1nZW4gZXhlY3V0b3IgaXMgYXMgc2ltcGxlIGFzIHVwZGF0aW5nIHRoZSBpbWFnZSBuYW1lLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBjdXJyZW50IGNvbmZpZyBidWlsZHMgYW5kIHRlc3RzIGluIE5vZGUgOS45LjAsIGJ1dCB3ZSB3b3VsZCBsaWtlIGl0IHRvIGJlIGJ1aWx0IHVzaW5nIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBOb2RlLiBUbyBkbyB0aGlzLCB3ZSByZXBsYWNlIHRoZSBpbWFnZSB1c2VkIGZvciB0aGUgZXhlY3V0aW9uIGNvbnRhaW5lciB3aXRoIG9uZSBvZiBvdXIgbmV4dC1nZW4gaW1hZ2VzIGFzIGZvbGxvd3M6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtkb2NrZXI6CiAgLSBpbWFnZTogY2ltZy9ub2RlOmxhdGVzdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gdGVzdGluZyBhY3Jvc3MgbXVsdGlwbGUgZW52aXJvbm1lbnRzLCB3ZSBhbHNvIGhhdmUgdGhlIGFiaWxpdHkgdG8gc2V0IG1hdHJpeCBqb2JzIHZpYSB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9vcmJzL3JlZ2lzdHJ5L29yYi9jaXJjbGVjaS9ub2RlJnF1b3Q7Jmd0O05vZGUgT3JiJmx0Oy9hJmd0Oy4gVGhpcyBhbGxvd3MgeW91IHRvIHNwZWNpZnkgZGlmZmVyZW50IHZlcnNpb25zIG9mIE5vZGUgdG8gdGVzdCBhcyB3ZWxsIG9uIHRvcCBvZiB0aGUgYmFzZSBOb2RlIERvY2tlciBsYXllcnMuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0Jlc3QgcHJhY3RpY2VzIGZvciBwYXJhbGxlbGlzbSZsdDsvaDImZ3Q7CiZsdDtwJmd0O0NvbmZpZ3VyaW5nIHlvdXIgam9iIHRvIHJ1biBhY3Jvc3MgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9wYXJhbGxlbGlzbS1mYXN0ZXItam9icy8mcXVvdDsmZ3Q7bXVsdGlwbGUgY29udGFpbmVycyBpbiBwYXJhbGxlbCZsdDsvYSZndDsgc3BlZWRzIHVwIHlvdXIgYnVpbGQuIEZvciBleGFtcGxlLCBpZiB5b3UgaGF2ZSBhIGxvbmcgcnVubmluZyB0ZXN0IHN1aXRlIHdpdGggaHVuZHJlZHMgb2YgaW5kZXBlbmRlbnQgdGVzdHMsIGNvbnNpZGVyIHNwcmVhZGluZyB0aGVzZSB0ZXN0cyBhY3Jvc3MgZXhlY3V0b3JzIHRvIHJ1biBzaW11bHRhbmVvdXNseS4gQSB0cnVseSBvcHRpbWl6ZWQgY29uZmlnIG1lYW5zIGxldmVyYWdpbmcgcGFyYWxsZWxpc20gd2lzZWx5LiBZb3Ugc2hvdWxkIGNhcmVmdWxseSBjb25zaWRlciBob3cgbWFueSBwYXJhbGxlbCBleGVjdXRvcnMgeW91IGhhdmUgcnVubmluZyBhbmQgd2hldGhlciB0aGUgdGltZS1zYXZpbmdzIG9mIHNwbGl0dGluZyB1cCB0YXNrcyBpcyB3b3J0aCB0aGUgc3Bpbi11cCB0aW1lIG9mIG11bHRpcGxlIGNvbnRhaW5lcnMuIEFsc28gZW5zdXJlIHRoYXQgeW914oCZcmUgc3BsaXR0aW5nIHlvdXIgdGVzdHMgY29ycmVjdGx5IGFjcm9zcyB0aGVzZSBleGVjdXRvcnMuJmx0O2JyIC8mZ3Q7CkNvbnNpZGVyIHRoZSBleGFtcGxlIGJlbG93LiBUaGUgcHJpbWFyeSBhY3Rpdml0eSBpbiB0aGlzIHRlc3Qgam9iIGlzIHJ1bm5pbmcgdGhlIHRlc3RzIHdpdGggdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25wbSBydW4gdGVzdCZsdDsvY29kZSZndDsgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3Rlc3Q6CiDigKYKIHBhcmFsbGVsaXNtOiAxMAogc3RlcHM6CiAgICAuLi4KICAgICAtIHJ1bjogQ0k9dHJ1ZSBucG0gcnVuIHRlc3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7V2hpbGUgdXNpbmcgcGFyYWxsZWxpc20gaXMgYSBzdGVwIGluIHRoZSByaWdodCBkaXJlY3Rpb24sIHRoaXMgaXMgbm90IHdyaXR0ZW4gb3B0aW1hbGx5LiBUaGlzIGNvbW1hbmQgd2lsbCBzaW1wbHkgcnVuIHRoZSBzYW1lIGV4YWN0IHRlc3RzIG9uIGFsbCAxMCBjb250YWluZXJzLiBUbyBhbGxvY2F0ZSB0aGUgdGVzdHMgYWNyb3NzIG11bHRpcGxlIGNvbnRhaW5lcnMsIHRoaXMgY29uZmlnIG5lZWRzIHRvIHVzZSB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9wYXJhbGxlbGlzbS1mYXN0ZXItam9icy8jdXNpbmctdGhlLWNpcmNsZWNpLWNsaS10by1zcGxpdC10ZXN0cyZxdW90OyZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjaXJjbGVjaSB0ZXN0cyBzcGxpdCZsdDsvY29kZSZndDsgY29tbWFuZCBmcm9tIHRoZSBDaXJjbGVDSSBDTEkmbHQ7L2EmZ3Q7LiBUZXN0cyBjYW4gYmUgYXV0b21hdGljYWxseSBhbGxvY2F0ZWQgYWNyb3NzIHRoZXNlIGNvbnRhaW5lcnMgd2hlbiBzcGxpdCBieSBmaWxlbmFtZSwgY2xhc3NuYW1lLCBvciB0aW1pbmcgZGF0YS4gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9wYXJhbGxlbGlzbS1mYXN0ZXItam9icy8jc3BsaXR0aW5nLWJ5LXRpbWluZy1kYXRhJnF1b3Q7Jmd0O1NwbGl0dGluZyBieSB0aW1pbmcgZGF0YSZsdDsvYSZndDsgaXMgaWRlYWwgZm9yIHBhcmFsbGVsaXphdGlvbiwgYXMgaXQgc3ByZWFkcyB0aGUgdGVzdHMgdG8gcnVuIGV2ZW5seSBhY3Jvc3MgdGhlIGNvbnRhaW5lcnMsIHNvIHRoZXJlIGFyZSBubyBmYXN0ZXItcnVubmluZyBjb250YWluZXJzIHdhaXRpbmcgaWRseSBmb3IgYSBsb25nLXJ1bm5pbmcgdGVzdCBjb250YWluZXIuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7RmluYWxseSwgY29uc2lkZXIgd2hldGhlciB0aGlzIGlzIHRoZSBjb3JyZWN0IGxldmVsIG9mIHBhcmFsbGVsaXNtIGZvciB0aGlzIHRlc3Qgc3VpdGUuIElmIHNwaW5uaW5nIHVwIHRoZSBlbnZpcm9ubWVudCB0YWtlcyBhYm91dCAzMCBzZWNvbmRzLCBidXQgdGVzdGluZyBvbmx5IHRha2VzIDMwIHNlY29uZHMgaW4gZWFjaCBjb250YWluZXIsIGl0IG1heSBiZSB3b3J0aCBjb25zaWRlcmluZyBsb3dlcmluZyB0aGUgcGFyYWxsZWxpc20gc28gbGVzcyB0aW1lIGlzIHNwZW50IHNldHRpbmcgdXAgYWNyb3NzIGFsbCBvZiB0aGUgam9iIHJ1bnMuIFRoZXJlIGlzIG5vIGdvbGRlbiByYXRpbyBvZiB0ZXN0IHJ1bnRpbWUgdG8gc3Bpbi11cCB0aW1lLCBidXQgaXQgc2hvdWxkIGJlIGNvbnNpZGVyZWQgZm9yIGFuIG9wdGltYWwgYnVpbGQuIEhlcmUgaXMgd2hhdCBhbiBvcHRpbWl6ZWQgY29uZmlnIGxvb2tzIGxpa2Ugd2hlbiBvcHRpbWl6ZWQgdG8gc3BsaXQgdGVzdHMgYnkgZmlsZW5hbWUgYW5kIHRpbWluZ3MgYW5kIHRvIHJ1biBtb3JlIHRlc3RzIGluIGEgZ2l2ZW4gY29udGFpbmVyOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7dGVzdDoKIOKApgogcGFyYWxsZWxpc206IDUKIHN0ZXBzOgogICAgLi4uCiAgICAgLSBydW46IHwKICAgICAgICAgICAgVEVTVEZJTEVTPSQoY2lyY2xlY2kgdGVzdHMgZ2xvYiAmcXVvdDt0ZXN0LyoqLyoudGVzdC5qcyZxdW90OyB8IGNpcmNsZWNpIHRlc3RzIHNwbGl0IC0tc3BsaXQtYnk9dGltaW5ncykKICAgICAgICAgICAgQ0k9dHJ1ZSBucG0gcnVuIHRlc3QgJFRFU1RGSUxFUwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7aDImZ3Q7QmVzdCBwcmFjdGljZXMgZm9yIGNhY2hpbmcmbHQ7L2gyJmd0OwombHQ7cCZndDtTcGVlZCB1cCB5b3VyIGJ1aWxkcyB3aXRoICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAvY2FjaGluZy8mcXVvdDsmZ3Q7Y2FjaGluZyZsdDsvYSZndDsuIFRoaXMgYWxsb3dzIHlvdSB0byByZXVzZSBkYXRhIGZyb20gdGltZS1jb25zdW1pbmcgZmV0Y2ggb3BlcmF0aW9ucy4gVGhlIGV4YW1wbGUgYmVsb3cgdXNlcyBjYWNoaW5nIHRvIHJlc3RvcmUgaXRzIG5wbSBkZXBlbmRlbmNpZXMgZnJvbSBwcmV2aW91cyBqb2IgcnVucy4gQmVjYXVzZSB0aGUgbnBtIGRlcGVuZGVuY2llcyBhcmUgY2FjaGVkLCB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bnBtIGluc3RhbGwmbHQ7L2NvZGUmZ3Q7IHN0ZXAgd2lsbCBvbmx5IG5lZWQgdG8gZG93bmxvYWQgbmV3IGRlcGVuZGVuY2llcyBkZXNjcmliZWQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3BhY2thZ2UuanNvbiZsdDsvY29kZSZndDsgZmlsZS4gVGhpcyBkZXBlbmRlbmN5IGNhY2hpbmcsIHdoaWNoIGlzIG9mdGVuIHVzZWQgd2l0aCBwYWNrYWdlIGRlcGVuZGVuY3kgbWFuYWdlcnMgbGlrZSBucG0sIFlhcm4sIEJ1bmRsZXIsIG9yIHBpcCwgcmVsaWVzIG9uIHR3byBzcGVjaWFsIHN0ZXBzIHNwZWNpZmllZCBhcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtyZXN0b3JlX2NhY2hlJmx0Oy9jb2RlJmd0OyBhbmQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c2F2ZV9jYWNoZSZsdDsvY29kZSZndDsuIExldOKAmXMgbG9vayBhdCBob3cgdGhlc2UgY2FjaGUgc3RlcHMgYXJlIHVzZWQgaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Rlc3QmbHQ7L2NvZGUmZ3Q7IGpvYjombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3Rlc3Q6CiAgLi4uCiAgc3RlcHM6CiAgICDigKYKICAgIC0gcmVzdG9yZV9jYWNoZToKICAgICAgICBrZXlzOgogICAgICAgICAgLSB2MS1kZXBzLXt7IGNoZWNrc3VtICZxdW90O3BhY2thZ2UtbG9jay5qc29uJnF1b3Q7IH19CiAgICAtIHJ1bjogbnBtIGluc3RhbGwKICAgIC0gc2F2ZV9jYWNoZToKICAgICAgICBrZXk6IHYxLWRlcHMte3sgY2hlY2tzdW0gJnF1b3Q7cGFja2FnZS1sb2NrLmpzb24mcXVvdDsgfX0KICAgICAgICBwYXRoczoKICAgICAgICAgIC0gbm9kZV9tb2R1bGVzCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O05vdGljZSB0aGF0IGJvdGggdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Jlc3RvcmVfY2FjaGUmbHQ7L2NvZGUmZ3Q7IGFuZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzYXZlX2NhY2hlJmx0Oy9jb2RlJmd0OyBzdGVwcyB1c2Uga2V5cy4gVGhpcyBrZXkgaXMgYSB1bmlxdWUgaWRlbnRpZmllciBmb3IgbG9jYXRpbmcgeW91ciBjYWNoZS4gVGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NhdmVfY2FjaGUmbHQ7L2NvZGUmZ3Q7IHN0ZXAgc3BlY2lmaWVzIHdoaWNoIGRpcmVjdG9yaWVzIHRvIGNhY2hlIHVuZGVyIHRoaXMga2V5LiBJbiB0aGlzIGNhc2UsIHdlIGFyZSBzYXZpbmcgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25vZGVfbW9kdWxlcyZsdDsvY29kZSZndDsgZGlyZWN0b3J5LCBzbyB0aGF0IHRoZXNlIE5vZGUgZGVwZW5kZW5jaWVzIGNhbiBiZSB1c2VkIGluIGxhdGVyIGpvYnMuIFRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtyZXN0b3JlX2NhY2hlJmx0Oy9jb2RlJmd0OyBzdGVwIHVzZXMgdGhpcyBrZXkgdG8gZmluZCB0aGUgY2FjaGUgdG8gcmVzdG9yZSB0byB0aGUgam9iLiBJbiB0aGlzIGNhc2UsIHRoZSBrZXkgaXMgYSBzdHJpbmcgd2l0aCBhIHZlcnNpb24gaWRlbnRpZnlpbmcgdGhlIGNhY2hlIGFuZCBhbiBpbnRlcnBvbGF0ZWQgaGFzaCBvZiB0aGUgZGVwZW5kZW5jeSBtYW5pZmVzdCBmaWxlIHdyaXR0ZW4gYXMgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Y2hlY2tzdW0g4oCccGFja2FnZS1sb2NrLmpzb27igJ0mbHQ7L2NvZGUmZ3Q7LiZsdDsvcCZndDsKCiZsdDtwJmd0O1doaWxlIHRoaXMgaXMgYSBzdGFuZGFyZCBwYXR0ZXJuIG9mIHJlc3RvcmluZyBhbmQgc2F2aW5nIGEgY2FjaGUsIHRoaXMgY2FuIGJlIG9wdGltaXplZCB3aXRoIHRoZSB1c2Ugb2YgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9jYWNoaW5nLyNwYXJ0aWFsLWRlcGVuZGVuY3ktY2FjaGluZy1zdHJhdGVnaWVzJnF1b3Q7Jmd0O2ZhbGxiYWNrIGtleXMmbHQ7L2EmZ3Q7LiBGYWxsYmFjayBrZXlzIGFsbG93IHlvdSB0byBpZGVudGlmeSBhIHNldCBvZiBwb3NzaWJsZSBjYWNoZXMgdG8gaW5jcmVhc2UgdGhlIGxpa2VsaWhvb2Qgb2YgYSBjYWNoZSBoaXQuIEZvciBleGFtcGxlLCBpZiBhIHNpbmdsZSBwYWNrYWdlIGlzIGFkZGVkIHRvIHRoaXMgYXBwbGljYXRpb27igJlzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3BhY2thZ2UuanNvbiZsdDsvY29kZSZndDssIHRoZSBzdHJpbmcgZ2VuZXJhdGVkIGJ5IGNoZWNrc3VtIHdpbGwgY2hhbmdlLCBhbmQgdGhlIGVudGlyZSBjYWNoZSB3aWxsIGJlIG1pc3NlZC4gSG93ZXZlciwgYWRkaW5nIGEgZmFsbGJhY2sga2V5IHdpdGggYSBicm9hZGVyIHNldCBvZiBwb3NzaWJsZSBrZXkgbWF0Y2hlcyBjYW4gaWRlbnRpZnkgb3RoZXIgdXNhYmxlIGNhY2hlcy4gSGVyZSBpcyBhbiBleGFtcGxlIG9mIHdoYXQgdGhpcyBjYWNoZSByZXN0b3JhdGlvbiB3b3VsZCBsb29rIGxpa2Ugd2l0aCBhbiBhZGRlZCBmYWxsYmFjayBrZXk6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDt0ZXN0OgogIC4uLgogIHN0ZXBzOgogICAg4oCmCiAgICAtIHJlc3RvcmVfY2FjaGU6CiAgICAgICAga2V5czoKICAgICAgICAgIC0gdjEtZGVwcy17eyBjaGVja3N1bSAmcXVvdDtwYWNrYWdlLWxvY2suanNvbiZxdW90OyB9fQogICAgICAgICAgLSB2MS1kZXBzLQogICAgCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O05vdGljZSB0aGF0IHdlIGp1c3QgYWRkZWQgYW5vdGhlciBlbGVtZW50IHRvIHRoZSBsaXN0IG9mIGtleXMuIExldOKAmXMgZ28gYmFjayB0byB0aGUgc2NlbmFyaW8gd2hlcmUgYSBzaW5nbGUgcGFja2FnZSBjaGFuZ2VkIGluIG91ciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7LiBJbiB0aGlzIGNhc2UsIHRoZSBmaXJzdCBrZXkgd291bGQgcmVzdWx0IGluIGEgY2FjaGUgbWlzcy4gSG93ZXZlciwgdGhlIHNlY29uZCBrZXkgYWxsb3dzIGZvciB0aGUgY2FjaGUgdGhhdCB3YXMgcHJldmlvdXNseSBzYXZlZCB3aXRoaW4gdGhlIG9sZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7IGZpbGUgdG8gYmUgcmVzdG9yZWQuIFRoZSBkZXBlbmRlbmN5IGluc3RhbGxhdGlvbiBzdGVwLCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtucG0gaW5zdGFsbCZsdDsvY29kZSZndDssIHdvdWxkIHRoZW4gb25seSBoYXZlIHRvIGZldGNoIHRoZSBjaGFuZ2VkIHBhY2thZ2VzLCBhcyBvcHBvc2VkIHRvIHVubmVjZXNzYXJ5IGFuZCBleHBlbnNpdmUgZmV0Y2ggb3BlcmF0aW9ucyBmb3IgYWxsIG9mIHRoZSBwYWNrYWdlcy4gVmlzaXQgb3VyIGRvY3MgdG8gcmVhZCBtb3JlIGFib3V0ICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vZG9jcy8yLjAvY2FjaGluZy8jcGFydGlhbC1kZXBlbmRlbmN5LWNhY2hpbmctc3RyYXRlZ2llcyZxdW90OyZndDtmYWxsYmFjayBrZXlzIGFuZCBwYXJ0aWFsIGNhY2hlIHJlc3RvcmF0aW9uJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7U2VsZWN0aXZlbHkgcGVyc2lzdGluZyB0byB3b3Jrc3BhY2VzJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7RG93bnN0cmVhbSBqb2JzIG1heSBuZWVkIGFjY2VzcyB0byBkYXRhIHRoYXQgd2FzIGdlbmVyYXRlZCBpbiBhIHByaW9yIGpvYi4gV29ya3NwYWNlcyBhbGxvdyB5b3UgdG8gc3RvcmUgZmlsZXMgZm9yIHRoZSBlbnRpcmUgbGlmZSBvZiB0aGUgd29ya2Zsb3cuIFRvIGlsbHVzdHJhdGUgdGhpcywgbGV04oCZcyBsb29rIGF0IHRoZSBjb25maWcgYmVsb3cuIFRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtidWlsZCZsdDsvY29kZSZndDsgam9iIGJ1aWxkcyBhIE5vZGUgYXBwbGljYXRpb24uIFRoZSBuZXh0IGpvYiBpbiB0aGUgd29ya2Zsb3cgZGVwbG95cyB0aGUgYXBwbGljYXRpb24uIFRoaXMgY29uZmlnIHBlcnNpc3RzIHRoZSBlbnRpcmUgd29ya2luZyBkaXJlY3RvcnkgdG8gdGhlIHdvcmtzcGFjZSBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtidWlsZCZsdDsvY29kZSZndDssIHRoZW4gYXR0YWNoZXMgdGhlIGRpcmVjdG9yeSBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtkZXBsb3kmbHQ7L2NvZGUmZ3Q7LCBzbyBkZXBsb3kgaGFzIGFjY2VzcyB0byB0aGUgYnVpbHQgYXBwbGljYXRpb246Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsgIGJ1aWxkOgogICAgLi4uCiAgICBzdGVwczoKICAgICAgLi4uCiAgICAgIC0gcnVuOiBucG0gcnVuIGJ1aWxkCiAgICAgIC0gcGVyc2lzdF90b193b3Jrc3BhY2U6CiAgICAgICAgICByb290OiAuCiAgICAgICAgICBwYXRoczoKICAgICAgICAgICAgLSAnKicKICBkZXBsb3k6CiAgICAuLi4KICAgIHN0ZXBzOgogICAgICAgLi4uLgogICAgICAgIC0gYXR0YWNoX3dvcmtzcGFjZToKICAgICAgICAgICAgYXQ6IC4KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyB3b3JrcywgYXMgdGhlIGFwcGxpY2F0aW9uIGRpcmVjdG9yeSBjcmVhdGVkIGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtidWlsZCZsdDsvY29kZSZndDsgam9iIHdvdWxkIGJlIGFjY2Vzc2libGUgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2RlcGxveSZsdDsvY29kZSZndDsgam9iLCBidXQgaXQgaXMgbm90IGlkZWFsLiBXb3Jrc3BhY2VzIGVzc2VudGlhbGx5IGp1c3QgY3JlYXRlIHRhcmJhbGxzIGFuZCBzdG9yZSB0aGVtIGluIGEgYmxvYiBzdG9yZSwgYW5kIGF0dGFjaGluZyBhIHdvcmtzcGFjZSByZXF1aXJlcyBkb3dubG9hZGluZyBhbmQgdW5wYWNraW5nIHRoZXNlIHRhcmJhbGxzLiBUaGlzIGNhbiBiZSBhIHRpbWUtY29uc3VtaW5nIHByb2Nlc3MuIEl0IHdvdWxkIGJlIGZhc3RlciB0byBzZWxlY3RpdmVseSBwZXJzaXN0IHRoZSBmaWxlcyB0aGF0IHlvdXIgbGF0ZXIgam9icyBuZWVkLiBJbiB0aGlzIGNhc2UsIGxldOKAmXMgc2F5IHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtucG0gcnVuIGJ1aWxkJmx0Oy9jb2RlJmd0OyBzdGVwIHByb2R1Y2VzIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7YnVpbGQmbHQ7L2NvZGUmZ3Q7IGRpcmVjdG9yeSB0aGF0IGNhbiBiZSBjb21wcmVzc2VkIHRoZW4gc3RvcmVkIGluIHRoZSB3b3Jrc3BhY2UgZm9yIGRlcGxveW1lbnQuIFlvdSBjYW4gc2VlIHdoYXQgdGhpcyBtaWdodCBsb29rIGxpa2UgaW4gdGhlIG9wdGltaXplZCB2ZXJzaW9uIG9mIHRoaXMgY29uZmlnIGJlbG93OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ICBidWlsZDoKICAgIC4uLgogICAgc3RlcHM6CiAgICAgIC4uLgogICAgICAtIHJ1bjogbnBtIHJ1biBidWlsZAogICAgICAtIHJ1bjogbWtkaXIgdG1wICZhbXA7YW1wOyZhbXA7YW1wOyB6aXAgLXIgdG1wL2J1aWxkLnppcCBidWlsZAogICAgICAtIHBlcnNpc3RfdG9fd29ya3NwYWNlOgogICAgICAgICAgcm9vdDogLgogICAgICAgICAgcGF0aHM6CiAgICAgICAgICAgIC0gJ3RtcCcKCiAgZGVwbG95OgogICAgLi4uCiAgICBzdGVwczoKICAgICAgIC4uLi4KICAgICAgICAtIGF0dGFjaF93b3Jrc3BhY2U6CiAgICAgICAgICAgIGF0OiAuCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0bXAmbHQ7L2NvZGUmZ3Q7IGRpcmVjdG9yeSB3aXRoIHRoZSBidWlsZCBhcnRpZmFjdCB3aWxsIG5vdyBiZSBtb3VudGVkIHRvIHRoZSB3b3JraW5nIGRpcmVjdG9yeSBvZiB0aGUgcHJvamVjdC4gUmF0aGVyIHRoYW4gdXBsb2FkaW5nIGFuZCBkb3dubG9hZGluZyB0aGUgZW50aXJlIHdvcmtpbmcgZGlyZWN0b3J5IGFzIGRvbmUgaW4gdGhlIHVub3B0aW1pemVkIGNvbmZpZywgdGhpcyBjb25maWcgc2VsZWN0aXZlbHkgc3RvcmVzIHRoZSBjb21wcmVzc2VkLCBidWlsdCBhcHBsaWNhdGlvbiB0byBzYXZlIG9uIHRpbWUgc3BlbnQgYXJjaGl2aW5nLCB1cGxvYWRpbmcsIGFuZCBkb3dubG9hZGluZyB0aGUgd29ya3NwYWNlLiBUaGUgY29tcHJlc3NlZCBmaWxlIGNhbiBiZSBzdG9yZWQgaW4gYSB0ZW1wb3JhcnkgZGlyZWN0b3J5IGluIHRoZSB3b3Jrc3BhY2UuIEFueSBkb3duc3RyZWFtIGpvYnMgd2l0aCB0aGUgd29ya3NwYWNlIGF0dGFjaGVkIHRvIHRoZW0gd2lsbCBub3cgaGF2ZSBhY2Nlc3MgdG8gdGhpcyB6aXAgZmlsZS4gWW91IGNhbiBsZWFybiBtb3JlIGluIHRoaXMgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2RlZXAtZGl2aW5nLWludG8tY2lyY2xlY2ktd29ya3NwYWNlcy8mcXVvdDsmZ3Q7ZGVlcCBkaXZlIGludG8gQ2lyY2xlQ0kgd29ya3NwYWNlcyZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O0Jlc3QgcHJhY3RpY2VzIGZvciBzZWNyZXRzIG1hbmFnZW1lbnQmbHQ7L2gyJmd0OwombHQ7cCZndDtZb3UgZG8gbm90IHdhbnQgdG8gY2hlY2sgeW91ciBzZWNyZXRzIGludG8gdmVyc2lvbiBjb250cm9sLCBhbmQgc2VjcmV0cyBzaG91bGQgbmV2ZXIgYmUgd3JpdHRlbiBpbiBwbGFpbiB0ZXh0IGluIHlvdXIgY29uZmlnLiBDaXJjbGVDSSBwcm92aWRlcyB5b3Ugd2l0aCBhY2Nlc3MgdG8gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9kb2NzLzIuMC9jb250ZXh0cy8mcXVvdDsmZ3Q7Y29udGV4dHMmbHQ7L2EmZ3Q7LiBUaGVzZSBhbGxvdyB5b3UgdG8gc2VjdXJlIGFuZCBzaGFyZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYWNyb3NzIHByb2plY3RzIGluIHlvdXIgb3JnYW5pemF0aW9uLiBDb250ZXh0cyBhcmUgZXNzZW50aWFsbHkgYSBzZWNyZXQgc3RvcmUgd2hlcmUgeW91IGNhbiBzZXQgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFzIG5hbWUvdmFsdWUgcGFpcnMgdGhhdCBhcmUgaW5qZWN0ZWQgYXQgcnVudGltZS4gVG8gdW5kZXJzdGFuZCB0aGlzIGJldHRlciwgbGV04oCZcyBsb29rIGF0IHRoZSB1bnNlY3VyZSBjb25maWcgYmVsb3cuIFRoaXMgY29uZmlnIGluY2x1ZGVzIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZGVwbG95Jmx0Oy9jb2RlJmd0OyBqb2IgdGhhdCBpcyBkZWZpbmVkIHdpdGggQVdTIHNlY3JldHMgd3JpdHRlbiBpbiBwbGFpbi10ZXh0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ZGVwbG95Ogog4oCmCiBzdGVwczoKICAgIC4uLgogICAgIC0gcnVuOiAKICAgICAgICAgICAgbmFtZTogQ29uZmlndXJlIEFXUyBBY2Nlc3MgS2V5IElECiAgICAgICAgICAgIGNvbW1hbmQ6IHwKICAgICAgICAgICAgICBhd3MgY29uZmlndXJlIHNldCBhd3NfYWNjZXNzX2tleV9pZCBLNEdNVzE5NVdKS0dDV1ZMR1BaRyAtLXByb2ZpbGUgZGVmYXVsdAogICAgICAgIC0gcnVuOiAKICAgICAgICAgICAgbmFtZTogQ29uZmlndXJlIEFXUyBTZWNyZXQgQWNjZXNzIEtleQogICAgICAgICAgICBjb21tYW5kOiB8CiAgICAgICAgICAgICAgYXdzIGNvbmZpZ3VyZSBzZXQgYXdzX3NlY3JldF9hY2Nlc3Nfa2V5IGthMXJ0M1JmZjhiZVhQVEVtdlZGNGo0RFpYM2diaTZZNTIxVzFvQXQgLS1wcm9maWxlIGRlZmF1bHQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O05vdGUmbHQ7L3N0cm9uZyZndDs6ICZsdDtpJmd0O1RoZXNlIGFyZSBkdW1teSBjcmVkZW50aWFscyB1c2VkIGZvciBkZW1vbnN0cmF0aW9uIHB1cnBvc2VzIG9ubHkuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoaXMgdGV4dCBpcyB2aXNpYmxlIHRvIGFsbCBvZiB0aGUgZGV2ZWxvcGVycyB3aXRoIGFjY2VzcyB0byB5b3VyIHByb2plY3Qgb24gQ2lyY2xlQ0kuIFRoZXNlIHNlY3JldHMgc2hvdWxkIGJlIHN0b3JlZCBhcyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gYSBjb250ZXh0IGluc3RlYWQuIEFkZCB0aGUgc2VjcmV0IGtleSBhbmQgYWNjZXNzIElEIHRvIGEgY29udGV4dCB0aXRsZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7YXdzX3NlY3JldHMmbHQ7L2NvZGUmZ3Q7IGFzIGtleS92YWx1ZSBwYWlycywgd2hpY2ggY2FuIGJlIGFjY2Vzc2VkIGFzIGVudmlyb25tZW50IHZhcmlhYmxlcy4gVGhpcyBjb250ZXh0IGNhbiB0aGVuIGJlIGFwcGxpZWQgdG8gdGhlIGpvYiBpbiB0aGUgd29ya2Zsb3cuIFRoZSBzZWN1cmUgdmVyc2lvbiBvZiB0aGlzIGNvbmZpZyB3b3VsZCBsb29rIGxpa2UgdGhpczombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2RlcGxveToKIOKApgogc3RlcHM6CiAgICAuLi4KICAgICAtIHJ1bjogCiAgICAgICAgICAgIG5hbWU6IENvbmZpZ3VyZSBBV1MgQWNjZXNzIEtleSBJRAogICAgICAgICAgICBjb21tYW5kOiB8CiAgICAgICAgICAgICAgYXdzIGNvbmZpZ3VyZSBzZXQgYXdzX2FjY2Vzc19rZXlfaWQgJHtBV1NfQUNDRVNTX0tFWV9JRH0gLS1wcm9maWxlIGRlZmF1bHQKICAgICAgICAtIHJ1bjogCiAgICAgICAgICAgIG5hbWU6IENvbmZpZ3VyZSBBV1MgU2VjcmV0IEFjY2VzcyBLZXkKICAgICAgICAgICAgY29tbWFuZDogfAogICAgICAgICAgICAgIGF3cyBjb25maWd1cmUgc2V0IGF3c19zZWNyZXRfYWNjZXNzX2tleSAke0FXU19TRUNSRVRfQUNDRVNTX0tFWX0gLS1wcm9maWxlIGRlZmF1bHQKCndvcmtmbG93czoKICB0ZXN0LWJ1aWxkLWRlcGxveToKICAgICAuLi4KICAgICAgLSBkZXBsb3k6CiAgICAgICAgICBjb250ZXh0OiBhd3Nfc2VjcmV0cwogICAgICAgICAgcmVxdWlyZXM6CiAgICAgICAgICAgIC0gYnVpbGQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Tm90aWNlIHRoYXQgdGhlIHNlY3JldHMgaGF2ZSBnb25lIGZyb20gcGxhaW4tdGV4dCB0byBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZSBhbmQgdGhlIGNvbnRleHQgaXMgYXBwbGllZCB0byB0aGUgam9iIGluIHRoZSB3b3JrZmxvdy4gRm9yIGFkZGl0aW9uYWwgc2VjdXJpdHksIHdlIGVtcGxveSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cva2VlcC1lbnZpcm9ubWVudC12YXJpYWJsZXMtcHJpdmF0ZS13aXRoLXNlY3JldC1tYXNraW5nLyZxdW90OyZndDtzZWNyZXQgbWFza2luZyZsdDsvYSZndDsgdG8gcHJldmVudCB1c2VycyBmcm9tIGFjY2lkZW50YWxseSBwcmludGluZyB0aGUgdmFsdWUgb2YgdGhlIHNlY3JldC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7T3JicyBhbmQgcmV1c2FibGUgY29uZmlnIGVsZW1lbnRzJmx0Oy9oMiZndDsKJmx0O3AmZ3Q7U28geW914oCZdmUgY2hvc2VuIHRoZSByaWdodCBleGVjdXRvciBmb3IgeW91ciBidWlsZCwgeW914oCZcmUgc3BsaXR0aW5nIHlvdXIgdGVzdHMgYXBwcm9wcmlhdGVseSwgYW5kIHlvdeKAmXJlIHBlcnNpc3RpbmcgdG8gdGhlIHdvcmtzcGFjZSB0byBhdm9pZCBkdXBsaWNhdGluZyB5b3VyIHdvcmsuIE5vdyB5b3UgaGF2ZSB0byBkbyB0aGF0IGZvciBhbGwgb2YgeW91ciBvdGhlciBwcm9qZWN0cy4gV2hhdCBhIHBhaW4sIGFtIEkgcmlnaHQ/IElmIG9ubHkgdGhlcmUgd2FzIGEgd2F5IHRvIHJldXNlIHNoYXJlZCBlbGVtZW50cyBvZiB5b3VyIGNvbmZpZyBmaWxlIGJldHdlZW4gbXVsdGlwbGUgYnVpbGRzLiBXZWxsLCBnb29kIG5ld3MhJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2lyY2xlIENJIHByb3ZpZGVzIGEgZmVhdHVyZSBrbm93biBhcyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvJnF1b3Q7Jmd0O29yYnMmbHQ7L2EmZ3Q7IHdoaWNoIGFsbG93IHlvdSB0byBkZWZpbmUgY29uZmlndXJhdGlvbiBlbGVtZW50cyBpbiBhIGNlbnRyYWwgbG9jYXRpb24gYW5kIHJldXNlIHRoZW0gaW4gbXVsdGlwbGUgcHJvamVjdHMgcXVpY2tseSBhbmQgZWFzaWx5LiBOb3QganVzdCB0aGF0LCBidXQgeW91IGNhbiBhY3R1YWxseSBwYXNzIHBhcmFtZXRlcnMgaW50byBvcmJzLCBzbyB5b3UgY2FuIGNyYWZ0IGEgc2luZ2xlIG9yYiB0aGF0IGRvZXMgbXVsdGlwbGUgZGlmZmVyZW50IHRoaW5ncyBpbiBkaWZmZXJlbnQgcHJvamVjdHMgZGVwZW5kaW5nIG9uIHRoZSBwYXJhbWV0ZXJzIHlvdSBwYXNzIGludG8gaXQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VXNpbmcgb3VyIDIuMSBjb25maWcgdmVyc2lvbiwgeW91IGNhbiBhbHNvIGRlZmluZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2RvY3MvMi4wL3JldXNpbmctY29uZmlnLyZxdW90OyZndDtyZXVzYWJsZSBlbGVtZW50cyZsdDsvYSZndDsgb2YgeW91ciBjb25maWd1cmF0aW9uIHRvIHJlLXVzZSBpbiBtdWx0aXBsZSBqb2JzIGluIHRoZSBzYW1lIHBpcGVsaW5lLCBmcm9tIHNpbXBsZSBqb2Igc3RlcHMgdG8gcmV1c2luZyBlbnRpcmUgZXhlY3V0b3JzLiBZb3UgY2FuIGFsc28gcGFzcyBwYXJhbWV0ZXJzIGludG8gdGhlc2UgcmV1c2FibGUgZWxlbWVudHMuIFRoaXMgaXMgdXNlZnVsIGZvciB3aGVuIHlvdSBuZWVkIHRvIHJldXNlIG11bHRpcGxlIGVsZW1lbnRzIG9mIGEgY29uZmlnIGZpbGUgYWNyb3NzIG11bHRpcGxlIGRpZmZlcmVudCBwYXJ0cyBvZiB5b3VyIHBpcGVsaW5lLiZsdDsvcCZndDsKCiZsdDtwJmd0O1doYXQgZG8gb3JicyBsb29rIGxpa2UgaW4gcHJhY3RpY2U/IFdlbGwsIGhlcmXigJlzIGFuIGV4YW1wbGUgb2YgYSBkZXBsb3ltZW50IHRvIGFuIFMzIGJ1Y2tldCwgd3JpdHRlbiBlbnRpcmVseSBpbiB0aGUgY29uZmlnIGZpbGUgd2l0aG91dCB0aGUgdXNlIG9mIG91ciAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL29yYnMvcmVnaXN0cnkvb3JiL2NpcmNsZWNpL2F3cy1zMyZxdW90OyZndDtBV1MgUzMgZGVwbG95bWVudCBvcmImbHQ7L2EmZ3Q7OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7LSBkZXBsb3k6CiAgICBuYW1lOiBTMyBTeW5jCiAgICBjb21tYW5kOiB8KwogICAgICBhd3MgczMgc3luYyBcCiAgICAgICAgYnVpbGQgczM6Ly9teS1zMy1idWNrZXQtbmFtZS9teS1hcHBsaWNhdGlvbiAtLWRlbGV0ZSBcCiAgICAgICAgLS1hY2wgcHVibGljLXJlYWQgXAogICAgICAtLWNhY2hlLWNvbnRyb2wgJnF1b3Q7bWF4LWFnZT04NjQwMCZxdW90OwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGF04oCZbGwgZ2V0IHRoZSBqb2IgZG9uZS4gQnV0IGhlcmXigJlzIHdoYXQgaXQgbG9va3MgbGlrZSB3aXRoIHRoZSB1c2Ugb2YgdGhlIFMzIG9yYjombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0Oy0gYXdzLXMzL3N5bmM6CiAgICAgZnJvbTogYnVja2V0CiAgICAgdG86IOKAmHMzOi8vbXktczMtYnVja2V0LW5hbWUvbXktYXBwbGljYXRpb27igJkKICAgICBhcmd1bWVudHM6IHwKICAgICAgIC0tYWNsIHB1YmxpYy1yZWFkIFwKICAgICAgIC0tY2FjaGUtY29udHJvbCAmcXVvdDttYXgtYWdlPTg2NDAwJnF1b3Q7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1lvdSBkb27igJl0IG5lZWQgdG8gZGVjbGFyZSBhIHNlcGFyYXRlIGRlcGxveSBzdGFnZSBmb3IgeW91ciBTMyBkZXBsb3ltZW50LiBZb3UgY2FuIHNpbXBseSBpbnZva2UgdGhlIFMzIHN5bmMgZnJvbSB0aGUgb3JiIGFzIGEgc3RlcCBpbiB5b3VyIGNvbmZpZyBmaWxlLiBBZGRpdGlvbmFsbHksIG5vdGUgdGhhdCBhIGxvdCBvZiB0aGUgc2FtZSBpbmZvcm1hdGlvbiBpcyBzdGlsbCBpbmNsdWRlZCwgYnV0IGl0IGlzIG5vdyByZXByZXNlbnRlZCBhcyBwYXJhbWV0ZXJzIHRoYXQgYXJlIHBhc3NlZCBpbnRvIHRoZSBvcmIgaW5zdGVhZCBvZiBhcyBhIHNjcmlwdCBpbiB0aGUgY29uZmlndXJhdGlvbiBmaWxlLiBOb3Qgb25seSBpcyB0aGlzIG1vcmUgY29tcGFjdCwgYnV0IGl0IGFsc28gbWFrZXMgaXQgdmVyeSBlYXN5IHRvIG1ha2UgY2hhbmdlcyB0byB5b3VyIFMzIGRlcGxveW1lbnQgYXMgbmVlZGVkIGJ5IGFkZGluZywgcmVtb3ZpbmcsIG9yIGNoYW5naW5nIGFyZ3VtZW50cy4gUGx1cywgaXTigJlzIGEgYml0IGVhc2llciB0byBncmFzcCBhdCBhIGdsYW5jZSBhbmQgc2NhbGUgYWNyb3NzIG11bHRpcGxlIHByb2plY3RzIGJ5IHVwZGF0aW5nIGp1c3QgdGhlIG9yYi4gIFRoZSBtb3N0IGltcG9ydGFudCB0YWtlYXdheSBmcm9tIGFsbCB0aGUgdGlwcyBtZW50aW9uZWQgaGVyZSBpcyB0aGF0IEQuUi5ZIC0gbmVzcyBpc27igJl0IGp1c3QgYW4gZXN0aGV0aWMgdGhpbmcuIFdpdGggb3JicywgdGhlIGFiaWxpdHkgdG8gcmVwbGljYXRlIGFjcm9zcyBwcm9qZWN0cyBpcyBnb2xkZW4uIEhhcHB5IG9yYi1vcHRpbWl6aW5nISZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25maWd1cmF0aW9uIHJldmlldyZsdDsvaDImZ3Q7CiZsdDtwJmd0O0FzIHBhcnQgb2Ygb3VyIHByZW1pdW0gc3VwcG9ydCBwYWNrYWdlcywgd2Ugb2ZmZXIgYSBjb25maWd1cmF0aW9uIHJldmlldyBwcmVtaXVtIHNlcnZpY2Ugb24gb3VyIEdvbGQgYW5kIFBsYXRpbnVtIHN1cHBvcnQgcGxhbnMuIFdpdGggdGhlIGNvbmZpZ3VyYXRpb24gcmV2aWV3IHNlcnZpY2UsIGEgQ2lyY2xlQ0kgRGV2T3BzIGN1c3RvbWVyIGVuZ2luZWVyIHdpbGwgaGVscCB5b3VyIHRlYW0gYnVpbGQgYSBuZXcgY29uZmlnIG9yIHJldmlldyBhbiBleGlzdGluZyBvbmUsIHNvIHlvdSBjYW4gc2F2ZSB0aW1lIGluIHlvdXIgYnVpbGQgY3ljbGUuIFdl4oCZbGwgcmV2aWV3IHlvdXIgbmVlZHMgYW5kIHByb3ZpZGUgcmVjb21tZW5kYXRpb25zIHRvIGdldCB0aGUgbW9zdCBvdXQgb2YgQ2lyY2xlQ0nigJlzIGZlYXR1cmVzLiZsdDsvcCZndDsKCiZsdDtwJmd0O0lmIHlvdeKAmXJlIGludGVyZXN0ZWQgaW4gbGVhcm5pbmcgbW9yZSBhYm91dCB0aGUgYXZhaWxhYmxlIHByZW1pdW0gc2VydmljZXMgYW5kIFN1cHBvcnQgUGxhbnMsIHBsZWFzZSBjb250YWN0IHVzIGF0IGNzQGNpcmNsZWNpLmNvbS4mbHQ7L3AmZ3Q7CgombHQ7aHIgLyZndDsKCiZsdDtwJmd0O1RoaXMgcG9zdCB3b3VsZCBub3QgaGF2ZSBiZWVuIHBvc3NpYmxlIHdpdGhvdXQgdGhlIGNvbWJpbmVkIGVmZm9ydHMgb2YgdGhlIGVudGlyZSBjdXN0b21lciBlbmdpbmVlcmluZyB0ZWFtOiBBbm5hIENhbGluYXdhbiwgSm9oYW5uYSBHcmlmZmluLCBhbmQgR3JhbnQgTWFjR2lsbGl2cmF5LiZsdDsvcCZndDsKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgICAgIAogICAgICA8aXRlbT4KICAgICAgICA8dGl0bGU+QXV0b21hdGljIHRlc3RpbmcgZm9yIFN5bWZvbnkgYXBwbGljYXRpb25zPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2F1dG9tYXRpYy10ZXN0aW5nLWZvci1zeW1mb255LWFwcGxpY2F0aW9ucy88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+TW9uLCAxNSBKdW4gMjAyMCAwODowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9hdXRvbWF0aWMtdGVzdGluZy1mb3Itc3ltZm9ueS1hcHBsaWNhdGlvbnMvPC9ndWlkPgogICAgICAgIAogICAgICAgICAgPGRjOmNyZWF0b3I+T2x1c3VzaSBPbHV5ZW1pPC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0O0hhdmluZyB0byBpbXBsZW1lbnQgbmV3IHdlYiBvciBtb2JpbGUgYXBwbGljYXRpb24gZmVhdHVyZXMgaXMgaW5ldml0YWJsZSBhbmQgY2FuIG9mdGVuIGJlIHZlcnkgaW1wb3J0YW50LiBUaGlzIG5ldyBjb2RlIHBvc2VzIGEgdGhyZWF0IHRvIHRoZSBwb3NzaWJpbGl0eSBvZiBidWlsZGluZyBhIGJ1Zy1mcmVlIGFwcGxpY2F0aW9uLCBhbmQgY2FuIGJyZWFrIHRoZSBhbHJlYWR5IGltcGxlbWVudGVkIGZlYXR1cmVzIGlmIGNhcmUgaXMgbm90IHRha2VuLiBPbmUgb2YgdGhlIHdheXMgdG8gYnVpbGQgYmV0dGVyIGFuZCBtb3JlIHJlbGlhYmxlIGFwcGxpY2F0aW9ucyBpcyBieSB0ZXN0aW5nIHlvdXIgY29kZSB1c2luZyB1bml0IGFuZCBmdW5jdGlvbmFsIHRlc3RzLiZsdDsvcCZndDsKCiZsdDtwJmd0O1Rlc3RpbmcgaXMgYSByZWNvbW1lbmRlZCBiZXN0IHByYWN0aWNlIGJlY2F1c2UgaXQgZW5zdXJlcyB0aGF0IG5ldyByZWxlYXNlcyBtZWV0IHF1YWxpdHkgYW5kIHBlcmZvcm1hbmNlIGdvYWxzLiBSZWdhcmRsZXNzIG9mIHRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZSBvciBmcmFtZXdvcmsgdGhhdCBhbiBhcHBsaWNhdGlvbiBpcyBidWlsdCB3aXRoLCB0aGUgdGVzdC1kcml2ZW4gZGV2ZWxvcG1lbnQgYXBwcm9hY2ggaXMgc2ltaWxhciBhY3Jvc3MgdGhlIGJvYXJkLiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIHRoaXMgdHV0b3JpYWwsIHdlIHdpbGwgY3JlYXRlIGEgbmV3IFN5bWZvbnkgYXBwbGljYXRpb24gcHJvamVjdCB0byBtYW5hZ2UgY3VzdG9tZXIgZGV0YWlscy4gV2hpbGUgdGhpcyB3b27igJl0IGJlIGFuIGFwcGxpY2F0aW9uIHdpdGggYSBjb21wbGV0ZSBDUlVEIGZ1bmN0aW9uYWxpdHksIHdlIHdpbGwgY3JlYXRlIGEgY291cGxlIG9mIG1ldGhvZHMsIGEgY29udHJvbGxlciwgYW5kIHRoZW4gaW50cm9kdWNlIGJvdGggdW5pdCBhbmQgZnVuY3Rpb25hbCB0ZXN0cyB0byBlbnN1cmUgdGhhdCBhcHByb3ByaWF0ZSByZXNwb25zZXMgYXJlIHJldHVybmVkIGZyb20gZWFjaCBmdW5jdGlvbiBhcyBleHBlY3RlZC4gVG8gdG9wIGl0IGFsbCBvZmYsIHdlIHdpbGwgYXV0b21hdGUgb3VyIHRlc3QgYnkgbGV2ZXJhZ2luZyB0aGUgdXNlIG9mIENpcmNsZUNJLiZsdDsvcCZndDsKCiZsdDtoMiZndDtQcmVyZXF1aXNpdGVzJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIGdldCB0aGUgbW9zdCBvdXQgb2YgdGhpcyBwb3N0LCBlbnN1cmUgdGhhdCB5b3UgaGF2ZTombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O0EgYmFzaWMga25vd2xlZGdlIG9mIGJ1aWxkaW5nIGFwcGxpY2F0aW9ucyB3aXRoICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9zeW1mb255LmNvbS9kb2MvY3VycmVudC9pbmRleC5odG1sJnF1b3Q7Jmd0O1N5bWZvbnkmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dldGNvbXBvc2VyLm9yZy8mcXVvdDsmZ3Q7Q29tcG9zZXImbHQ7L2EmZ3Q7IGluc3RhbGxlZCBnbG9iYWxseSBvbiB5b3VyIGNvbXB1dGVyJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9qb2luJnF1b3Q7Jmd0O0dpdEh1YiBhY2NvdW50Jmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NpcmNsZWNpLmNvbS9zaWdudXAvJnF1b3Q7Jmd0O0NpcmNsZUNJIGFjY291bnQmbHQ7L2EmZ3Q7Jmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMiZndDtHZXR0aW5nIHN0YXJ0ZWQmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7U3RhcnQgYnkgdXNpbmcgQ29tcG9zZXIgdG8gY3JlYXRlIGEgbmV3IFN5bWZvbnkgYXBwbGljYXRpb24gdXNpbmcgdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Y29tcG9zZXIgY3JlYXRlLXByb2plY3Qgc3ltZm9ueS93ZWJzaXRlLXNrZWxldG9uIG5ldy1zeW1mb255LWFwcAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGUgcHJlY2VkaW5nIGNvbW1hbmQgd2lsbCBjcmVhdGUgYSBuZXcgZm9sZGVyIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25ldy1zeW1mb255LWFwcCZsdDsvY29kZSZndDsgaW4gdGhlIHJvb3QgZm9sZGVyIHdoZXJlIHlvdSByYW4gdGhlIGNvbW1hbmQuIEl0IHdpbGwgYWxzbyBpbnN0YWxsIGFsbCBvZiB0aGUgcmVxdWlyZWQgZGVwZW5kZW5jaWVzLiZsdDsvcCZndDsKCiZsdDtwJmd0O05leHQsIG1vdmUgaW50byB0aGUgbmV3bHkgY3JlYXRlZCBwcm9qZWN0IGFuZCBpbnN0YWxsIGEgd2ViIHNlcnZlciB0byBydW4gdGhlIGFwcGxpY2F0aW9uOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Ly8gbW92ZSBpbnRvIHByb2plY3QKY2QgbmV3LXN5bWZvbnktYXBwCgovLyBpbnN0YWxsbCB3ZWIgc2VydmVyCmNvbXBvc2VyIHJlcXVpcmUgc3ltZm9ueS93ZWItc2VydmVyLWJ1bmRsZSAtLWRldiBeNC40LjIKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgeW91IGhhdmUgYSBuZXcgcHJvamVjdCBzZXQgdXAsIHByb2NlZWQgdG8gaW5pdGlhbGl6ZSB0aGUgcHJvamVjdCB3aXRoICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXQtc2NtLmNvbS8mcXVvdDsmZ3Q7R2l0Jmx0Oy9hJmd0OyBsb2NhbGx5IGFuZCBsaW5rIGl0IHVwIHdpdGggR2l0SHViLiBCdXQgYmVmb3JlIHRoYXQsIGhlYWQgb3ZlciB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS8mcXVvdDsmZ3Q7R2l0SHViJmx0Oy9hJmd0OyBhbmQgY3JlYXRlIGEgcmVwb3NpdG9yeSBmb3IgeW91ciBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDUtMjctY3JlYXRlLXJlcG8ucG5nJnF1b3Q7IGFsdD0mcXVvdDtHaXRIdWIgY3JlYXRlIG5ldyByZXBvc2l0b3J5JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7RmVlbCBmcmVlIHRvIHVzZSB0aGUgc2FtZSBuYW1lIGZvciB0aGUgcHJvamVjdCBvbiBHaXRIdWIuIE5vdywgaW5pdGlhbGl6ZSBHaXQgbG9jYWxseSB3aXRoaW4geW91ciBwcm9qZWN0IGZvbGRlciB3aXRoOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Z2l0IGluaXQKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIHNldCB1cCB0aGUgcHJvamVjdCBhcyBhIEdpdCByZXBvc2l0b3J5LiBOZXh0LCBjb21taXQgeW91ciBjaGFuZ2VzIGxvY2FsbHkgd2l0aDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2dpdCBhZGQgLgoKZ2l0IGNvbW1pdCAtbSAmcXVvdDtJbml0aWFsIGNvbW1pdCZxdW90OwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtSZWdpc3RlciB0aGUgcmVtb3RlIHJlcG9zaXRvcnkgdXNpbmcgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dpdCByZW1vdGUgYWRkJmx0Oy9jb2RlJmd0OyBjb21tYW5kIG9uIHRoZSB0ZXJtaW5hbCB3aXRoaW4geW91ciBwcm9qZWN0IGZvbGRlci4gVGhpcyBjb21tYW5kIHRha2VzIHR3byBhcmd1bWVudDombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0O0EgcmVtb3RlIG5hbWUsIGZvciBleGFtcGxlLCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtvcmlnaW4mbHQ7L2NvZGUmZ3Q7Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSByZW1vdGUgVVJMLCBmb3IgZXhhbXBsZSwgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aHR0cHM6Ly9naXRodWIuY29tLyZhbXA7bHQ7eW91cl91c2VybmFtZSZhbXA7Z3Q7LyZhbXA7bHQ7eW91cl9yZXBvJmFtcDtndDsuZ2l0Jmx0Oy9jb2RlJmd0OyZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtJbiBteSBjYXNlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Ly8gYWRkIHJlbW90ZSBvcmlnaW4KZ2l0IHJlbW90ZSBhZGQgb3JpZ2luIGh0dHBzOi8vZ2l0aHViLmNvbS95ZW1pd2ViYnkvbmV3LXN5bWZvbnktYXBwLmdpdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtOZXh0LCBwdXNoIHRoZSBsb2NhbCBwcm9qZWN0IHRvIGl0cyBtYXN0ZXIgYnJhbmNoIGFzIGNyZWF0ZWQgb24geW91ciBHaXRIdWIgYWNjb3VudCB1c2luZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsvLyBwdXNoIHRvIHRoZSByZXBvCmdpdCBwdXNoIC11IG9yaWdpbiBtYXN0ZXIKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgd2UgaGF2ZSBhIG5ldyBTeW1mb255IHByb2plY3Qgc2V0IHVwIGFuZCBwdXNoZWQgdG8gYSByZW1vdGUgcmVwb3NpdG9yeSwgaW4gdGhlIG5leHQgc2VjdGlvbiB3ZSB3aWxsIGNyZWF0ZSBhIGNvbnRyb2xsZXIgYW5kIGFuIGVudGl0eSBjbGFzcyBmb3IgdGhlIEN1c3RvbWVyLiZsdDsvcCZndDsKCiZsdDtoMiZndDtDcmVhdGluZyBhIGNvbnRyb2xsZXImbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7Q29udHJvbGxlcnMgYXJlIHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyBIVFRQIHJlcXVlc3RzIGFuZCByZXR1cm5pbmcgdGhlIGFwcHJvcHJpYXRlIHJlc3BvbnNlcy4gVG8gYXV0b21hdGljYWxseSBnZW5lcmF0ZSBhIGNvbnRyb2xsZXIgZm9yIHRoaXMgYXBwbGljYXRpb24sIHVzZSB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3N5bWZvbnkuY29tL2RvYy9jdXJyZW50L2J1bmRsZXMvU3ltZm9ueU1ha2VyQnVuZGxlL2luZGV4Lmh0bWwmcXVvdDsmZ3Q7bWFrZXIgYnVuZGxlJmx0Oy9hJmd0OyB0aGF0IGNvbWVzIGluc3RhbGxlZCB3aXRoIFN5bWZvbnkgYnkgcnVubmluZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtwaHAgYmluL2NvbnNvbGUgbWFrZTpjb250cm9sbGVyIEN1c3RvbWVyQ29udHJvbGxlcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGlzIHdpbGwgY3JlYXRlIHR3byBuZXcgZmlsZXMgZm9yIHlvdTombHQ7L3AmZ3Q7CiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7QSBjb250cm9sbGVyIGxvY2F0ZWQgaW4gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3JjL0NvbnRyb2xsZXIvQ3VzdG9tZXJDb250cm9sbGVyLnBocCZsdDsvY29kZSZndDsmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBIHZpZXcgcGFnZSBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0ZW1wbGF0ZXMvY3VzdG9tZXIvaW5kZXguaHRtbC50d2lnJmx0Oy9jb2RlJmd0OyZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtPcGVuIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdXN0b21lckNvbnRyb2xsZXIucGhwJmx0Oy9jb2RlJmd0OyBmaWxlIGFuZCByZXBsYWNlIHRoZSBjb250ZW50cyB3aXRoOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7Y3AmcXVvdDsmZ3Q7JmFtcDtsdDs/cGhwJmx0Oy9zcGFuJmd0OwoKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtuYW1lc3BhY2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0FwcFxDb250cm9sbGVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtTeW1mb255XEJ1bmRsZVxGcmFtZXdvcmtCdW5kbGVcQ29udHJvbGxlclxBYnN0cmFjdENvbnRyb2xsZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3VzZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7U3ltZm9ueVxDb21wb25lbnRcUm91dGluZ1xBbm5vdGF0aW9uXFJvdXRlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7Y2xhc3MmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25jJnF1b3Q7Jmd0O0N1c3RvbWVyQ29udHJvbGxlciZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtleHRlbmRzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBYnN0cmFjdENvbnRyb2xsZXImbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3NkJnF1b3Q7Jmd0Oy8qKgogICAgICogQFJvdXRlKCZxdW90Oy8mcXVvdDssIG5hbWU9JnF1b3Q7Y3VzdG9tZXImcXVvdDssIG1ldGhvZHM9eyZxdW90O0dFVCZxdW90O30pCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7aW5kZXgmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskY3VzdG9tZXJOYW1lJmx0Oy9zcGFuJmd0OyAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzMiZxdW90OyZndDsmcXVvdDtKb2huIERvZSZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtyZXR1cm4mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyR0aGlzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3JlbmRlciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7J2N1c3RvbWVyL2luZGV4Lmh0bWwudHdpZycmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O1smbHQ7L3NwYW4mZ3Q7CiAgICAgICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OyduYW1lJyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lck5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7XSk7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1N5bWZvbnkgdXNlcyByb3V0ZSBhbm5vdGF0aW9uIGFzIHRoZSBtb3N0IHByZWZlcnJlZCBvcHRpb24gd2hlbiBkZWZpbmluZyB0aGUgcm91dGVzIGZvciBhbiBhcHBsaWNhdGlvbi4gSGVyZSwgd2UgZGVmaW5lZCBhIHJvdXRlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy8mbHQ7L2NvZGUmZ3Q7IHdpdGggdGhlIG5hbWUsICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2N1c3RvbWVyJmx0Oy9jb2RlJmd0Oy4gVGhpcyB3aWxsIGluc3RydWN0IFN5bWZvbnkgdG8gZGlyZWN0IGFueSByZXF1ZXN0IHRvIHRoZSBob21lcGFnZSB0byB0aGlzIG1ldGhvZCBkZWZpbmVkIGhlcmUuIFNvIHdoZW4gYSB1c2Vy4oCZcyByZXF1ZXN0IGhpdHMgdGhpcyByb3V0ZSwgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2luZGV4KCkmbHQ7L2NvZGUmZ3Q7IHdpbGwgcmVuZGVyIGEgdmlldyB0aGF0IHdpbGwgY29udGFpbiBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyRjdXN0b21lck5hbWUmbHQ7L2NvZGUmZ3Q7IGhhcmRjb2RlZCB3aXRoaW4gdGhlIGZpbGUgYWJvdmUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgb3BlbiB0aGUgdmlldyBmaWxlIGxvY2F0ZWQgaW4gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7dGVtcGxhdGVzL2N1c3RvbWVyL2luZGV4Lmh0bWwudHdpZyZsdDsvY29kZSZndDsgYW5kIHJlcGxhY2UgdGhlIGNvbnRlbnRzIHdpdGggdGhlIGZvbGxvd2luZzombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3slIGV4dGVuZHMgJ2Jhc2UuaHRtbC50d2lnJyAlfQp7JSBibG9jayB0aXRsZSAlfSBDdXN0b21lciBQYWdlIHslIGVuZGJsb2NrICV9CnslIGJsb2NrIGJvZHkgJX0KJmFtcDtsdDtkaXYgY2xhc3M9JnF1b3Q7ZXhhbXBsZS13cmFwcGVyJnF1b3Q7JmFtcDtndDsKICAmYW1wO2x0O2gxJmFtcDtndDtIZWxsbywgV2VsY29tZSB0byB0aGUgY3VzdG9tZXIgcGFnZSZhbXA7bHQ7L2gxJmFtcDtndDsKCiAgJmFtcDtsdDtoMiZhbXA7Z3Q7Q3VzdG9tZXIgbmFtZSBpcyA6IHt7IG5hbWUgfX0mYW1wO2x0Oy9oMiZhbXA7Z3Q7CiZhbXA7bHQ7L2RpdiZhbXA7Z3Q7CnslIGVuZGJsb2NrICV9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1dlIHVwZGF0ZWQgdGhlIHZpZXcgdG8gZHluYW1pY2FsbHkgcmVuZGVyIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtuYW1lJmx0Oy9jb2RlJmd0OyB2YXJpYWJsZSByZXByZXNlbnRpbmcgdGhlIGRlZmF1bHQgbmFtZSBvZiBhIGN1c3RvbWVyLiBZb3UgY2FuIHJ1biB0aGUgYXBwbGljYXRpb24gbG9jYWxseSB1c2luZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtwaHAgYmluL2NvbnNvbGUgc2VydmVyOnJ1bgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtOb3csIG5hdmlnYXRlIHRvICZsdDthIGhyZWY9JnF1b3Q7aHR0cDovL2xvY2FsaG9zdDo4MDAwJnF1b3Q7Jmd0O2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMCZsdDsvYSZndDsgdG8gdmlldyB0aGUgaG9tZXBhZ2UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNS0yNy1hcHBsaWNhdGlvbi1ob21lcGFnZS5wbmcmcXVvdDsgYWx0PSZxdW90O0FwcGxpY2F0aW9uIGhvbWVwYWdlJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhpcyBwYWdlIHJlbmRlcnMgdGhlIG5hbWUgb2YgYSBjdXN0b21lciBoYXJkY29kZWQgd2l0aGluIHRoZSBjb250cm9sbGVyIGFuZCBwYXNzZXMgaXQgdG8gdGhlIHZpZXcuIEl0IGlzIGEgc2ltaWxhciBwcm9jZXNzIG9mIGR5bmFtaWNhbGx5IHJlbmRlcmluZyBjb250ZW50cyB3aXRoaW4gdGhlIHZpZXcgb2YgYW4gYXBwbGljYXRpb24gd2l0aCBNVkMgc3RydWN0dXJlLiBXZSB3aWxsIHdyaXRlIGEgZnVuY3Rpb25hbCB0ZXN0IGZvciB0aGlzIGJlaGF2aW91ciBpbiBhIGJpdC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgYW4gZW50aXR5Jmx0Oy9oMiZndDsKCiZsdDtwJmd0O0hlcmUsIHdlIHdpbGwgY3JlYXRlIGEgbW9kZWwgdGhhdCB3aWxsIHJlcHJlc2VudCBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0N1c3RvbWVyJmx0Oy9jb2RlJmd0OyBvYmplY3QuIFJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmQgZm9yIHRoYXQgcHVycG9zZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3BocCBiaW4vY29uc29sZSBtYWtlOmVudGl0eSBDdXN0b21lcgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtZb3Ugd2lsbCBiZSBwcm9tcHRlZCB0byBhZGQgc29tZSBmaWVsZHMgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NyYy9FbnRpdHkvQ3VzdG9tZXIucGhwJmx0Oy9jb2RlJmd0OyBmaWxlLiBZb3UgY2FuIGRvIHRoaXMgbWFudWFsbHksIGlmIHlvdSBwcmVmZXIuIE90aGVyd2lzZSwgZW50ZXIgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Zmlyc3ROYW1lJmx0Oy9jb2RlJmd0OyBhbmQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bGFzdE5hbWUmbHQ7L2NvZGUmZ3Q7IGFzIHRoZSBmaWVsZHMgZm9yIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdXN0b21lciZsdDsvY29kZSZndDsgY2xhc3MgYW5kIFN5bWZvbnkgTWFrZXJCdW5kbGUgd2lsbCBoYW5kbGUgdGhlIHJlc3QuIENoZWNrIHRoZSBpbWFnZSBiZWxvdy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA1LTI3LWNyZWF0ZS1lbnRpdHkucG5nJnF1b3Q7IGFsdD0mcXVvdDtDcmVhdGluZyBlbnRpdHkgdXNpbmcgbWFrZXJidW5kbGUmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtGb3IgY29uZmlybWF0aW9uLCBoZXJlIGlzIHdoYXQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0N1c3RvbWVyLnBocCZsdDsvY29kZSZndDsgZmlsZSB3aWxsIGxvb2sgbGlrZS4gVXBkYXRlIHlvdXJzIHRvIG1hdGNoIHdoYXQgaXMgc2VlbiBoZXJlOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7Y3AmcXVvdDsmZ3Q7JmFtcDtsdDs/cGhwJmx0Oy9zcGFuJmd0OwoKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtuYW1lc3BhY2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0FwcFxFbnRpdHkmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwoKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDt1c2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0FwcFxSZXBvc2l0b3J5XEN1c3RvbWVyUmVwb3NpdG9yeSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtEb2N0cmluZVxPUk1cTWFwcGluZyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDthcyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7T1JNJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O3NkJnF1b3Q7Jmd0Oy8qKgogKiBAT1JNXEVudGl0eShyZXBvc2l0b3J5Q2xhc3M9Q3VzdG9tZXJSZXBvc2l0b3J5OjpjbGFzcykKICovJmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O2NsYXNzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYyZxdW90OyZndDtDdXN0b21lciZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7c2QmcXVvdDsmZ3Q7LyoqCiAgICAgKiBAT1JNXElkKCkKICAgICAqIEBPUk1cR2VuZXJhdGVkVmFsdWUoKQogICAgICogQE9STVxDb2x1bW4odHlwZT0mcXVvdDtpbnRlZ2VyJnF1b3Q7KQogICAgICovJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwcml2YXRlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskaWQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwoKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3NkJnF1b3Q7Jmd0Oy8qKgogICAgICogQE9STVxDb2x1bW4odHlwZT0mcXVvdDtzdHJpbmcmcXVvdDssIGxlbmd0aD0yNTUpCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3ByaXZhdGUmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRmaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwoKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3NkJnF1b3Q7Jmd0Oy8qKgogICAgICogQE9STVxDb2x1bW4odHlwZT0mcXVvdDtzdHJpbmcmcXVvdDssIGxlbmd0aD0yNTUpCiAgICAgKi8mbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3ByaXZhdGUmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRsYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O2dldElkJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs6Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz8mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7aW50Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cmV0dXJuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtpZCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O2dldEZpcnN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7OiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs/Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O3N0cmluZyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3JldHVybiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Zmlyc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKCiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3B1YmxpYyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtmdW5jdGlvbiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmYmcXVvdDsmZ3Q7c2V0Rmlyc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtzdHJpbmcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRmaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7OiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7c2VsZiZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtmaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGZpcnN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cmV0dXJuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O2dldExhc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs6Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz8mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7c3RyaW5nJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cmV0dXJuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtsYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O3NldExhc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtzdHJpbmcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRsYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OykmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs6Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtzZWxmJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyR0aGlzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2xhc3ROYW1lJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRsYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7cmV0dXJuJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O2dldEN1c3RvbWVyRnVsbE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0OzombHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O3N0cmluZyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3JldHVybiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Z2V0Rmlyc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7JycmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Z2V0TGFzdE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dldHRlcnMmbHQ7L2NvZGUmZ3Q7IGFuZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzZXR0ZXJzJmx0Oy9jb2RlJmd0OyBjcmVhdGVkIHdlcmUgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgU3ltZm9ueS4gV2UgaW5jbHVkZWQgYSBuZXcgbWV0aG9kIHRvIHJldHVybiB0aGUgZnVsbCBuYW1lIG9mIGEgY3VzdG9tZXIgbmFtZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Z2V0Q3VzdG9tZXJGdWxsTmFtZSgpJmx0Oy9jb2RlJmd0Oy4gV2Ugd2lsbCB3cml0ZSB1bml0IHRlc3RzIGZvciB0aGUgaW5kaXZpZHVhbCBmdW5jdGlvbnMgZGVmaW5lZCBoZXJlIGxhdGVyIGluIHRoZSB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q3JlYXRpbmcgdGVzdHMgdXNpbmcgUEhQVW5pdCZsdDsvaDImZ3Q7CgombHQ7cCZndDtTeW1mb255IGludGVncmF0ZXMgd2l0aCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vcGhwdW5pdC5kZS8mcXVvdDsmZ3Q7UEhQVW5pdCZsdDsvYSZndDssIGEgdGVzdGluZyBmcmFtZXdvcmsgZm9yIFBIUC4gQmVmb3JlIHdyaXRpbmcgYW55IHRlc3RzLCBleGVjdXRlIFBIUFVuaXQgYnkgcnVubmluZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsuL2Jpbi9waHB1bml0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0JlY2F1c2Ugd2UgYXJlIHJ1bm5pbmcgdGhlIGNvbW1hbmQgYWJvdmUgZm9yIHRoZSBmaXJzdCB0aW1lLCBpdCB3aWxsIGluc3RhbGwgUEhQVW5pdCBhbmQgYWxsIGl0cyByZXF1aXJlZCBkZXBlbmRlbmNpZXMgZm9yIG91ciBhcHBsaWNhdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7aDMmZ3Q7V3JpdGluZyB1bml0IHRlc3RzJmx0Oy9oMyZndDsKCiZsdDtwJmd0O0EgdW5pdCB0ZXN0IGJ5IGRlZmluaXRpb24gaXMgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgYSB0ZXN0IG9mIGEgaW5kaXZpZHVhbCBjb21wb25lbnQgKHVuaXQpIG9mIGNvZGUuIFdyaXRpbmcgYSB1bml0IHRlc3QgZm9yIGEgU3ltZm9ueSBhcHBsaWNhdGlvbiBpcyBzaW1pbGFyIHRvIHRoZSBzdGFuZGFyZCBQSFBVbml0IHVuaXQgdGVzdC4gSGVyZSwgd2Ugd2lsbCB3cml0ZSB0ZXN0cyBmb3IgdGhlIG1ldGhvZHMgY3JlYXRlZCB3aXRoaW4gdGhlIEN1c3RvbWVyIEVudGl0eSBmaWxlLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGJlZ2luLCBjcmVhdGUgYSBuZXcgZm9sZGVyIG5hbWUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7RW50aXR5Jmx0Oy9jb2RlJmd0OyB3aXRoaW4gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Rlc3RzJmx0Oy9jb2RlJmd0OyBmb2xkZXIuIEFuZCB3aXRoaW4gdGhlIG5ld2x5IGNyZWF0ZWQgZm9sZGVyLCBjcmVhdGUgYSBuZXcgZmlsZSBhbmQgY2FsbCBpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdXN0b21lclRlc3QucGhwJmx0Oy9jb2RlJmd0Oy4gT3BlbiB0aGUgZmlsZSBhbmQgdXNlIHRoZSBmb2xsb3dpbmcgY29udGVudCBmb3IgaXQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtjcCZxdW90OyZndDsmYW1wO2x0Oz9waHAmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7bmFtZXNwYWNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBcHBcVGVzdHNcRW50aXR5Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7dXNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBcHBcRW50aXR5XEN1c3RvbWVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDt1c2UmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O1BIUFVuaXRcRnJhbWV3b3JrXFRlc3RDYXNlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7OyZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7Y2xhc3MmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25jJnF1b3Q7Jmd0O0N1c3RvbWVyVGVzdCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtleHRlbmRzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtUZXN0Q2FzZSZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O3Rlc3RTZXR0aW5nQ3VzdG9tZXJGaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskY3VzdG9tZXImbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtuZXcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O254JnF1b3Q7Jmd0O0N1c3RvbWVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCk7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRmaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7PSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7Sm9obiZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzZXRGaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRmaXJzdE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDspOyZsdDsvc3BhbiZndDsKCiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7YXNzZXJ0RXF1YWxzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskZmlyc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGN1c3RvbWVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2dldEZpcnN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpKTsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O3Rlc3RTZXR0aW5nQ3VzdG9tZXJMYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O25ldyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7Q3VzdG9tZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGxhc3ROYW1lJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O3MyJnF1b3Q7Jmd0OyZxdW90O0RvZSZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzZXRMYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGxhc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyR0aGlzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2Fzc2VydEVxdWFscyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGxhc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGN1c3RvbWVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2dldExhc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkpOyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKCgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O3Rlc3RSZXR1cm5zQ3VzdG9tZXJGdWxsTmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O25ldyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7Q3VzdG9tZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKTsmbHQ7L3NwYW4mZ3Q7CiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGN1c3RvbWVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3NldEZpcnN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7Sm9obiZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0Oyk7Jmx0Oy9zcGFuJmd0OwogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjdXN0b21lciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzZXRMYXN0TmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7czImcXVvdDsmZ3Q7JnF1b3Q7RGVvJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRmdWxsTmFtZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDs9Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskY3VzdG9tZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Z2V0Rmlyc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7JycmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGN1c3RvbWVyJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2dldExhc3ROYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCk7Jmx0Oy9zcGFuJmd0OwoKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskdGhpcyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDthc3NlcnRTYW1lJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskZnVsbE5hbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDssJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskY3VzdG9tZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Z2V0Q3VzdG9tZXJGdWxsTmFtZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpKTsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7fSZsdDsvc3BhbiZndDsKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGZpbGUgYWJvdmUsIHdlIHdyb3RlIHRocmVlIGRpZmZlcmVudCB0ZXN0czombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CiAgJmx0O2xpJmd0OyZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Rlc3RTZXR0aW5nQ3VzdG9tZXJGaXJzdE5hbWUoKSZsdDsvY29kZSZndDs6IEhlcmUgd2UgY3JlYXRlZCBhbiBpbnN0YW5jZSBvZiB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Q3VzdG9tZXImbHQ7L2NvZGUmZ3Q7IGNsYXNzIGFuZCBzZXQgYSBkdW1teSB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIGZpcnN0IG5hbWUgb2YgYSBjdXN0b21lci4gV2UgdGhlbiBwcm9jZWVkZWQgdG8gdXNlIHRoZSBhc3NlcnRpb25zIG1ldGhvZCBmcm9tIFBIUFVuaXQgdG8gY29uZmlybSB0aGUgbmFtZS4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0ZXN0U2V0dGluZ0N1c3RvbWVyTGFzdE5hbWUoKSZsdDsvY29kZSZndDs6IFNpbWlsYXIgdG8gdGhlIGZpcnN0IG1ldGhvZCBkZWZpbmVkIGhlcmUsIHdlIHRlc3RlZCBib3RoIHRoZSBnZXR0ZXIgYW5kIHNldHRlciBtZXRob2QgY3JlYXRlZCBmb3IgY3VzdG9tZXLigJlzIGxhc3QgbmFtZS4mbHQ7L2xpJmd0OwogICZsdDtsaSZndDsmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0ZXN0UmV0dXJuc0N1c3RvbWVyRnVsbE5hbWUoKSZsdDsvY29kZSZndDs6IExhc3RseSwgdGhpcyB0ZXN0IGFzc2VydHMgdGhhdCBib3RoIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJzdE5hbWUmbHQ7L2NvZGUmZ3Q7IGFuZCB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bGFzdE5hbWUmbHQ7L2NvZGUmZ3Q7IG9mIGEgY3VzdG9tZXIgY2FuIGJlIHJldHJpZXZlZCBzdWNjZXNzZnVsbHkuJmx0Oy9saSZndDsKJmx0Oy91bCZndDsKCiZsdDtoMyZndDtSdW5uaW5nIHRoZSB0ZXN0cyBsb2NhbGx5Jmx0Oy9oMyZndDsKCiZsdDtwJmd0O0VhcmxpZXIgd2UgcmFuIG91ciB0ZXN0IHVzaW5nICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0Oy4vYmluL3BocHVuaXQmbHQ7L2NvZGUmZ3Q7IGNvbW1hbmQgZnJvbSB0aGUgdGVybWluYWwuIFdoaWxlIHRoaXMgaXMgc3RpbGwgcmVsZXZhbnQgYW5kIGFwcHJvcHJpYXRlLCB3ZSB3aWxsIHJlc3RydWN0dXJlIHRoaW5ncyBhIGxpdHRsZSBiaXQgYW5kIGF1dG9tYXRlIHRoaXMgY29tbWFuZCBieSBhZGRpbmcgaXQgdG8gdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3NjcmlwdHMmbHQ7L2NvZGUmZ3Q7IHNlY3Rpb24gd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb21wb3Nlci5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlLiBPcGVuICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NvbXBvc2VyLmpzb24mbHQ7L2NvZGUmZ3Q7IGFuZCBhZGQgdGhlIHRlc3QgY29tbWFuZCB0byB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c2NyaXB0cyZsdDsvY29kZSZndDsgc2VjdGlvbjombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3sKICAgIC4uLgogICAgJnF1b3Q7c2NyaXB0cyZxdW90OzogewogICAgICAgIC4uLiwKICAgICAgICAmcXVvdDt0ZXN0JnF1b3Q7OiBbCiAgICAgICAgICAgICZxdW90Oy4vYmluL3BocHVuaXQmcXVvdDsKICAgICAgICBdCiAgICB9Cn0KJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SGVuY2Vmb3J0aCwgdGhlIHRlc3QgY29tbWFuZCB3aWxsIGJlIGF2YWlsYWJsZSBhcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtjb21wb3NlciB0ZXN0Jmx0Oy9jb2RlJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA1LTI3LXJ1bi10ZXN0LXVuaXQucG5nJnF1b3Q7IGFsdD0mcXVvdDtSdW4gdGVzdCB1bml0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7QmVmb3JlIHdlIGFkZCBvdXIgcHJvamVjdCB0byBDaXJjbGVDSSwgbGV04oCZcyB3cml0ZSBhIHZlcnkgc2ltcGxlIGZ1bmN0aW9uYWwgdGVzdCBhcyB3ZWxsLiZsdDsvcCZndDsKCiZsdDtoMyZndDtXcml0aW5nIGZ1bmN0aW9uYWwgdGVzdHMmbHQ7L2gzJmd0OwoKJmx0O3AmZ3Q7V2l0aCBhIGZ1bmN0aW9uYWwgdGVzdCwgeW91IGNhbiBjb21tYW5kIGEgYnJvd3NlciB0byBzdXJmIHRocm91Z2ggeW91ciB3ZWJzaXRlLCBjbGljayBzb21lIGxpbmtzLCBmaWxsIG91dCBmb3JtcywgYW5kIGFzc2VydCB0aGUgdGhpbmdzIGl0IHNlZXMgb24gdGhlIHBhZ2UuIFRvIHN0YXJ0LCBjcmVhdGUgYW5vdGhlciBmb2xkZXIgd2l0aGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0ZXN0cyZsdDsvY29kZSZndDsgZm9sZGVyIGFuZCBuYW1lIGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0NvbnRyb2xsZXImbHQ7L2NvZGUmZ3Q7LCBpdCB3aWxsIGhvdXNlIHRoZSB0ZXN0IHNjcmlwdCBmb3IgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0N1c3RvbWVyQ29udHJvbGxlciZsdDsvY29kZSZndDsuIFByb2NlZWQgdG8gY3JlYXRlIGEgbmV3IGZpbGUgd2l0aGluIHRoZSBuZXdseSBjcmVhdGVkIGZvbGRlciBhbmQgY2FsbCBpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdXN0b21lckNvbnRyb2xsZXJUZXN0LnBocCZsdDsvY29kZSZndDsuIE9wZW4gdGhlIGZpbGUgYW5kIHVzZSB0aGUgZm9sbG93aW5nIGNvbnRlbnQgZm9yIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O2NwJnF1b3Q7Jmd0OyZhbXA7bHQ7P3BocCZsdDsvc3BhbiZndDsKCiZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7bmFtZXNwYWNlJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtBcHBcVGVzdHNcQ29udHJvbGxlciZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OzsmbHQ7L3NwYW4mZ3Q7CgombHQ7c3BhbiBjbGFzcz0mcXVvdDtrJnF1b3Q7Jmd0O3VzZSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bngmcXVvdDsmZ3Q7U3ltZm9ueVxCdW5kbGVcRnJhbWV3b3JrQnVuZGxlXFRlc3RcV2ViVGVzdENhc2UmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDs7Jmx0Oy9zcGFuJmd0OwoKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtjbGFzcyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmMmcXVvdDsmZ3Q7Q3VzdG9tZXJDb250cm9sbGVyVGVzdCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtleHRlbmRzJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtueCZxdW90OyZndDtXZWJUZXN0Q2FzZSZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7ayZxdW90OyZndDtwdWJsaWMmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7ZnVuY3Rpb24mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25mJnF1b3Q7Jmd0O3Rlc3RTaG93Q3VzdG9tZXImbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7eyZsdDsvc3BhbiZndDsKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskY2xpZW50Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oz0mbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O2smcXVvdDsmZ3Q7c3RhdGljJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7OjombHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Y3JlYXRlQ2xpZW50Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCk7Jmx0Oy9zcGFuJmd0OwoKICAgICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudiZxdW90OyZndDskY2xpZW50Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3JlcXVlc3QmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydHRVQnJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7czEmcXVvdDsmZ3Q7Jy8nJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KTsmbHQ7L3NwYW4mZ3Q7CgogICAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyR0aGlzJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2Fzc2VydFJlc3BvbnNlU3RhdHVzQ29kZVNhbWUmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O21pJnF1b3Q7Jmd0OzIwMCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OywmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O252JnF1b3Q7Jmd0OyRjbGllbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Z2V0UmVzcG9uc2UmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtnZXRTdGF0dXNDb2RlJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7KCkpOyZsdDsvc3BhbiZndDsKCiAgICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JHRoaXMmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7byZxdW90OyZndDstJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7YXNzZXJ0U3RyaW5nQ29udGFpbnNTdHJpbmcmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MxJnF1b3Q7Jmd0OydDdXN0b21lciBuYW1lIGlzIDogSm9obiBEb2UnJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3AmcXVvdDsmZ3Q7LCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnYmcXVvdDsmZ3Q7JGNsaWVudCZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtvJnF1b3Q7Jmd0Oy0mYW1wO2d0OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtnZXRSZXNwb25zZSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0OygpJmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O28mcXVvdDsmZ3Q7LSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2dldENvbnRlbnQmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDsoKSk7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7cCZxdW90OyZndDt9Jmx0Oy9zcGFuJmd0OwombHQ7c3BhbiBjbGFzcz0mcXVvdDtwJnF1b3Q7Jmd0O30mbHQ7L3NwYW4mZ3Q7CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0luIHRoZSBjb2RlIHNuaXBwZXQgYWJvdmUsIHdlIHZhbGlkYXRlZCB0aGF0IHRoZSBIVFRQIHJlc3BvbnNlIHdhcyBzdWNjZXNzZnVsIGFzIGl0IHJldHVybmVkIHN0YXR1cyBjb2RlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OzIwMCZsdDsvY29kZSZndDsuIE5leHQsIHdlIHZhbGlkYXRlZCB0aGF0IHRoZSBwYWdlIGNvbnRhaW5zIHRoZSBleHBlY3RlZCBjb250ZW50IHRoYXQgd2FzIGRpc3BsYXllZCBlYXJsaWVyIGluIHRoZSB0dXRvcmlhbC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtZb3UgY2FuIHJ1biB0aGUgdGVzdCBhZ2FpbiB1c2luZzombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2NvbXBvc2VyIHRlc3QKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNS0yNy1ydW4tdGVzdC1mdW5jdGlvbmFsLnBuZyZxdW90OyBhbHQ9JnF1b3Q7UnVuIHRlc3QgZnVuY3Rpb25hbCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtBdXRvbWF0aW5nIHRoZSB0ZXN0cyB3aXRoIENpcmNsZUNJJmx0Oy9oMiZndDsKCiZsdDtwJmd0O05vdyB0aGF0IGFsbCBvdXIgdGVzdHMgaGF2ZSBwcm92ZW4gc3VjY2Vzc2Z1bCBsb2NhbGx5LCB3ZSBuZWVkIHRvIGVuc3VyZSB0aGF0IG9uY2Ugd2UgcHVzaCB0aGUgdXBkYXRlcyBvZiBvdXIgY29kZSB0byB0aGUgR2l0SHViIHJlcG9zaXRvcnksIHRoZSB0ZXN0cyB3aWxsIHJ1biBhdXRvbWF0aWNhbGx5LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGNyZWF0ZSBhIGNvbmZpZ3VyYXRpb24gZmlsZSB0aGF0IHdpbGwgYmUgdXNlZCBieSBDaXJjbGVDSSwgbmF2aWdhdGUgaW50byB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QsIGFuZCBjcmVhdGUgYSBmb2xkZXIgbmFtZWQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LmNpcmNsZWNpJmx0Oy9jb2RlJmd0Oy4gSW5zaWRlIHRoaXMgZm9sZGVyLCBjcmVhdGUgYSBmaWxlIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7IGFuZCB1c2UgdGhlIGZvbGxvd2luZyBjb250ZW50IGZvciBpdDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246IDIKam9iczoKICBidWlsZDoKICAgIGRvY2tlcjoKICAgICAgIyBTcGVjaWZ5IHRoZSB2ZXJzaW9uIHlvdSBkZXNpcmUgaGVyZQogICAgICAtIGltYWdlOiBjaXJjbGVjaS9waHA6Ny40LW5vZGUtYnJvd3NlcnMKCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAoKICAgICAgLSBydW46IHN1ZG8gYXB0IHVwZGF0ZSAjIFBIUCBDaXJjbGVDSSAyLjAgQ29uZmlndXJhdGlvbiBGaWxlIyBQSFAgQ2lyY2xlQ0kgMi4wIENvbmZpZ3VyYXRpb24gRmlsZSBzdWRvIGFwdCBpbnN0YWxsIHpsaWIxZy1kZXYgbGlic3FsaXRlMy1kZXYKICAgICAgLSBydW46IHN1ZG8gZG9ja2VyLXBocC1leHQtaW5zdGFsbCB6aXAKCiAgICAgICMgRG93bmxvYWQgYW5kIGNhY2hlIGRlcGVuZGVuY2llcwogICAgICAtIHJlc3RvcmVfY2FjaGU6CiAgICAgICAgICBrZXlzOgogICAgICAgICAgICAjICZxdW90O2NvbXBvc2VyLmxvY2smcXVvdDsgY2FuIGJlIHVzZWQgaWYgaXQgaXMgY29tbWl0dGVkIHRvIHRoZSByZXBvCiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLXt7IGNoZWNrc3VtICZxdW90O2NvbXBvc2VyLmpzb24mcXVvdDsgfX0KICAgICAgICAgICAgIyBmYWxsYmFjayB0byB1c2luZyB0aGUgbGF0ZXN0IGNhY2hlIGlmIG5vIGV4YWN0IG1hdGNoIGlzIGZvdW5kCiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLQoKICAgICAgLSBydW46CiAgICAgICAgICBuYW1lOiAmcXVvdDtJbnN0YWxsIERlcGVuZGVuY2llcyZxdW90OwogICAgICAgICAgY29tbWFuZDogY29tcG9zZXIgaW5zdGFsbCAtbiAtLXByZWZlci1kaXN0CgogICAgICAtIHNhdmVfY2FjaGU6CiAgICAgICAgICBrZXk6IHYxLWRlcGVuZGVuY2llcy17eyBjaGVja3N1bSAmcXVvdDtjb21wb3Nlci5qc29uJnF1b3Q7IH19CiAgICAgICAgICBwYXRoczoKICAgICAgICAgICAgLSAuL3ZlbmRvcgoKICAgICAgIyBydW4gdGVzdHMgd2l0aCBwaHB1bml0CiAgICAgIC0gcnVuOgogICAgICAgICAgbmFtZTogJnF1b3Q7UnVuIHRlc3RzJnF1b3Q7CiAgICAgICAgICBjb21tYW5kOiBjb21wb3NlciB0ZXN0CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1doYXQgd2UgaGF2ZSBkb25lIGhlcmUgaXMgdG8gc3BlY2lmeSB0aGUgdmVyc2lvbiBvZiBQSFAgdGhhdCBuZWVkcyB0byBiZSBpbnN0YWxsZWQgYXMgYSBwYXJ0IG9mIHRoZSBEb2NrZXIgaW1hZ2UgdGhhdCB3aWxsIGJlIHB1bGxlZCBmcm9tIENpcmNsZUNJIGltYWdlIHJlZ2lzdHJ5LiBOZXh0LCB3ZSBzcGVjaWZ5IHRoYXQgYWxsIHRoZSBkZXBlbmRlbmNpZXMgYmUgaW5zdGFsbGVkIGZvciBvdXIgcHJvamVjdCBhbmQgdGhlbiBmaW5hbGx5IGluY2x1ZGUgYSBjb21tYW5kIHRvIHJ1biB0aGUgdGVzdHMuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7WW91IGNhbiBub3cgY29tbWl0IGFsbCB0aGUgY2hhbmdlcyBtYWRlIHNvIGZhciBhbmQgcHVzaCBhbGwgdXBkYXRlcyB0byB0aGUgcHJvamVjdOKAmXMgcmVwb3NpdG9yeSBvbiBHaXRIdWIuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1NldCB1cCBwcm9qZWN0IG9uIENpcmNsZUNJJmx0Oy9oMiZndDsKCiZsdDtwJmd0O0hlcmUgd2Ugd2lsbCBjb25uZWN0IG91ciBTeW1mb255IGFwcGxpY2F0aW9uIHRvIENpcmNsZUNJLiBOYXZpZ2F0ZSB0byAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tLyZxdW90OyZndDtDaXJjbGVDSSB3ZWJzaXRlJmx0Oy9hJmd0OyBhbmQgbG9nIGluIHdpdGggeW91ciBhY2NvdW50LiBPbiB0aGUgQ2lyY2xlQ0kgY29uc29sZSwgZ28gdG8gdGhlICZsdDtzdHJvbmcmZ3Q7QWRkIFByb2plY3RzJmx0Oy9zdHJvbmcmZ3Q7IHBhZ2UgYW5kIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDsuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNS0yNy1wcm9qZWN0LWRhc2hib2FyZC5wbmcmcXVvdDsgYWx0PSZxdW90O0NpcmNsZUNJIHByb2plY3QgZGFzaGJvYXJkJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIHNob3cgdGhlIHBhZ2UgYmVsb3cuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7Li4vc3JjL2Jsb2cvbWVkaWEvMjAyMC0wNS0yNy1wcm9qZWN0LWNvbmZpZy1wYWdlLnBuZyZxdW90OyBhbHQ9JnF1b3Q7Q2lyY2xlQ0kgcHJvamVjdCBjb25maWd1cmF0aW9uIHBhZ2UmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3csIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsgYW5kIHlvdSB3aWxsIHNlZSBhIHByb21wdCBhc2tpbmcgeW91IHRvIGFkZCB0aGUgcHJvdmlkZWQgQ2lyY2xlQ0kgY29uZmlndXJhdGlvbiB0byB5b3VyIHByb2plY3Qgb24gYSBuZXcgYnJhbmNoIG9yIHNldCB1cCB0aGUgY29uZmlndXJhdGlvbiBtYW51YWxseS4gR28gYWhlYWQgYW5kIHNlbGVjdCAmbHQ7c3Ryb25nJmd0O0FkZCBNYW51YWxseSZsdDsvc3Ryb25nJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA1LTI3LXN0YXJ0LWJ1aWxkaW5nLXByb21wdC5wbmcmcXVvdDsgYWx0PSZxdW90O1N0YXJ0IGJ1aWxkaW5nIHByb21wdCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0ZpbmFsbHksIGNsaWNrICZsdDtzdHJvbmcmZ3Q7U3RhcnQgQnVpbGRpbmcmbHQ7L3N0cm9uZyZndDsgc2luY2Ugd2UgaGF2ZSBpbmNsdWRlZCB0aGUgY29uZmlndXJhdGlvbiBmaWxlIGluIG91ciBwcm9qZWN0IGJlZm9yZSBwdXNoaW5nIHRvIEdpdEh1Yi4gVGhpcyB3aWxsIHJ1biBhICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9jaXJjbGVjaS5jb20vY29udGludW91cy1pbnRlZ3JhdGlvbi8mcXVvdDsmZ3Q7Y29udGludW91cyBpbnRlZ3JhdGlvbiZsdDsvYSZndDsgKENJKSBwaXBlbGluZSBiYXNlZCBvbiB0aGUgY29uZmlnIGZpbGUgYW5kIHNob3cgeW91IHRoZSBwaXBlbGluZSBzdGF0dXMuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SGVyZSBpdCBpcyBydW5uaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDUtMjctYnVpbGQtcnVubmluZy5wbmcmcXVvdDsgYWx0PSZxdW90O0J1aWxkIHJ1bm5pbmcmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtIZXJlIGl0IGlzIGFmdGVyIGEgc3VjY2Vzc2Z1bCBydW4uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNS0yNy1idWlsZC1zdWNjZXNzZnVsLnBuZyZxdW90OyBhbHQ9JnF1b3Q7QnVpbGQgc3VjY2Vzc2Z1bCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDUtMjctYnVpbGQtcmVzdWx0cy5wbmcmcXVvdDsgYWx0PSZxdW90O0J1aWxkIHJlc3VsdHMmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGVyZSB5b3UgaGF2ZSBpdC4gQWxsIHRoZSB0ZXN0cyBjcmVhdGVkIGFyZSBydW5uaW5nIHByb3Blcmx5LiZsdDsvcCZndDsKCiZsdDtoMiZndDtDb25jbHVzaW9uJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1N5bWZvbnkgaXMgY29uc2lkZXJlZCBvbmUgb2YgdGhlIG9sZGVzdCwgbW9zdCByb2J1c3QgUEhQIGZyYW1ld29ya3Mga25vd24gZm9yIGl0cyBlbGVnYW50IHN0cnVjdHVyZXMgYW5kIHJldXNhYmxlIGNvbXBvbmVudHMuIEhlcmUgaW4gdGhpcyB0dXRvcmlhbCwgd2UgY3JlYXRlZCBhIG5ldyBTeW1mb255IGFwcGxpY2F0aW9uIGFuZCBsZWFybmVkIGhvdyB0byB1dGlsaXplIFBIUFVuaXQgdG8gd3JpdGUgdW5pdCBhbmQgZnVuY3Rpb25hbCB0ZXN0cyBmb3Igc29tZSBvZiBvdXIgZGVmaW5lZCBtZXRob2RzIGFuZCBmb3IgdGhlIGNvbnRyb2xsZXIuIFdlIHRoZW4gcHJvY2VlZGVkIHRvIHNldHVwIGFuIGF1dG9tYXRlZCBDSSBwaXBlbGluZSB1c2luZyBDaXJjbGVDSS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUga25vd2xlZGdlIGdhaW5lZCBmcm9tIHRoaXMgcG9zdCB3aWxsIG5vdCBtYWtlIHlvdSBhbiBleHBlcnQgYXQgdGVzdGluZyB3aXRob3V0IGEgcGVyc29uYWwgZHJpdmVuIGVmZm9ydCBmb3IgbW9yZSBrbm93bGVkZ2UgZnJvbSB5b3VyIGVuZCwgYXMgd2UgYmFyZWx5IHNjcmF0Y2hlZCB0aGUgc3VyZmFjZSBoZXJlLiBIb3dldmVyLCB3aGF0IHlvdSBoYXZlIGxlYXJuZWQgaW4gdGhpcyBwb3N0IHdpbGwgZ2l2ZSB5b3UgdGhlIGZ1bmRhbWVudGFsIGtub3dsZWRnZSBvZiBob3cgdGVzdGluZyBpcyBzdHJ1Y3R1cmVkIGluIGEgdHlwaWNhbCBTeW1mb255IGFwcGxpY2F0aW9uIGFuZCBob3cgdG8gYXV0b21hdGUgaXQuIEZlZWwgZnJlZSB0byBleHBsb3JlIHRoZSBzb3VyY2UgY29kZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9DSVJDTEVDSS1HV1AvbmV3LXN5bWZvbnktYXBwJnF1b3Q7Jmd0O2hlcmUgb24gR2l0SHViJmx0Oy9hJmd0OyBhbmQgY2hlY2sgdGhlIG9mZmljaWFsIGRvY3VtZW50YXRpb24gb2YgQ2lyY2xlQ0kgdG8gbGVhcm4gbW9yZS4mbHQ7L3AmZ3Q7CgombHQ7aHIgLyZndDsKCiZsdDtwJmd0OyZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly90d2l0dGVyLmNvbS95ZW1pd2ViYnkmcXVvdDsmZ3Q7T2x1eWVtaSZsdDsvYSZndDsgaXMgYSB0ZWNoIGVudGh1c2lhc3QsIHByb2dyYW1taW5nIGZyZWFrLCBhbmQgYSB3ZWIgZGV2ZWxvcG1lbnQganVua2llIHdobyBsb3ZlcyB0byBlbWJyYWNlIG5ldyB0ZWNobm9sb2d5LiZsdDsvcCZndDsKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgICAgIAogICAgICA8aXRlbT4KICAgICAgICA8dGl0bGU+Q29udGludW91cyBkZXBsb3ltZW50IGZvciBwcm9ncmVzc2l2ZSB3ZWIgYXBwbGljYXRpb25zPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2NkLWZvci1wd2EvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPk1vbiwgMDggSnVuIDIwMjAgMTQ6MDA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY2QtZm9yLXB3YS88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5GaWtheW8gQWRlcG9qdTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vd2ViLmRldi9wcm9ncmVzc2l2ZS13ZWItYXBwcy8mcXVvdDsmZ3Q7UHJvZ3Jlc3NpdmUgd2ViIGFwcGxpY2F0aW9ucyAoUFdBcykmbHQ7L2EmZ3Q7IGNvbnRpbnVlIHRvIGdhaW4gd2lkZXNwcmVhZCBhdHRlbnRpb24sIGFjY2VwdGFuY2UsIGFuZCBjb21wYXRpYmlsaXR5IHdpdGggd2ViIGJyb3dzZXJzIGR1ZSB0byB0aGVpciBuYXRpdmUtbGlrZSBhdHRyaWJ1dGVzLiBPbmUgb2YgdGhlIG1hbmRhdG9yeSBzZWN1cml0eSBjb25zaWRlcmF0aW9ucyB0byBkZXBsb3lpbmcgdGhlc2UgYXBwbGljYXRpb25zIGlzIHRoYXQgdGhleSBtdXN0IGJlIGhvc3RlZCBzZWN1cmVseS4gRHVlIHRvIHRoaXMsIFBXQSBmZWF0dXJlcyB3aWxsIG5vdCB3b3JrIG9uIGEgbm9uLXNlY3VyZSBVUkwsIGkuZS4gYSBVUkwgdGhhdCBkb2VzIG5vdCB1c2UgdGhlIHNlY3VyZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtodHRwczovLyZsdDsvY29kZSZndDsgcHJvdG9jb2wuIEluIHRoaXMgcG9zdCwgd2Ugd2lsbCBjcmVhdGUgYW4gYXV0b21hdGVkIGRlcGxveW1lbnQgcGlwZWxpbmUgdGhhdCBkZXBsb3lzIG91ciBQV0EgdG8gYSBzZWN1cmUgVVJMIG9uICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9maXJlYmFzZS5nb29nbGUuY29tLyZxdW90OyZndDtGaXJlYmFzZSZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1ByZXJlcXVpc2l0ZXMmbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VG8gZm9sbG93IHRoaXMgcG9zdCwgYSBmZXcgdGhpbmdzIGFyZSByZXF1aXJlZDombHQ7L3AmZ3Q7CgombHQ7b2wmZ3Q7CiAgJmx0O2xpJmd0O0Jhc2ljIGtub3dsZWRnZSBvZiBKYXZhc2NyaXB0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL25vZGVqcy5vcmcmcXVvdDsmZ3Q7Tm9kZS5qcyZsdDsvYSZndDsgaW5zdGFsbGVkIG9uIHlvdXIgc3lzdGVtJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QW4gJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9odHRwLXNlcnZlciZxdW90OyZndDtIVFRQIFNlcnZlciBNb2R1bGUmbHQ7L2EmZ3Q7IGluc3RhbGxlZCBnbG9iYWxseSBvbiB5b3VyIHN5c3RlbSAoJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bnBtIGluc3RhbGwgLWcgaHR0cC1zZXJ2ZXImbHQ7L2NvZGUmZ3Q7KSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2ZpcmViYXNlLmdvb2dsZS5jb20vJnF1b3Q7Jmd0O0ZpcmViYXNlJmx0Oy9hJmd0OyBhY2NvdW50Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7QSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tLyZxdW90OyZndDtDaXJjbGVDSSZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0EgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2dpdGh1Yi5jb20vJnF1b3Q7Jmd0O0dpdEh1YiZsdDsvYSZndDsgYWNjb3VudCZsdDsvbGkmZ3Q7CiZsdDsvb2wmZ3Q7CgombHQ7cCZndDtXaXRoIGFsbCB0aGVzZSBpbnN0YWxsZWQgYW5kIHNldCB1cCwgbGV04oCZcyBiZWdpbiB0aGUgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1NldHRpbmcgdXAgdGhlIGRlbW8gYXBwbGljYXRpb24mbHQ7L2gyJmd0OwoKJmx0O3AmZ3Q7VGhlIGZpcnN0IHRhc2sgaXMgdG8gY3JlYXRlIG91ciBkZW1vIGFwcGxpY2F0aW9uIHRoYXQgd2Ugd2lsbCBiZSBkZXBsb3lpbmcgdG8gRmlyZWJhc2UuIFJ1biB0aGUgZm9sbG93aW5nIGNvbW1hbmRzIHRvIGNyZWF0ZSBhIGRpcmVjdG9yeSBmb3IgdGhlIHByb2plY3QgYW5kIGdvIGludG8gdGhlIHJvb3Qgb2YgdGhlIGRpcmVjdG9yeTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O21rZGlyIG15LXB3YS1maXJlYmFzZQpjZCBteS1wd2EtZmlyZWJhc2UKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7TmV4dCwgbGV04oCZcyBjcmVhdGUgb3VyIGFwcGxpY2F0aW9uIGhvbWUgcGFnZS4gQ3JlYXRlIGEgZmlsZSBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtpbmRleC5odG1sJmx0Oy9jb2RlJmd0OyBhdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBhbmQgcGFzdGUgdGhlIGZvbGxvd2luZyBjb2RlIGludG8gaXQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7Y3AmcXVvdDsmZ3Q7JmFtcDtsdDshRE9DVFlQRSBodG1sJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7aHRtbCZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7bGFuZz0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDtlbiZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2d0OyZsdDsvc3BhbiZndDsKICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2hlYWQmYW1wO2d0OyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7bWV0YSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Y2hhcnNldD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDtVVEYtOCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7LyZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDttZXRhJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtuYW1lPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O3ZpZXdwb3J0JnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtjb250ZW50PSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O3dpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAmcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0Oy8mYW1wO2d0OyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7bGluayZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7cmVsPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O21hbmlmZXN0JnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtocmVmPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O21hbmlmZXN0Lmpzb24mcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0Oy8mYW1wO2d0OyZsdDsvc3BhbiZndDsKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7bWV0YSZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7bmFtZT0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDt0aGVtZS1jb2xvciZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Y29udGVudD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDsjZGI0OTM4JnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsvJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2xpbmsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3JlbD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDtzdHlsZXNoZWV0JnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDt0eXBlPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O3RleHQvY3NzJnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtocmVmPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O3N0eWxlcy5jc3MmcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O21lZGlhPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2FsbCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7LyZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwoKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7dGl0bGUmYW1wO2d0OyZsdDsvc3BhbiZndDtEb2dWaWxsZSZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7L3RpdGxlJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDsvaGVhZCZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7Ym9keSZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDtoMiZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICAgICBXZWxjb21lIHRvIHRoZSBob21lIG9mIERvZ3MKICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7L2gyJmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CgogICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDtkaXYmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2NsYXNzPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2RvZy1saXN0JnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2RpdiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Y2xhc3M9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7ZG9nLXBpYyZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2d0OyZhbXA7bHQ7aW1nJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDt3aWR0aD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDszMDBweCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7c3JjPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2ltYWdlcy9kb2cxLmpwZyZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7LyZhbXA7Z3Q7JmFtcDtsdDsvZGl2JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgICAgICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7ZGl2Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtjbGFzcz0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDtkb2ctcGljJnF1b3Q7Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7Z3Q7JmFtcDtsdDtpbWcmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3dpZHRoPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90OzMwMHB4JnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDtzcmM9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7aW1hZ2VzL2RvZzIuanBnJnF1b3Q7Jmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsvJmFtcDtndDsmYW1wO2x0Oy9kaXYmYW1wO2d0OyZsdDsvc3BhbiZndDsKICAgICAgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDtkaXYmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O2NsYXNzPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2RvZy1waWMmcXVvdDsmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtndDsmYW1wO2x0O2ltZyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7d2lkdGg9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7MzAwcHgmcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O25hJnF1b3Q7Jmd0O3NyYz0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDtpbWFnZXMvZG9nMy5qcGcmcXVvdDsmbHQ7L3NwYW4mZ3Q7ICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0Oy8mYW1wO2d0OyZhbXA7bHQ7L2RpdiZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O2RpdiZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7Y2xhc3M9Jmx0Oy9zcGFuJmd0OyZsdDtzcGFuIGNsYXNzPSZxdW90O3MmcXVvdDsmZ3Q7JnF1b3Q7ZG9nLXBpYyZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2d0OyZhbXA7bHQ7aW1nJmx0Oy9zcGFuJmd0OyAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtuYSZxdW90OyZndDt3aWR0aD0mbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7cyZxdW90OyZndDsmcXVvdDszMDBweCZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7c3JjPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2ltYWdlcy9kb2c0LmpwZyZxdW90OyZsdDsvc3BhbiZndDsgJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7LyZhbXA7Z3Q7JmFtcDtsdDsvZGl2JmFtcDtndDsmbHQ7L3NwYW4mZ3Q7CiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0Oy9kaXYmYW1wO2d0OyZsdDsvc3BhbiZndDsKCiAgICAmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2x0O3NjcmlwdCAmbHQ7L3NwYW4mZ3Q7Jmx0O3NwYW4gY2xhc3M9JnF1b3Q7bmEmcXVvdDsmZ3Q7c3JjPSZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtzJnF1b3Q7Jmd0OyZxdW90O2FwcC5qcyZxdW90OyZsdDsvc3BhbiZndDsmbHQ7c3BhbiBjbGFzcz0mcXVvdDtudCZxdW90OyZndDsmYW1wO2d0OyZhbXA7bHQ7L3NjcmlwdCZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwogICZsdDtzcGFuIGNsYXNzPSZxdW90O250JnF1b3Q7Jmd0OyZhbXA7bHQ7L2JvZHkmYW1wO2d0OyZsdDsvc3BhbiZndDsKJmx0O3NwYW4gY2xhc3M9JnF1b3Q7bnQmcXVvdDsmZ3Q7JmFtcDtsdDsvaHRtbCZhbXA7Z3Q7Jmx0Oy9zcGFuJmd0OwoKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGhvbWUgcGFnZSBmaWxlIGFib3ZlLCB3ZSBsaW5rIHRvIHRocmVlIGZpbGVzOiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDttYW5pZmVzdC5qc29uJmx0Oy9jb2RlJmd0OyB3aGljaCB3ZSB3aWxsIHVzZSB0byBzZXQgdXAgdGhlICZsdDtzdHJvbmcmZ3Q7QWRkIHRvIEhvbWUgU2NyZWVuJmx0Oy9zdHJvbmcmZ3Q7IFBXQSBmZWF0dXJlLCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtzdHlsZXMuY3NzJmx0Oy9jb2RlJmd0OyB0byBhcHBseSBzb21lIGJhc2ljIHN0eWxpbmcgdG8gb3VyIHBhZ2UsIGFuZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDthcHAuanMmbHQ7L2NvZGUmZ3Q7IHdoaWNoIHdpbGwgbG9hZCBpbiB0aGUgc2VydmljZSB3b3JrZXIgdGhhdCB3ZSBoYXZlbuKAmXQgY3JlYXRlZCB5ZXQsIGJ1dCB3aWxsIHNob3J0bHkuIEluIHRoZSBib2R5IG9mIG91ciBwYWdlLCB3ZSBoYXZlIGEgdGl0bGUgdGhhdCByZWFkcyAmbHQ7c3Ryb25nJmd0O1dlbGNvbWUgdG8gdGhlIGhvbWUgb2YgRG9ncyZsdDsvc3Ryb25nJmd0OyBhbmQgYmVsb3cgaXQsIHdlIGRpc3BsYXkgYSBsaXN0IG9mIGRvZyBwaWN0dXJlcy4gQXMgeW91IGNhbiBzZWUsIHRoaXMgaXMgYSBkb2cgc2l0ZSAoYXBvbG9naWVzIHRvIHRoZSBjYXQgbG92ZXJzKS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgZG9nIGltYWdlcyBhcmUgY29udGFpbmVkIGluIGFuICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ltYWdlcyZsdDsvY29kZSZndDsgZm9sZGVyIGF0IHRoZSByb290IG9mIHRoZSBwcm9qZWN0LiBJIGhhdmUgcmVmZXJlbmNlZCB0aGUgZG9nIHBpY3R1cmVzIGluICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2luZGV4Lmh0bWwmbHQ7L2NvZGUmZ3Q7IGFjY29yZGluZyB0byB0aGUgZmlsZW5hbWVzIHVzZWQgaW4gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aW1hZ2VzJmx0Oy9jb2RlJmd0Oy4gR28gYWhlYWQgYW5kIGNyZWF0ZSB0aGlzIGZvbGRlciwgeW91IGNhbiBkb3dubG9hZCBkb2cgcGljdHVyZXMgZm9yIGZyZWUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3BpeGFiYXkuY29tL2ltYWdlcy9zZWFyY2gvZG9nLyZxdW90OyZndDtoZXJlJmx0Oy9hJmd0OyBhbmQgcmVuYW1lIHRoZW0gYXBwcm9wcmlhdGVseS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtMZXTigJlzIGFkZCBzdHlsZXMgYnkgY3JlYXRpbmcgdGhlIGZpbGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c3R5bGVzLmNzcyZsdDsvY29kZSZndDsgYXQgdGhlIHJvb3Qgb2Ygb3VyIHByb2plY3QgYW5kIHBhc3RpbmcgdGhlIGZvbGxvd2luZyBjb2RlIGluIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7Ym9keSB7CiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlOwp9CgpoMiB7CiAgY29sb3I6IHdoaXRlOwp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1RoaXMgZmlsZSBnaXZlcyBvdXIgcGFnZSBiYWNrZ3JvdW5kIGNvbG9yIGFuZCBtYWtlcyB0aGUgdGl0bGUgdGV4dCB3aGl0ZS4gTGV04oCZcyB0YWtlIG91ciBhcHAgZm9yIGEgc3BpbiBieSBydW5uaW5nIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBhdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCB0byBpbnZva2UgdGhlIGdsb2JhbCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtodHRwLXNlcnZlciZsdDsvY29kZSZndDsgbW9kdWxlIHRvIHNwaW4gdXAgYSBsb2NhbCBzZXJ2ZXIgdG8gc2VydmUgb3VyIGFwcDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2h0dHAtc2VydmVyCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O1lvdSB3aWxsIHNlZSBhIHNjcmVlbiBzaW1pbGFyIHRvIHRoZSBvbmUgYmVsb3cgd2hlbiB5b3UgbG9hZCB0aGUgVVJMIGluIHlvdXIgYnJvd3NlciAoeW91ciBkb2dzIHdpbGwgbGlrZWx5IGJlIGRpZmZlcmVudCBmcm9tIG1pbmUpOiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtYXBwLWZpcnN0LXZpZXcucG5nJnF1b3Q7IGFsdD0mcXVvdDtBcHAgZmlyc3QgdmlldyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtoMiZndDtBZGRpbmcgYSBzZXJ2aWNlIHdvcmtlciZsdDsvaDImZ3Q7CgombHQ7cCZndDtOb3csIGxldOKAmXMgYWRkIHRoZSBqdWljZSBvZiBQV0FzLCB0aGUgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS93ZWIvZnVuZGFtZW50YWxzL3ByaW1lcnMvc2VydmljZS13b3JrZXJzJnF1b3Q7Jmd0O3NlcnZpY2Ugd29ya2VyJmx0Oy9hJmd0Oy4gQ3JlYXRlIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7c2VydmljZXdvcmtlci5qcyZsdDsvY29kZSZndDsgZmlsZSBhdCB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QgYW5kIHBhc3RlIHRoZSBmb2xsb3dpbmcgY29kZSBpbiBpdDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3ZhciBjYWNoZU5hbWUgPSAmcXVvdDtzdy12MSZxdW90OzsKdmFyIGZpbGVzVG9DYWNoZSA9IFsKICAmcXVvdDsuLyZxdW90OywKICAmcXVvdDsuL2luZGV4Lmh0bWwmcXVvdDssCiAgJnF1b3Q7Li9zdHlsZXMuY3NzJnF1b3Q7LAogICZxdW90Oy4vYXBwLmpzJnF1b3Q7LAogICZxdW90Oy4vaW1hZ2VzL2RvZzEuanBnJnF1b3Q7LAogICZxdW90Oy4vaW1hZ2VzL2RvZzIuanBnJnF1b3Q7LAogICZxdW90Oy4vaW1hZ2VzL2RvZzMuanBnJnF1b3Q7LAogICZxdW90Oy4vaW1hZ2VzL2RvZzQuanBnJnF1b3Q7Cl07CgpzZWxmLmFkZEV2ZW50TGlzdGVuZXIoJnF1b3Q7aW5zdGFsbCZxdW90OywgZnVuY3Rpb24gKGUpIHsKICBjb25zb2xlLmxvZygmcXVvdDsmYW1wO2x0O1NlcnZpY2VXb3JrZXImYW1wO2d0OyAtLS0tIEluc3RhbGwgdjEmcXVvdDspOwogIGUud2FpdFVudGlsKAogICAgY2FjaGVzLm9wZW4oY2FjaGVOYW1lKS50aGVuKGZ1bmN0aW9uIChjYWNoZSkgewogICAgICBjb25zb2xlLmxvZygmcXVvdDsmYW1wO2x0O1NlcnZpY2VXb3JrZXImYW1wO2d0OyAtLS0gQ2FjaGluZyBhcHAgc2hlbGwmcXVvdDspOwogICAgICByZXR1cm4gY2FjaGUuYWRkQWxsKGZpbGVzVG9DYWNoZSk7CiAgICB9KQogICk7Cn0pOwoKc2VsZi5hZGRFdmVudExpc3RlbmVyKCZxdW90O2FjdGl2YXRlJnF1b3Q7LCAoZXZlbnQpID0mYW1wO2d0OyB7CiAgZXZlbnQud2FpdFVudGlsKHNlbGYuY2xpZW50cy5jbGFpbSgpKTsKfSk7CgpzZWxmLmFkZEV2ZW50TGlzdGVuZXIoJnF1b3Q7ZmV0Y2gmcXVvdDssIGZ1bmN0aW9uIChldmVudCkgewogIGV2ZW50LnJlc3BvbmRXaXRoKAogICAgY2FjaGVzLm1hdGNoKGV2ZW50LnJlcXVlc3QpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGlmIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZTsKICAgICAgfQogICAgICByZXR1cm4gZmV0Y2goZXZlbnQucmVxdWVzdCk7CiAgICB9KQogICk7Cn0pOwombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJbiBvdXIgc2VydmljZSB3b3JrZXIgZmlsZSBhYm92ZSwgd2UgY2FjaGUgYWxsIG91ciBzdGF0aWMgZmlsZXMgaW5jbHVkaW5nIG91ciBwcm9qZWN0IHJvb3QgYW5kIG91ciBpbWFnZXMuIFdlIHRoZW4gbGlzdGVuIGZvciB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aW5zdGFsbCZsdDsvY29kZSZndDsgZXZlbnQgdG8gaW5zdGFsbCBvdXIgc2VydmljZSB3b3JrZXIgYW5kIGNyZWF0ZSBhIGNhY2hlIGZvciB0aGVzZSBmaWxlcyB1c2luZyB0aGUgc3BlY2lmaWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NhY2hlTmFtZSZsdDsvY29kZSZndDsgYXMgdGhlIGlkZW50aWZpZXIuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgd2UgbGlzdGVuIHRvIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDthY3RpdmF0ZSZsdDsvY29kZSZndDsgZXZlbnQgdG8gZW5zdXJlIHRoYXQgYW55IG5ldyBzZXJ2aWNlIHdvcmtlciB0aGF0IGhhcyBiZWVuIGluc3RhbGxlZCBpcyB0aGUgb25lIHNlcnZpbmcgb3VyIGNhY2hlIGFuZCBub3QgYW4gb2xkIHZlcnNpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7RmluYWxseSwgd2UgbGlzdGVuIHRvIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmZXRjaCZsdDsvY29kZSZndDsgZXZlbnQgdG8gaW50ZXJjZXB0IGFueSByZXF1ZXN0cyBhbmQgY2hlY2sgd2hldGhlciB3ZSBhbHJlYWR5IGhhdmUgdGhlIHJlcXVlc3RlZCByZXNvdXJjZSBpbiBvdXIgY2FjaGUuIElmIHNvLCB3ZSBzZXJ2ZSB0aGUgY2FjaGVkIHZlcnNpb24sIGFuZCBpZiBub3Qgd2UgbWFrZSBhIG5ldyByZXF1ZXN0IHRvIGZldGNoIHRoZSByZXNvdXJjZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtOb3csIGxldOKAmXMgbG9hZCBvdXIgc2VydmljZSB3b3JrZXIgZmlsZSBpbnRvIG91ciBhcHBsaWNhdGlvbi4gQ3JlYXRlIGFuICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2FwcC5qcyZsdDsvY29kZSZndDsgZmlsZSBhdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBhbmQgcGFzdGUgdGhlIGZvbGxvd2luZyBjb2RlIGluIGl0OiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7CmlmICgmcXVvdDtzZXJ2aWNlV29ya2VyJnF1b3Q7IGluIG5hdmlnYXRvcikgewogIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCZxdW90O2xvYWQmcXVvdDssIGZ1bmN0aW9uICgpIHsKICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCZxdW90Oy4vc2VydmljZXdvcmtlci5qcyZxdW90OykudGhlbigKICAgICAgZnVuY3Rpb24gKHJlZ2lzdHJhdGlvbikgewogICAgICAgIGNvbnNvbGUubG9nKCZxdW90O0h1cnJheSEgU2VydmljZSB3b3JrZXJzIHdpdGggc2NvcGU6ICZxdW90OywgcmVnaXN0cmF0aW9uLnNjb3BlKTsKICAgICAgfSwKICAgICAgZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKCZxdW90O09vcHMhIFNlcnZpY2VXb3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDogJnF1b3Q7LCBlcnIpOwogICAgICB9CiAgICApOwogIH0pOwp9CiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O0xldOKAmXMgdGFrZSBvdXIgc2VydmljZSB3b3JrZXIgZm9yIGEgc3Bpbi4gTWFrZSBzdXJlIHRoYXQgeW91ciBhcHAgaXMgc3RpbGwgcnVubmluZywgdGhlbiBkbyBhIGhhcmQgcmVsb2FkIG9uIHRoZSBicm93c2VyIHRhYiB3aGVyZSB0aGUgYXBwbGljYXRpb24gaXMgY3VycmVudGx5IGxvYWRlZCAoJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Q3RybCArIFNoaWZ0ICsgUiZsdDsvY29kZSZndDspLiBOb3cgY2hlY2sgdGhlIGJyb3dzZXIgY29uc29sZSB0byBzZWUgdGhlIGNvbnNvbGUgbG9nIG1lc3NhZ2VzIHdlIHdyb3RlIHRvIGNvbmZpcm0gdGhlIGluc3RhbGxhdGlvbiBvZiB0aGUgc2VydmljZSB3b3JrZXIuIFlvdSB3aWxsIHNlZSB0aGUgZm9sbG93aW5nIG1lc3NhZ2VzIGluIHlvdXIgY29uc29sZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA4LXN3LWluc3RhbGxlZC5wbmcmcXVvdDsgYWx0PSZxdW90O1NlcnZpY2UgV29ya2VyIEluc3RhbGxhdGlvbiZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RvIGNvbmZpcm0gdGhhdCB3ZSBub3cgaGF2ZSBvZmZsaW5lIGNhcGFiaWxpdGllcyB3aXRoIG91ciBzZXJ2aWNlIHdvcmtlciBpbnN0YWxsZWQsIHNodXQgZG93biB0aGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7aHR0cC1zZXJ2ZXImbHQ7L2NvZGUmZ3Q7IHNlcnZpY2Ugd2l0aCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDdHJsICsgQyZsdDsvY29kZSZndDssIHRoZW4gcmVmcmVzaCB0aGUgYXBwbGljYXRpb24gb24gdGhlIGJyb3dzZXIuIFlvdSB3b3VsZCB1c3VhbGx5IHNlZSB0aGUgb2ZmbGluZSBwYWdlIGF0IHRoaXMgcG9pbnQgYmVjYXVzZSB0aGUgYXBwbGljYXRpb24gaXMgbm8gbG9uZ2VyIHJ1bm5pbmcsIGJ1dCB3aXRoIHRoZSBtYWdpYyB0aGF0IGlzIGEgc2VydmljZSB3b3JrZXIsIHlvdSBjYW4gc3RpbGwgc2VlIHlvdXIgYXBwbGljYXRpb24gaG9tZSBwYWdlLiBBbHNvIG5vdGljZSB0aGF0IGFsbCBkb2cgcGljdHVyZXMgYXJlIGxvYWRpbmcgb2ZmbGluZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtHcmVhdCEmbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7QWRkaW5nIGEgbWFuaWZlc3QgZmlsZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtMZXTigJlzIHdyYXAgdXAgb3VyIGRlbW8gYXBwbGljYXRpb24gYnkgY3JlYXRpbmcgb3VyICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O21hbmlmZXN0Lmpzb24mbHQ7L2NvZGUmZ3Q7IGZpbGUgYXQgdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QuIFlvdSBjYW4gZ2VuZXJhdGUgYSBzaW1wbGUgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7bWFuaWZlc3QuanNvbiZsdDsvY29kZSZndDsgZmlsZSB3aXRoIGljb25zICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9hcHAtbWFuaWZlc3QuZmlyZWJhc2VhcHAuY29tLyZxdW90OyZndDtoZXJlJmx0Oy9hJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtCZWxvdyBpcyB0aGUgY29kZSBpbiBteSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDttYW5pZmVzdC5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlLiAKJmx0O3N0cm9uZyZndDtOb3RlJmx0Oy9zdHJvbmcmZ3Q7OiAmbHQ7aSZndDtJIGhhdmUgcmVtb3ZlZCBzb21lIGljb25zIGluIG15IGV4YW1wbGUuJmx0Oy9pJmd0OyZsdDsvcCZndDsKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDt7CiAgJnF1b3Q7bmFtZSZxdW90OzogJnF1b3Q7bXktZG9nc2l0ZS1wd2EmcXVvdDssCiAgJnF1b3Q7c2hvcnRfbmFtZSZxdW90OzogJnF1b3Q7bXktZG9nc2l0ZS1wd2EmcXVvdDssCiAgJnF1b3Q7dGhlbWVfY29sb3ImcXVvdDs6ICZxdW90OyMwMDAwMDAmcXVvdDssCiAgJnF1b3Q7YmFja2dyb3VuZF9jb2xvciZxdW90OzogJnF1b3Q7I2ZmZmZmZiZxdW90OywKICAmcXVvdDtkaXNwbGF5JnF1b3Q7OiAmcXVvdDtzdGFuZGFsb25lJnF1b3Q7LAogICZxdW90O29yaWVudGF0aW9uJnF1b3Q7OiAmcXVvdDtwb3J0cmFpdCZxdW90OywKICAmcXVvdDtzY29wZSZxdW90OzogJnF1b3Q7L2luZGV4Lmh0bWwmcXVvdDssCiAgJnF1b3Q7c3RhcnRfdXJsJnF1b3Q7OiAmcXVvdDsvaW5kZXguaHRtbCZxdW90OywKICAmcXVvdDtpY29ucyZxdW90OzogWwogICAgewogICAgICAmcXVvdDtzcmMmcXVvdDs6ICZxdW90O2ljb25zL2ljb24tMTI4eDEyOC5wbmcmcXVvdDssCiAgICAgICZxdW90O3NpemVzJnF1b3Q7OiAmcXVvdDsxMjh4MTI4JnF1b3Q7LAogICAgICAmcXVvdDt0eXBlJnF1b3Q7OiAmcXVvdDtpbWFnZS9wbmcmcXVvdDsKICAgIH0sCiAgICB7CiAgICAgICZxdW90O3NyYyZxdW90OzogJnF1b3Q7aWNvbnMvaWNvbi0xNDR4MTQ0LnBuZyZxdW90OywKICAgICAgJnF1b3Q7c2l6ZXMmcXVvdDs6ICZxdW90OzE0NHgxNDQmcXVvdDssCiAgICAgICZxdW90O3R5cGUmcXVvdDs6ICZxdW90O2ltYWdlL3BuZyZxdW90OwogICAgfSwKICAgIHsKICAgICAgJnF1b3Q7c3JjJnF1b3Q7OiAmcXVvdDtpY29ucy9pY29uLTE1MngxNTIucG5nJnF1b3Q7LAogICAgICAmcXVvdDtzaXplcyZxdW90OzogJnF1b3Q7MTUyeDE1MiZxdW90OywKICAgICAgJnF1b3Q7dHlwZSZxdW90OzogJnF1b3Q7aW1hZ2UvcG5nJnF1b3Q7CiAgICB9LAogICAgewogICAgICAmcXVvdDtzcmMmcXVvdDs6ICZxdW90O2ljb25zL2ljb24tMTkyeDE5Mi5wbmcmcXVvdDssCiAgICAgICZxdW90O3NpemVzJnF1b3Q7OiAmcXVvdDsxOTJ4MTkyJnF1b3Q7LAogICAgICAmcXVvdDt0eXBlJnF1b3Q7OiAmcXVvdDtpbWFnZS9wbmcmcXVvdDsKICAgIH0sCiAgICB7CiAgICAgICZxdW90O3NyYyZxdW90OzogJnF1b3Q7aWNvbnMvaWNvbi01MTJ4NTEyLnBuZyZxdW90OywKICAgICAgJnF1b3Q7c2l6ZXMmcXVvdDs6ICZxdW90OzUxMng1MTImcXVvdDssCiAgICAgICZxdW90O3R5cGUmcXVvdDs6ICZxdW90O2ltYWdlL3BuZyZxdW90OwogICAgfQogIF0KfQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJbiB0aGUgYWJvdmUgZmlsZSwgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25hbWUmbHQ7L2NvZGUmZ3Q7IG9mIHRoZSBhcHBsaWNhdGlvbiwgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Nob3J0IG5hbWUmbHQ7L2NvZGUmZ3Q7ICwgdGhlIHByZWZlcnJlZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtvcmllbnRhdGlvbiZsdDsvY29kZSZndDssIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt0aGVtZV9jb2xvciZsdDsvY29kZSZndDsgZm9yIHRoZSBhcHAgYmFyLCBhbmQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2JhY2tncm91bmRfY29sb3ImbHQ7L2NvZGUmZ3Q7IGZvciB0aGUgc3BsYXNoIHNjcmVlbiBhcmUgZGVmaW5lZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7c3Ryb25nJmd0O05vdGU6Jmx0Oy9zdHJvbmcmZ3Q7ICZsdDtpJmd0O0l0IGlzIGEgYmVzdCBwcmFjdGljZSB0byBhZGQgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O3Nob3J0X25hbWUmbHQ7L2NvZGUmZ3Q7LCBhbiBvcHRpb25hbCBmaWVsZCB0aGF0IHNwZWNpZmllcyB0aGUgbmFtZSB0aGF0IHdpbGwgYmUgZGlzcGxheWVkIGluIHRoZSBhcHAgbGF1bmNoZXIgb3IgYSBuZXcgdGFiIHBhZ2UuIE90aGVyd2lzZSwgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O25hbWUmbHQ7L2NvZGUmZ3Q7IHdpbGwgYmUgdXNlZCwgYW5kIGl0IHdpbGwgYmUgdHJ1bmNhdGVkIGlmIGl0IGlzIG1vcmUgdGhhbiAxMiBjaGFyYWN0ZXJzIGxvbmcuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtpY29ucyZsdDsvY29kZSZndDsgYXJyYXkgaXMgYWxzbyBhZGRlZCB3aXRoIGEgY29sbGVjdGlvbiBvZiBpY29uIG9iamVjdCBkZWZpbml0aW9ucyB0aGF0IHBvaW50IHRvIHRoZSBpY29ucyB3ZSB3aWxsIGJlIHVzaW5nIGZvciBvdXIgUFdBLiBSZW1lbWJlciB0byBjcmVhdGUgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ljb25zJmx0Oy9jb2RlJmd0OyBmb2xkZXIgYW5kIGZpbGwgaXQgd2l0aCB0aGUgaWNvbnMgbmFtZWQgaW4gdGhlIG1hbmlmZXN0IGZpbGUuJmx0Oy9wJmd0OwoKJmx0O2gyJmd0O1NldHRpbmcgdXAgZGVwbG95bWVudCB0byBGaXJlYmFzZSZsdDsvaDImZ3Q7CgombHQ7cCZndDtOb3cgdGhhdCBvdXIgUFdBIGlzIGNvbXBsZXRlLCBsZXTigJlzIGJlZ2luIHByZXBhcmluZyBpdCBmb3IgZGVwbG95bWVudCB0byBGaXJlYmFzZS4gWW91IG5lZWQgdG8gaGF2ZSBGaXJlYmFzZSB0b29scyBpbnN0YWxsZWQuIFRvIGNoZWNrIHRoYXQgeW91IGhhdmUgaXQgaW5zdGFsbGVkLCBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ZmlyZWJhc2UKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyB3aWxsIHJldHVybiBhIGxpc3Qgb2YgRmlyZWJhc2UgY29tbWFuZHMgdG8geW91ciBDTEkuIElmIGl0IGRvZXNu4oCZdCwgeW91IG5lZWQgdG8gcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCB0byBnZXQgaXQgaW5zdGFsbGVkOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7bnBtIGluc3RhbGwgLWcgZmlyZWJhc2UtdG9vbHMKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7WW91IGFsc28gbmVlZCB0byBydW4gdGhlIGFib3ZlIGNvbW1hbmQgaWYgeW91ciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJlYmFzZS10b29scyZsdDsvY29kZSZndDsgaXMgbGVzcyB0aGFuIHZlcnNpb24gOC4gVG8gY2hlY2sgeW91ciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJlYmFzZS10b29scyZsdDsvY29kZSZndDsgdmVyc2lvbiwgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZDombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O2ZpcmViYXNlIC0tdmVyc2lvbgombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUbyBzZXQgdXAgRmlyZWJhc2UgaG9zdGluZyBmb3Igb3VyIHByb2plY3QsIHdlIG5lZWQgdG8gY3JlYXRlIGEgRmlyZWJhc2UgcHJvamVjdC4gSGVhZCBvdmVyIHRvIHlvdXIgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2NvbnNvbGUuZmlyZWJhc2UuZ29vZ2xlLmNvbS8mcXVvdDsmZ3Q7RmlyZWJhc2UgY29uc29sZSZsdDsvYSZndDsgYW5kIGNyZWF0ZSBhIG5ldyBGaXJlYmFzZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0FkZCBQcm9qZWN0Jmx0Oy9jb2RlJmd0OyBhbmQgZW50ZXIgdGhlIG5hbWUgb2YgeW91ciBwcm9qZWN0IGluIHRoZSBmaXJzdCBwYWdlIHRoYXQgcG9wcyB1cC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA4LWZpcmViYXNlLXByb2plY3QtMS5wbmcmcXVvdDsgYWx0PSZxdW90O0NyZWF0ZSBGaXJlYmFzZSBQcm9qZWN0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Q2xpY2sgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Q29udGludWUmbHQ7L2NvZGUmZ3Q7IGFuZCBvbiB0aGUgbmV4dCBwYWdlIGFib3V0IGFkZGluZyAmbHQ7c3Ryb25nJmd0O0dvb2dsZSBBbmFseXRpY3MmbHQ7L3N0cm9uZyZndDssIHR1cm4gb2ZmIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbmFibGUgR29vZ2xlIEFuYWx5dGljcyBmb3IgdGhpcyBwcm9qZWN0Jmx0Oy9jb2RlJmd0OyB0b2dnbGUgYnV0dG9uLiBTaW5jZSB0aGlzIGlzIGEgZGVtbyBwcm9qZWN0LCB3ZSB3b27igJl0IGJlIG5lZWRpbmcgYW5hbHl0aWNzLiZsdDsvcCZndDsKCiZsdDtwJmd0O05vdyBjbGljayAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtDcmVhdGUgUHJvamVjdCZsdDsvY29kZSZndDsuIFdhaXQgZm9yIEZpcmViYXNlIHRvIGNvbXBsZXRlIHNldHRpbmcgdXAgeW91ciBwcm9qZWN0IHRoZW4gY2xpY2sgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Q29udGludWUmbHQ7L2NvZGUmZ3Q7IHRvIG5hdmlnYXRlIHRvIHlvdXIgcHJvamVjdCBkYXNoYm9hcmQuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoYXQgd2UgaGF2ZSBvdXIgcHJvamVjdCBzZXQgdXAsIHRoZSBuZXh0IHN0ZXAgaXMgdG8gc2V0IHVwIG91ciBQV0EgdG8gYmUgaG9zdGVkIG9uIEZpcmViYXNlIHVzaW5nIHRoZSBwcm9qZWN0IHdlIGp1c3QgY3JlYXRlZC4gU3RheSBsb2dnZWQgaW50byBGaXJlYmFzZSBvbiB5b3VyIGRlZmF1bHQgYnJvd3NlciwgdGhlbiBnbyB0byB5b3VyIENMSSB0byBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ZmlyZWJhc2UgbG9naW46Y2kKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7VGhpcyBjb21tYW5kIHdpbGwgbG9nIHlvdSBpbnRvIEZpcmViYXNlIGJ5IHJlZGlyZWN0aW5nIHRvIHlvdXIgYnJvd3NlciB3aGVyZSB5b3XigJlyZSBjdXJyZW50bHkgbG9nZ2VkIGluLiBPbmNlIHRoZSBhdXRoZW50aWNhdGlvbiBwcm9jZXNzIGlzIGNvbXBsZXRlLCB5b3VyIEZpcmViYXNlIHRva2VuIHdpbGwgYmUgcHJpbnRlZCBvbiB0aGUgc2NyZWVuIGp1c3QgYmVsb3cgdGhlIGxpbmUgdGhhdCByZWFkcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDvinJQgU3VjY2VzcyEgVXNlIHRoaXMgdG9rZW4gdG8gbG9naW4gb24gYSBDSSBzZXJ2ZXImbHQ7L2NvZGUmZ3Q7LiBTYXZlIHRoaXMgdG9rZW4gc2VjdXJlbHkgYmVjYXVzZSB5b3Ugd2lsbCBuZWVkIGl0IGxhdGVyIG9uIGluIHRoaXMgdHV0b3JpYWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7TmV4dCwgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBhdCB0aGUgcm9vdCBvZiB5b3VyIFBXQSBwcm9qZWN0IHRvIGluaXRpYWxpemUgdGhlIEZpcmViYXNlIHNldHVwOiZsdDsvcCZndDsKCiZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7Jmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O3ByZSBjbGFzcz0mcXVvdDtoaWdobGlnaHQmcXVvdDsmZ3Q7Jmx0O2NvZGUmZ3Q7ZmlyZWJhc2UgaW5pdAombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtUaGUgZmlyc3QgcHJvbXB0IHlvdSB3aWxsIGdldCBmcm9tIHRoaXMgY29tbWFuZCBpcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDs/IFdoaWNoIEZpcmViYXNlIENMSSBmZWF0dXJlcyBkbyB5b3Ugd2FudCB0byBzZXQgdXAgZm9yIHRoaXMgZm9sZGVyPyBQcmVzcyBTcGFjZSB0byBzZWxlY3QgZmVhdHVyZXMsIHRoZW4gRW50ZXIgdG8gY29uZmlybSB5b3VyIGNob2ljZXMuJmx0Oy9jb2RlJmd0Oy4gTmF2aWdhdGUgdG8gJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7SG9zdGluZyZsdDsvY29kZSZndDsgb3B0aW9uIHVzaW5nIHRoZSBhcnJvdyBrZXlzLCBoaXQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7U3BhY2ViYXImbHQ7L2NvZGUmZ3Q7IHRvIHNlbGVjdCwgYW5kIGhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbnRlciZsdDsvY29kZSZndDsgdG8gZ28gdG8gdGhlIG5leHQgcHJvbXB0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtc2VsZWN0LWZlYXR1cmVzLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U2VsZWN0IFByb2plY3QgRmVhdHVyZXMmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGUgbmV4dCBwcm9tcHRzIGlzIHRvIGFzc29jaWF0ZSB5b3VyIGxvY2FsIHByb2plY3Qgd2l0aCBhIEZpcmViYXNlIHByb2plY3Qgb24geW91ciBGaXJlYmFzZSBhY2NvdW50LiBGcm9tIGhlcmUsIHlvdSBjYW4gY2hvb3NlIHRvIHVzZSBhbiBleGlzdGluZyBwcm9qZWN0IG9yIGNyZWF0ZSBhIG5ldyBvbmUuIFNlbGVjdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtVc2UgYW4gZXhpc3RpbmcgcHJvamVjdCZsdDsvY29kZSZndDsgYW5kIGhpdCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbnRlciZsdDsvY29kZSZndDsgdG8gbW92ZSB0byB0aGUgbmV4dCBwcm9tcHQuIFRoaXMgc2VsZWN0aW9uIHdpbGwgcHJvbXB0IHRoZSBDTEkgdG9vbCB0byBsb2FkIHlvdXIgRmlyZWJhc2UgcHJvamVjdHMgZm9yIHlvdSB0byBzZWxlY3QgZnJvbSBpbiB0aGUgbmV4dCBwcm9tcHQuIEkgYW0gc2VsZWN0aW5nIHRoZSBwcm9qZWN0IHdlIGp1c3QgY3JlYXRlZCBvbiBvdXIgRmlyZWJhc2UgY29uc29sZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtIaXQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7RW50ZXImbHQ7L2NvZGUmZ3Q7IHRvIGNvbmZpcm0geW91ciBzZWxlY3Rpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvMjAyMC0wNi0wOC1zZWxlY3QtcHJvamVjdC5wbmcmcXVvdDsgYWx0PSZxdW90O1NlbGVjdCBQcm9qZWN0JnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7VGhlIG5leHQgcHJvbXB0IGFza3MgZm9yIHRoZSBwcm9qZWN0IGZvbGRlciBhbmQgc3VnZ2VzdHMgdGhlIGZvbGRlciAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwdWJsaWMmbHQ7L2NvZGUmZ3Q7LiBGb3Igb3VyIHByb2plY3QsIGV2ZXJ5dGhpbmcgaXMgdGFraW5nIHBsYWNlIGF0IHRoZSByb290LCBzbyBzaW1wbHkgdHlwZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsvJmx0Oy9jb2RlJmd0OyBhbmQgaGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0VudGVyJmx0Oy9jb2RlJmd0OyB0byBwcm9jZWVkLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBuZXh0IHByb21wdCBpcyAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDs/IENvbmZpZ3VyZSBhcyBhIHNpbmdsZS1wYWdlIGFwcCAocmV3cml0ZSBhbGwgdXJscyB0byAvaW5kZXguaHRtbCk/Jmx0Oy9jb2RlJmd0Oy4gQXMgb3VyIGVudGlyZSBhcHBsaWNhdGlvbiByZXNpZGVzIHdpdGhpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtpbmRleC5odG1sJmx0Oy9jb2RlJmd0OywgdHlwZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDt5Jmx0Oy9jb2RlJmd0OyBhbmQgaGl0ICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0VudGVyJmx0Oy9jb2RlJmd0Oy4gVGhpcyBwcm9tcHQgaXMgaW1wb3J0YW50IGZvciBkaXN0aW5ndWlzaGluZyBiZXR3ZWVuIHNpbmdsZS1wYWdlIGFwcHMgYW5kIHRyYWRpdGlvbmFsIG11bHRpLXBhZ2UgYXBwcyBzbyB0aGF0IEZpcmViYXNlIEhvc3Rpbmcga25vd3MgaG93IHRvIGhhbmRsZSB0aGVtLiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBuZXh0IHByb21wdCBkZXRlY3RzIHRoYXQgd2UgYWxyZWFkeSBoYXZlIGFuICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2luZGV4Lmh0bWwmbHQ7L2NvZGUmZ3Q7IGZpbGUgYW5kIGFza3MgaWYgaXQgc2hvdWxkIGJlIG92ZXJ3cml0dGVuLiBUeXBlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O04mbHQ7L2NvZGUmZ3Q7IGZvciB0aGlzIGFuZCBoaXQgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7RW50ZXImbHQ7L2NvZGUmZ3Q7LiBUaGlzIGNvbXBsZXRlcyB0aGUgc2V0dXAgYW5kIHlvdSB3aWxsIG5vdyBoYXZlIGEgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7LmZpcmViYXNlcmMmbHQ7L2NvZGUmZ3Q7IGZpbGUgd2hpY2ggc2V0cyB0aGUgcHJvamVjdCBpZCBmb3IgdGhpcyBhcHBsaWNhdGlvbiwgYSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJlYmFzZS5qc29uJmx0Oy9jb2RlJmd0OyBmaWxlIHdoaWNoIGNvbnRhaW5zIGRldGFpbHMgYWJvdXQgdGhlIG9wdGlvbnMgd2Ugc2VsZWN0ZWQgZHVyaW5nIHRoZSBzZXQgdXAgcHJvY2VzcyBhbmQgc29tZSBvdGhlciBkZWZhdWx0IHNldHRpbmdzLCBhbmQgYSBzdGFuZGFyZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuZ2l0aWdub3JlJmx0Oy9jb2RlJmd0OyBmaWxlIGZvciBGaXJlYmFzZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtXaXRoIHRoaXMsIHdlIGNhbiBub3cgcHJvY2VlZCB0byBjcmVhdGluZyBvdXIgZGVwbG95bWVudCBwaXBlbGluZS4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7QnVpbGRpbmcgdGhlIENEIHBpcGVsaW5lJmx0Oy9oMiZndDsKCiZsdDtwJmd0O1RvIHNldCB1cCBvdXIgYXV0b21hdGVkIGRlcGxveW1lbnQgcGlwZWxpbmUsIHdlIG5lZWQgdG8gdGFrZSB0aGUgZm9sbG93aW5nIHN0ZXBzOiZsdDsvcCZndDsKCiZsdDtvbCZndDsKICAmbHQ7bGkmZ3Q7UHVzaCBvdXIgcHJvamVjdCB0byBhIHJlbW90ZSByZXBvc2l0b3J5IChHaXRIdWIgaW4gdGhpcyBjYXNlKSBjb25uZWN0ZWQgdG8gb3VyIENpcmNsZUNJIGFjY291bnQmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBZGQgb3VyIGFwcGxpY2F0aW9uIGFzIGEgbmV3IHByb2plY3Qgb24gQ2lyY2xlQ0kmbHQ7L2xpJmd0OwogICZsdDtsaSZndDtBZGQgb3VyIEZpcmViYXNlIHRva2VuIGFzIGFuIGVudmlyb25tZW50IHZhcmlhYmxlIHRvIG91ciBDaXJjbGVDSSBwcm9qZWN0Jmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7SW5zdGFsbCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtmaXJlYmFzZS10b29scyZsdDsvY29kZSZndDsgbG9jYWxseSBpbiB0aGUgcHJvamVjdCZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O0NyZWF0ZSBvdXIgcGlwZWxpbmUgY29uZmlyZ3VyYXRpb24gZmlsZSZsdDsvbGkmZ3Q7CiAgJmx0O2xpJmd0O1B1c2ggcHJvamVjdCBjaGFuZ2VzIHRvIG91ciByZXBvc2l0b3J5IHRvIGluaXRpYXRlIGRlcGxveW1lbnQmbHQ7L2xpJmd0OwombHQ7L29sJmd0OwoKJmx0O3AmZ3Q7TGV04oCZcyBiZWdpbi4gU2NhZmZvbGQgYSBxdWljayAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7IGZpbGUgYnkgcnVubmluZyB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6Jmx0Oy9wJmd0OwoKJmx0O2RpdiBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsmbHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7cHJlIGNsYXNzPSZxdW90O2hpZ2hsaWdodCZxdW90OyZndDsmbHQ7Y29kZSZndDtucG0gaW5pdCAteQombHQ7L2NvZGUmZ3Q7Jmx0Oy9wcmUmZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9kaXYmZ3Q7CgombHQ7cCZndDtJbml0aWFsaXplIHRoZSBwcm9qZWN0IGZvbGRlciBhcyBhICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2dpdCZsdDsvY29kZSZndDsgcmVwb3NpdG9yeSBhbmQgcHVzaCB0byB5b3VyIHJlbW90ZSByZXBvc2l0b3J5LiZsdDsvcCZndDsKCiZsdDtwJmd0O1RoZSBuZXh0IHN0ZXAgaXMgdG8gc2V0IHVwIHRoZSByZXBvc2l0b3J5IGZvciBvdXIgcHJvamVjdCBhcyBhIENpcmNsZUNJIHByb2plY3QuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T24gdGhlIENpcmNsZUNJIGNvbnNvbGUsIGdvIHRvIHRoZSAmbHQ7c3Ryb25nJmd0O0FkZCBQcm9qZWN0cyZsdDsvc3Ryb25nJmd0OyBwYWdlLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtYWRkLXByb2plY3QucG5nJnF1b3Q7IGFsdD0mcXVvdDtBZGQgUHJvamVjdCZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0NsaWNrICZsdDtzdHJvbmcmZ3Q7U2V0IFVwIFByb2plY3QmbHQ7L3N0cm9uZyZndDsuIFRoaXMgd2lsbCBsb2FkIHRoZSBuZXh0IHNjcmVlbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS9zdGFydC1idWlsZGluZzEucG5nJnF1b3Q7IGFsdD0mcXVvdDtTdGFydCBCdWlsZGluZyAtIENvbmZpZyBzYW1wbGUmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtPbiB0aGUgc2V0dXAgcGFnZSwgY2xpY2sgJmx0O3N0cm9uZyZndDtTdGFydCBCdWlsZGluZyZsdDsvc3Ryb25nJmd0Oy4gQmVmb3JlIHRoZSBidWlsZCBzdGFydHMsIHlvdSBnZXQgYSBwcm9tcHQgdG8gZWl0aGVyIGRvd25sb2FkIGFuZCB1c2UgdGhlIHByb3ZpZGVkIENpcmNsZUNJIGNvbmZpZ3VyYXRpb24gZmlsZSBhbmQgaGF2ZSBpdCBvbiBhIHNlcGFyYXRlIGJyYW5jaCBvciB0byBzZXQgb25lIHVwIG1hbnVhbGx5LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtc3RhcnQtYnVpbGRpbmcyLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgQnVpbGRpbmcgLSBBZGQgbWFudWFsbHkmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtTZWxlY3QgJmx0O3N0cm9uZyZndDtBZGQgTWFudWFsbHkmbHQ7L3N0cm9uZyZndDsgdG8gcHJvY2VlZC4gVGhpcyB3aWxsIHByb21wdCBhbm90aGVyIGRpYWxvZyB0aGF0IGNoZWNrcyB0byBjb25maXJtIHRoYXQgeW91IGhhdmUgYSBjb25maWd1cmF0aW9uIGZpbGUgc2V0IHVwIHRvIGJlZ2luIGJ1aWxkaW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtc3RhcnQtYnVpbGRpbmczLnBuZyZxdW90OyBhbHQ9JnF1b3Q7U3RhcnQgQnVpbGRpbmcgLSBDb25maXJtIGNvbmZpZ3VyYXRpb24mcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayBvbiAmbHQ7c3Ryb25nJmd0O1N0YXJ0IEJ1aWxkaW5nJmx0Oy9zdHJvbmcmZ3Q7IHRvIGNvbXBsZXRlIHRoZSBzZXR1cC4gVGhpcyB3aWxsIGltbWVkaWF0ZWx5IHRyaWdnZXIgdGhlIHBpcGVsaW5lLiBUaGUgYnVpbGQgd2lsbCBmYWlsIGJlY2F1c2Ugd2UgaGF2ZW7igJl0IGFkZGVkIG91ciBwaXBlbGluZSBjb25maWd1cmF0aW9uIGZpbGUuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T3VyIG5leHQgc3RlcCBpcyB0byBhZGQgb3VyIEZpcmViYXNlIHRva2VuIGFzIGFuIGVudmlyb25tZW50IHZhcmlhYmxlIGluIHRoZSBDaXJjbGVDSSBwcm9qZWN0IHdlIGp1c3QgY3JlYXRlZC4gT24gdGhlICZsdDtzdHJvbmcmZ3Q7UGlwZWxpbmVzJmx0Oy9zdHJvbmcmZ3Q7IHBhZ2UsIHdpdGggb3VyIHByb2plY3Qgc2VsZWN0ZWQsIGNsaWNrICZsdDtzdHJvbmcmZ3Q7UHJvamVjdCBTZXR0aW5ncyZsdDsvc3Ryb25nJmd0Oy4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA4LXByb2plY3Qtc2V0dGluZ3MucG5nJnF1b3Q7IGFsdD0mcXVvdDtQcm9qZWN0IFNldHRpbmdzJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7T24gdGhlIHNldHRpbmdzIHBhZ2Ugc2lkZS1tZW51LCBjbGljayAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtFbnZpcm9ubWVudCBWYXJpYWJsZXMmbHQ7L2NvZGUmZ3Q7LiBPbiB0aGUgdmFyaWFibGVzIHNldCB1cCBwYWdlLCBjbGljayAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtBZGQgRW52aXJvbm1lbnQgVmFyaWFibGUmbHQ7L2NvZGUmZ3Q7LiBBIGRpYWxvZyBib3ggd2lsbCBhcHBlYXIuIEluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtOYW1lKiZsdDsvY29kZSZndDsgZmllbGQsIGVudGVyICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O0ZJUkVCQVNFX1RPS0VOJmx0Oy9jb2RlJmd0OywgYW5kIGluIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtWYWx1ZSombHQ7L2NvZGUmZ3Q7IGZpZWxkLCBwYXN0ZSBpbiB0aGUgRmlyZWJhc2UgdG9rZW4geW91IGdvdCBmcm9tIHlvdXIgQ0xJIGluIHRoZSBzdGVwIGFib3ZlLiBDbGljayAmbHQ7c3Ryb25nJmd0O1N1Ym1pdCZsdDsvc3Ryb25nJmd0OyB0byBjb21wbGV0ZSB0aGUgcHJvY2Vzcy4gWW91IG5vdyBoYXZlIHRoZSB0b2tlbiB2YXJpYWJsZSByZWdpc3RlcmVkLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtZmlyZWJhc2UtdG9rZW4ucG5nJnF1b3Q7IGFsdD0mcXVvdDtQcm9qZWN0IFNldHRpbmdzJnF1b3Q7IC8mZ3Q7Jmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7UmV0dXJuIHRvIHRoZSBQV0EgcHJvamVjdCBvbiB5b3VyIHN5c3RlbS4gUnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCB0byBpbnN0YWxsICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2ZpcmViYXNlLXRvb2xzJmx0Oy9jb2RlJmd0OyBhdCB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBzbyB5b3UgY2FuIGhhdmUgaXQgcmVnaXN0ZXJlZCBpbiAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtwYWNrYWdlLmpzb24mbHQ7L2NvZGUmZ3Q7IGFzIGEgZGV2ZWxvcG1lbnQgZGVwZW5kZW5jeTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O25wbSBpbnN0YWxsIC1EIGZpcmViYXNlLXRvb2xzCiZsdDsvY29kZSZndDsmbHQ7L3ByZSZndDsmbHQ7L2RpdiZndDsmbHQ7L2RpdiZndDsKCiZsdDtwJmd0O09uY2UgdGhhdCBwcm9jZXNzIGlzIGNvbXBsZXRlLCBpdHMgdGltZSB0byBjcmVhdGUgb3VyIGRlcGxveW1lbnQgY29uZmlndXJhdGlvbiBmaWxlLiBBdCB0aGUgcm9vdCBvZiB5b3VyIHByb2plY3QsIGNyZWF0ZSBhIGZvbGRlciBuYW1lZCAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDsuY2lyY2xlY2kmbHQ7L2NvZGUmZ3Q7LCBhbmQgaW4gaXQgYSBmaWxlIG5hbWVkICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7LiBJbnNpZGUgdGhlICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2NvbmZpZy55bWwmbHQ7L2NvZGUmZ3Q7IGZpbGUsIGVudGVyIHRoZSBmb2xsb3dpbmcgY29kZTombHQ7L3AmZ3Q7CgombHQ7ZGl2IGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0OyZsdDtkaXYgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtwcmUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0JnF1b3Q7Jmd0OyZsdDtjb2RlJmd0O3ZlcnNpb246IDIKam9iczoKICBidWlsZDoKICAgIGRvY2tlcjoKICAgICAgLSBpbWFnZTogY2lyY2xlY2kvbm9kZToxMC4xNi4wCiAgICB3b3JraW5nX2RpcmVjdG9yeTogfi9yZXBvCiAgICBzdGVwczoKICAgICAgLSBjaGVja291dAogICAgICAjIERvd25sb2FkIGFuZCBjYWNoZSBkZXBlbmRlbmNpZXMKICAgICAgLSByZXN0b3JlX2NhY2hlOgogICAgICAgICAga2V5czoKICAgICAgICAgICAgLSB2MS1kZXBlbmRlbmNpZXMte3sgY2hlY2tzdW0gJnF1b3Q7cGFja2FnZS5qc29uJnF1b3Q7IH19CiAgICAgICAgICAgIC0gdjEtZGVwZW5kZW5jaWVzLQogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IEluc3RhbGwgRGVwZW5kZW5jaWVzCiAgICAgICAgICBjb21tYW5kOiBucG0gaW5zdGFsbAogICAgICAtIHNhdmVfY2FjaGU6CiAgICAgICAgICBrZXk6IHYxLW5wbS1kZXBzLXt7IGNoZWNrc3VtICZxdW90O3BhY2thZ2UtbG9jay5qc29uJnF1b3Q7IH19CiAgICAgICAgICBwYXRoczoKICAgICAgICAgICAgLSAuL25vZGVfbW9kdWxlcwogICAgICAtIHJ1bjoKICAgICAgICAgIG5hbWU6IERlcGxveSB0byBGaXJlYmFzZQogICAgICAgICAgY29tbWFuZDogLi9ub2RlX21vZHVsZXMvLmJpbi9maXJlYmFzZSBkZXBsb3kgLS10b2tlbiAmcXVvdDskRklSRUJBU0VfVE9LRU4mcXVvdDsgLS1vbmx5IGhvc3RpbmcKJmx0Oy9jb2RlJmd0OyZsdDsvcHJlJmd0OyZsdDsvZGl2Jmd0OyZsdDsvZGl2Jmd0OwoKJmx0O3AmZ3Q7SW4gdGhlIGNvbmZpZ3VyYXRpb24gZmlsZSBhYm92ZSwgd2Ugc3RhcnQgYnkgY2hlY2tpbmcgb3V0IHRoZSBwcm9qZWN0IGZyb20gb3VyIHJlbW90ZSByZXBvc2l0b3J5LiBXZSB0aGVuIGluc3RhbGwgb3VyIGRlcGVuZGVuY2llcywgY2FjaGUgdGhlbSwgYW5kIHJ1biBvdXIgJmx0O2NvZGUgY2xhc3M9JnF1b3Q7aGlnaGxpZ2h0ZXItcm91Z2UmcXVvdDsmZ3Q7ZmlyZWJhc2UtdG9vbHMmbHQ7L2NvZGUmZ3Q7IGZyb20gdGhlIGxvY2FsIGluc3RhbGxhdGlvbiB0byB1c2Ugb3VyIEZpcmViYXNlIHRva2VuIHRvIGRlcGxveSBvdXIgYXBwbGljYXRpb24uJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Tm93IHRoZSBtb21lbnQgb2YgdHJ1dGguIExldOKAmXMgY29tbWl0IG91ciBjaGFuZ2VzIGFuZCBwdXNoIHRoZW0gdG8gb3VyIHJlcG9zaXRvcnkgdG8gY2F1c2Ugb3VyIGRlcGxveW1lbnQgc2NyaXB0IHRvIGJlIHRyaWdnZXJlZCBhbmQgZGVwbG95IG91ciBhcHBsaWNhdGlvbiB0byBGaXJlYmFzZSBob3N0aW5nLiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtYnVpbGQtc3VjY2Vzcy5wbmcmcXVvdDsgYWx0PSZxdW90O0J1aWxkIHN1Y2Nlc3MmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtDbGljayBpbnRvIHRoZSBidWlsZCB0byBzZWUgdGhlIGJlaGluZC10aGUtc2NlbmVzIG9mIHRoZSBwcm9qZWN0LiZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhLzIwMjAtMDYtMDgtYnVpbGQtcHJvY2Vzcy5wbmcmcXVvdDsgYWx0PSZxdW90O0J1aWxkIFByb2Nlc3MmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtGcm9tIHRoZSAmbHQ7Y29kZSBjbGFzcz0mcXVvdDtoaWdobGlnaHRlci1yb3VnZSZxdW90OyZndDtEZXBsb3kgdG8gRmlyZWJhc2UmbHQ7L2NvZGUmZ3Q7IHNlY3Rpb24uIFlvdSBjYW4gc2VlIHRoZSBVUkwgb2YgdGhlIGRlcGxveWVkIGFwcGxpY2F0aW9uLiBGb3IgdGhpcyBleGVyY2lzZSwgaXTigJlzICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2h0dHBzOi8vbXktZG9nLXNpdGUtcHdhLndlYi5hcHAmbHQ7L2NvZGUmZ3Q7LiBMb2FkIHlvdXJzIGludG8geW91ciBicm93c2VyIHRvIHRlc3QgeW91ciBhcHBsaWNhdGlvbi4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS8yMDIwLTA2LTA4LXB3YS1saXZlLnBuZyZxdW90OyBhbHQ9JnF1b3Q7TGl2ZSBBcHBsaWNhdGlvbiZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O0FzIHlvdSBjYW4gc2VlIGFib3ZlLCB0aGUgYWRkcmVzcyBiYXIgaXMgbG9hZGluZyBvdXIgRmlyZWJhc2UgVVJMLCBhbmQgd2UgY2FuIHNlZSBjb25zb2xlIG1lc3NhZ2VzIGluZGljYXRpbmcgdGhhdCBvdXIgc2VydmljZSB3b3JrZXIgaXMgaW5zdGFsbGVkLiBJZiB5b3UgdHVybiBvZmYgeW91ciBuZXR3b3JrIGFuZCByZWZyZXNoIHRoaXMgcGFnZSwgeW91IHdpbGwgc2VlIHRoYXQgdGhlIGFwcGxpY2F0aW9uLCB3aXRoIGFsbCB0aGUgZG9nIHBpY3R1cmVzIGFuZCBzdHlsaW5nLCBsb2FkcyBpbnN0ZWFkIG9mIHRoZSB1c3VhbCBvZmZsaW5lIHNjcmVlbi4mbHQ7L3AmZ3Q7CgombHQ7aDImZ3Q7Q29uY2x1c2lvbiZsdDsvaDImZ3Q7CgombHQ7cCZndDtTZXR0aW5nIHVwIFNTTCBjZXJ0aWZpY2F0ZXMgZm9yICZsdDtjb2RlIGNsYXNzPSZxdW90O2hpZ2hsaWdodGVyLXJvdWdlJnF1b3Q7Jmd0O2h0dHBzOi8vJmx0Oy9jb2RlJmd0OyBVUkxzIGlzIG5vdCBhIHRhc2sgbW9zdCBkZXZlbG9wZXJzIGVuam95LiBTb21ldGltZXMgdGhpcyBsZWFkcyB0byByZWx1Y3RhbmNlIGluIGFkb3B0aW5nIFBXQXMuIEhvd2V2ZXIgaW4gdGhpcyBwb3N0LCB3ZSBoYXZlIGRlbW9uc3RyYXRlZCBob3cgdG8gc2V0IHVwIGFuIGF1dG9tYXRlZCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2NvbnRpbnVvdXMtaW50ZWdyYXRpb24vJnF1b3Q7Jmd0O2NvbnRpbnVvdXMgaW50ZWdyZWF0aW9uJmx0Oy9hJmd0OyAvIGNvbnRpbnVvdXMgZGVwbG95bWVudCBwaXBlbGluZSBmb3Igc2VjdXJlZCBob3N0aW5nIG9mIFBXQXMgd2l0aCBDaXJjbGVDSSBhbmQgRmlyZWJhc2UuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7SGFwcHkgQ29kaW5nISZsdDsvcCZndDsKCiZsdDtociAvJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL2NvZGVyb25mbGVlaz9sYW5nPWVuJnF1b3Q7Jmd0O0Zpa2F5byZsdDsvYSZndDsgaXMgYSBmdWxsc3RhY2sgZGV2ZWxvcGVyIGFuZCBhdXRob3Igd2l0aCBvdmVyIGEgZGVjYWRlIG9mIGV4cGVyaWVuY2UgZGV2ZWxvcGluZyB3ZWIgYW5kIG1vYmlsZSBzb2x1dGlvbnMuIEhlIGlzIGN1cnJlbnRseSB0aGUgU29mdHdhcmUgTGVhZCBhdCBUZWNoIFNwZWNpYWxpc3QgQ29uc3VsdGluZyBhbmQgZGV2ZWxvcHMgY291cnNlcyBmb3IgUGFja3QgYW5kIFVkZW15LiBIZSBoYXMgYSBzdHJvbmcgcGFzc2lvbiBmb3IgdGVhY2hpbmcgYW5kIGhvcGVzIHRvIGJlY29tZSBhIGZ1bGwtdGltZSBhdXRob3IuJmx0Oy9wJmd0Owo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICA8L2NoYW5uZWw+CjwvcnNzPgo=
  recorded_at: Wed, 08 Jul 2020 18:52:26 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Jul 2020 18:52:27 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"5fe9208c2c029669","ot-tracer-traceid":"265589827e37f5ed","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1594234347081:c4b40b998798
      X-Obvious-Info:
      - 41556-795040d,795040d42b4
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Wed, 08 Jul 2020 19:07:27 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 03d15eb6330000a29797343200000001
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 5afc009d1d08a297-ORD
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+V2VkLCAwOCBKdWwgMjAyMCAxODo1MjoyNiBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE5LTA2LTE5VDIxOjM4OjA3LjU0OVo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPiYjeDIwMGE7Jm1kYXNoOyYjeDIwMGE7PGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9iZW5kaGFscGVybi9zdGF0dXMvOTQ4MjU2MDgzMzUyNzM1NzQ0Ij5AYmVuZGhhbHBlcm48L2E+PC9wPjwvYmxvY2txdW90ZT48c2NyaXB0IHNyYz0iLy9wbGF0Zm9ybS50d2l0dGVyLmNvbS93aWRnZXRzLmpzIiBjaGFyc2V0PSJ1dGYtOCI+PC9zY3JpcHQ+PHNjcmlwdD5mdW5jdGlvbiBub3RpZnlSZXNpemUoaGVpZ2h0KSB7aGVpZ2h0ID0gaGVpZ2h0ID8gaGVpZ2h0IDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm9mZnNldEhlaWdodDsgdmFyIHJlc2l6ZWQgPSBmYWxzZTsgaWYgKHdpbmRvdy5kb25rZXkgJiYgZG9ua2V5LnJlc2l6ZSkge2RvbmtleS5yZXNpemUoaGVpZ2h0KTtyZXNpemVkID0gdHJ1ZTt9aWYgKHBhcmVudCAmJiBwYXJlbnQuX3Jlc2l6ZUlmcmFtZSkge3ZhciBvYmogPSB7aWZyYW1lOiB3aW5kb3cuZnJhbWVFbGVtZW50LCBoZWlnaHQ6IGhlaWdodH07IHBhcmVudC5fcmVzaXplSWZyYW1lKG9iaik7IHJlc2l6ZWQgPSB0cnVlO31pZiAod2luZG93LmxvY2F0aW9uICYmIHdpbmRvdy5sb2NhdGlvbi5oYXNoID09PSAiI2FtcD0xIiAmJiB3aW5kb3cucGFyZW50ICYmIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UpIHt3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKHtzZW50aW5lbDogImFtcCIsIHR5cGU6ICJlbWJlZC1zaXplIiwgaGVpZ2h0OiBoZWlnaHR9LCAiKiIpO31pZiAod2luZG93LndlYmtpdCAmJiB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycyAmJiB3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5yZXNpemUpIHt3aW5kb3cud2Via2l0Lm1lc3NhZ2VIYW5kbGVycy5yZXNpemUucG9zdE1lc3NhZ2UoaGVpZ2h0KTsgcmVzaXplZCA9IHRydWU7fXJldHVybiByZXNpemVkO310d3R0ci5ldmVudHMuYmluZCgncmVuZGVyZWQnLCBmdW5jdGlvbiAoZXZlbnQpIHtub3RpZnlSZXNpemUoKTt9KTsgdHd0dHIuZXZlbnRzLmJpbmQoJ3Jlc2l6ZScsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOzwvc2NyaXB0PjxzY3JpcHQ+aWYgKHBhcmVudCAmJiBwYXJlbnQuX3Jlc2l6ZUlmcmFtZSkge3ZhciBtYXhXaWR0aCA9IHBhcnNlSW50KHdpbmRvdy5mcmFtZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCJ3aWR0aCIpKTsgaWYgKCA1MDAgIDwgbWF4V2lkdGgpIHt3aW5kb3cuZnJhbWVFbGVtZW50LnNldEF0dHJpYnV0ZSgid2lkdGgiLCAiNTAwIik7fX08L3NjcmlwdD48cD5HaXRodWIgZ2lzdMKgaGVyZTwvcD48aWZyYW1lIHNyYz0iIiB3aWR0aD0iMCIgaGVpZ2h0PSIwIiBmcmFtZWJvcmRlcj0iMCIgc2Nyb2xsaW5nPSJubyI+PGEgaHJlZj0iaHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWYiPmh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83NzdhZThiN2Q4OTE2ZTU2NWI4NGI3MDRjMDg4Y2YwYy9ocmVmPC9hPjwvaWZyYW1lPjxwPmNvZGUgYmxvY2s8L3A+PHByZT50ZXN0c2V0c2V0c2V0c2V0c2V0c2V0IGxldHMgaW50cm9kdWNlIHNvbWUge3sgY2hhb3MgfX08L3ByZT48cHJlPkhlcmUmIzM5O3MgbW9yZSB7eyB3aGF0IH19PC9wcmU+PHA+c29tZSBtb3JlIGNvZGUgYW5kIHt7IFZBUklBQkxFIH19IGFuZCA8c3Ryb25nPjxlbT57eyBIVE1MwqB9fTwvZW0+PC9zdHJvbmc+PC9wPjxoMz57eyBob3cgYWJvdXQgdGhpc8KgfX08L2gzPjxpbWcgc3JjPSJodHRwczovL21lZGl1bS5jb20vXy9zdGF0P2V2ZW50PXBvc3QuY2xpZW50Vmlld2VkJnJlZmVycmVyU291cmNlPWZ1bGxfcnNzJnBvc3RJZD02YWYwNGI3ZTU3ZTEiIHdpZHRoPSIxIiBoZWlnaHQ9IjEiPl1dPjwvY29udGVudDplbmNvZGVkPgogICAgICAgIDwvaXRlbT4KICAgIDwvY2hhbm5lbD4KPC9yc3M+
  recorded_at: Wed, 08 Jul 2020 18:52:27 GMT
recorded_with: VCR 6.0.0
