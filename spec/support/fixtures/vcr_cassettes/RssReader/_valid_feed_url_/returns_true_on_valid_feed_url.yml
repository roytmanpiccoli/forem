---
http_interactions:
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 19 May 2020 12:06:17 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Opentracing:
      - '{"ot-tracer-spanid":"408b17574027707f","ot-tracer-traceid":"2aa95f96443d2a62","ot-tracer-sampled":"true"}'
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://glyph.medium.com https://*.paypal.com https://*.braintree-api.com
        https://*.braintreegateway.com https://getpocket.com https://medium.com https://*.medium.com
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://*.branch.io
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-static-1.medium.com ''self''; frame-src chromenull: https: webviewprogressproxy:
        medium: ''self''; img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co
        https://d1fcbxp97j4nb2.cloudfront.net https://d262ilb51hltx0.cloudfront.net
        https://*.medium.com https://gomiro.medium.com https://miro.medium.com https://pbs.twimg.com
        ''self'' blob:; object-src ''self''; script-src ''unsafe-eval'' ''unsafe-inline''
        about: https: ''self''; style-src ''unsafe-inline'' data: https: ''self'';
        report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1589889977627:c328a69944ed
      X-Obvious-Info:
      - 41053-1bc14bc,1bc14bcede9
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Tue, 19 May 2020 12:21:17 GMT
      Pragma:
      - private
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 595db0e7baf70f72-MXP
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-25=":443"; ma=86400, h3-24=":443"; ma=86400, h3-23=":443";
        ma=86400
      Cf-Request-Id:
      - 02ce6ce4d600000f726e9aa200000001
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 19 May 2020 12:06:17 GMT
recorded_with: VCR 5.1.0
